{
  "solcInput": {
    "sources": {
      "DragonDrink.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\n\r\ncontract DragonDrink is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, UUPSUpgradeable {\r\n    address public questContract;\r\n    address public dailyCheckContract;\r\n    address public battleContract;\r\n    address public exploreContract;\r\n\r\n    event MintTokens(address indexed to, uint256 amount);\r\n\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n    function initialize(address initialOwner) initializer public {\r\n        __ERC20_init(\"DragonDrink\", \"DDK\");\r\n        __ERC20Burnable_init();\r\n        __Ownable_init(initialOwner);\r\n        __UUPSUpgradeable_init();\r\n    }\r\n\r\n    function setQuestContract(address _questContract) external onlyOwner {\r\n        questContract = _questContract;\r\n    }\r\n\r\n    function setDailyCheckContract(address _dailyCheckContract) external onlyOwner {\r\n        dailyCheckContract = _dailyCheckContract;\r\n    }\r\n\r\n    function setBattleContract(address _battleContract) external onlyOwner {\r\n        battleContract = _battleContract;\r\n    }\r\n\r\n    function setExploreContract(address _exploreContract) external onlyOwner {\r\n        exploreContract = _exploreContract;\r\n    } \r\n\r\n    function mint(address to, uint256 amount) external {\r\n        //require(msg.sender == questContract || msg.sender == dailyCheckContract || msg.sender == battleContract || msg.sender == exploreContract, \"Only the quest contract can mint tokens\");\r\n        _mint(to, amount * (10**decimals()));\r\n\r\n        emit MintTokens(to, amount);\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation)\r\n        internal\r\n        onlyOwner\r\n        override\r\n    {}\r\n\r\n    // Override the transfer functions to disable transfers\r\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\r\n        revert(\"Transfers are disabled\");\r\n    }\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\r\n        revert(\"Transfers are disabled\");\r\n    }\r\n}"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ContextUpgradeable} from \"../../../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
      }
    },
    "target": "DragonDrink.sol"
  },
  "solcOutput": {
    "contracts": {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "OwnableUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
            "errors": {
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ],
              "OwnableInvalidOwner(address)": [
                {
                  "details": "The owner is not a valid owner account. (eg. `address(0)`)"
                }
              ],
              "OwnableUnauthorizedAccount(address)": [
                {
                  "details": "The caller account is not authorized to perform an operation."
                }
              ]
            },
            "events": {
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              }
            },
            "kind": "dev",
            "methods": {
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "Initializable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "devdoc": {
            "custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
            "details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
            "errors": {
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ]
            },
            "events": {
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              }
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
        "UUPSUpgradeable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "AddressEmptyCode",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidImplementation",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ERC1967NonPayable",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedInnerCall",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UUPSUnauthorizedCallContext",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "slot",
                  "type": "bytes32"
                }
              ],
              "name": "UUPSUnsupportedProxiableUUID",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "UPGRADE_INTERFACE_VERSION",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proxiableUUID",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "upgradeToAndCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
            "errors": {
              "AddressEmptyCode(address)": [
                {
                  "details": "There's no code at `target` (it is not a contract)."
                }
              ],
              "ERC1967InvalidImplementation(address)": [
                {
                  "details": "The `implementation` of the proxy is invalid."
                }
              ],
              "ERC1967NonPayable()": [
                {
                  "details": "An upgrade function sees `msg.value > 0` that may be lost."
                }
              ],
              "FailedInnerCall()": [
                {
                  "details": "A call to an address target failed. The target may have reverted."
                }
              ],
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ],
              "UUPSUnauthorizedCallContext()": [
                {
                  "details": "The call is from an unauthorized context."
                }
              ],
              "UUPSUnsupportedProxiableUUID(bytes32)": [
                {
                  "details": "The storage `slot` is unsupported as a UUID."
                }
              ]
            },
            "events": {
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              },
              "Upgraded(address)": {
                "details": "Emitted when the implementation is upgraded."
              }
            },
            "kind": "dev",
            "methods": {
              "proxiableUUID()": {
                "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
              },
              "upgradeToAndCall(address,bytes)": {
                "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
                "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
              }
            },
            "stateVariables": {
              "UPGRADE_INTERFACE_VERSION": {
                "details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
              },
              "__self": {
                "custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
              "proxiableUUID()": "52d1902d",
              "upgradeToAndCall(address,bytes)": "4f1ef286"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "ERC20Upgradeable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
            "errors": {
              "ERC20InsufficientAllowance(address,uint256,uint256)": [
                {
                  "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
                  "params": {
                    "allowance": "Amount of tokens a `spender` is allowed to operate with.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC20InsufficientBalance(address,uint256,uint256)": [
                {
                  "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
                  "params": {
                    "balance": "Current balance for the interacting account.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC20InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSpender(address)": [
                {
                  "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
                  "params": {
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ]
            },
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "See {IERC20-allowance}."
              },
              "approve(address,uint256)": {
                "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
              },
              "balanceOf(address)": {
                "details": "See {IERC20-balanceOf}."
              },
              "decimals()": {
                "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
              },
              "name()": {
                "details": "Returns the name of the token."
              },
              "symbol()": {
                "details": "Returns the symbol of the token, usually a shorter version of the name."
              },
              "totalSupply()": {
                "details": "See {IERC20-totalSupply}."
              },
              "transfer(address,uint256)": {
                "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
              },
              "transferFrom(address,address,uint256)": {
                "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "ERC20BurnableUpgradeable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
            "errors": {
              "ERC20InsufficientAllowance(address,uint256,uint256)": [
                {
                  "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
                  "params": {
                    "allowance": "Amount of tokens a `spender` is allowed to operate with.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC20InsufficientBalance(address,uint256,uint256)": [
                {
                  "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
                  "params": {
                    "balance": "Current balance for the interacting account.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC20InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSpender(address)": [
                {
                  "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
                  "params": {
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ]
            },
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "See {IERC20-allowance}."
              },
              "approve(address,uint256)": {
                "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
              },
              "balanceOf(address)": {
                "details": "See {IERC20-balanceOf}."
              },
              "burn(uint256)": {
                "details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
              },
              "burnFrom(address,uint256)": {
                "details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
              },
              "decimals()": {
                "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
              },
              "name()": {
                "details": "Returns the name of the token."
              },
              "symbol()": {
                "details": "Returns the symbol of the token, usually a shorter version of the name."
              },
              "totalSupply()": {
                "details": "See {IERC20-totalSupply}."
              },
              "transfer(address,uint256)": {
                "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
              },
              "transferFrom(address,address,uint256)": {
                "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":\"ERC20BurnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "ContextUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "devdoc": {
            "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
            "errors": {
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ]
            },
            "events": {
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              }
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "IERC1822Proxiable": {
          "abi": [
            {
              "inputs": [],
              "name": "proxiableUUID",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
            "kind": "dev",
            "methods": {
              "proxiableUUID()": {
                "details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "proxiableUUID()": "52d1902d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "devdoc": {
            "details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
            "errors": {
              "ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
                {
                  "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
                  "params": {
                    "balance": "Current balance for the interacting account.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "sender": "Address whose tokens are being transferred.",
                    "tokenId": "Identifier number of a token."
                  }
                }
              ],
              "ERC1155InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC1155InvalidArrayLength(uint256,uint256)": [
                {
                  "details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
                  "params": {
                    "idsLength": "Length of the array of token identifiers",
                    "valuesLength": "Length of the array of token amounts"
                  }
                }
              ],
              "ERC1155InvalidOperator(address)": [
                {
                  "details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
                  "params": {
                    "operator": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC1155InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC1155InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC1155MissingApprovalForAll(address,address)": [
                {
                  "details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
                  "params": {
                    "operator": "Address that may be allowed to operate on tokens without being their owner.",
                    "owner": "Address of the current owner of a token."
                  }
                }
              ]
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "devdoc": {
            "details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
            "errors": {
              "ERC20InsufficientAllowance(address,uint256,uint256)": [
                {
                  "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
                  "params": {
                    "allowance": "Amount of tokens a `spender` is allowed to operate with.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC20InsufficientBalance(address,uint256,uint256)": [
                {
                  "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
                  "params": {
                    "balance": "Current balance for the interacting account.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC20InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSpender(address)": [
                {
                  "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
                  "params": {
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ]
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "devdoc": {
            "details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
            "errors": {
              "ERC721IncorrectOwner(address,uint256,address)": [
                {
                  "details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
                  "params": {
                    "owner": "Address of the current owner of a token.",
                    "sender": "Address whose tokens are being transferred.",
                    "tokenId": "Identifier number of a token."
                  }
                }
              ],
              "ERC721InsufficientApproval(address,uint256)": [
                {
                  "details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
                  "params": {
                    "operator": "Address that may be allowed to operate on tokens without being their owner.",
                    "tokenId": "Identifier number of a token."
                  }
                }
              ],
              "ERC721InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC721InvalidOperator(address)": [
                {
                  "details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
                  "params": {
                    "operator": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC721InvalidOwner(address)": [
                {
                  "details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
                  "params": {
                    "owner": "Address of the current owner of a token."
                  }
                }
              ],
              "ERC721InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC721InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC721NonexistentToken(uint256)": [
                {
                  "details": "Indicates a `tokenId` whose `owner` is the zero address.",
                  "params": {
                    "tokenId": "Identifier number of a token."
                  }
                }
              ]
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "ERC1967Utils": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidAdmin",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "beacon",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidBeacon",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidImplementation",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ERC1967NonPayable",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "previousAdmin",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "beacon",
                  "type": "address"
                }
              ],
              "name": "BeaconUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            }
          ],
          "devdoc": {
            "details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
            "errors": {
              "ERC1967InvalidAdmin(address)": [
                {
                  "details": "The `admin` of the proxy is invalid."
                }
              ],
              "ERC1967InvalidBeacon(address)": [
                {
                  "details": "The `beacon` of the proxy is invalid."
                }
              ],
              "ERC1967InvalidImplementation(address)": [
                {
                  "details": "The `implementation` of the proxy is invalid."
                }
              ],
              "ERC1967NonPayable()": [
                {
                  "details": "An upgrade function sees `msg.value > 0` that may be lost."
                }
              ]
            },
            "events": {
              "AdminChanged(address,address)": {
                "details": "Emitted when the admin account has changed."
              },
              "BeaconUpgraded(address)": {
                "details": "Emitted when the beacon is changed."
              },
              "Upgraded(address)": {
                "details": "Emitted when the implementation is upgraded."
              }
            },
            "kind": "dev",
            "methods": {},
            "stateVariables": {
              "ADMIN_SLOT": {
                "details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
              },
              "BEACON_SLOT": {
                "details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
              },
              "IMPLEMENTATION_SLOT": {
                "details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033\n}\n",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033",
              "opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xB9 MULMOD PUSH23 0x27847E7B1B3961AC8917BFAEEAAD3D7F005987E102606 0x22 CALLVALUE BASEFEE 0xC CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
              "sourceMap": "449:6273:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xB9 MULMOD PUSH23 0x27847E7B1B3961AC8917BFAEEAAD3D7F005987E102606 0x22 CALLVALUE BASEFEE 0xC CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
              "sourceMap": "449:6273:8:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17000",
                "executionCost": "92",
                "totalCost": "17092"
              },
              "internal": {
                "_checkNonPayable()": "infinite",
                "_setAdmin(address)": "infinite",
                "_setBeacon(address)": "infinite",
                "_setImplementation(address)": "infinite",
                "changeAdmin(address)": "infinite",
                "getAdmin()": "infinite",
                "getBeacon()": "infinite",
                "getImplementation()": "infinite",
                "upgradeBeaconToAndCall(address,bytes memory)": "infinite",
                "upgradeToAndCall(address,bytes memory)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH #[$]",
                  "source": 8,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH [$]",
                  "source": 8,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "B"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "DUP3",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "DUP3",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "DUP3",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "CODECOPY",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "DUP1",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "MLOAD",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "0"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "BYTE",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "73"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "EQ",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH [tag]",
                  "source": 8,
                  "value": "1"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "JUMPI",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "0"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "MSTORE",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "0"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "4"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "MSTORE",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "24"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "0"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "REVERT",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "tag",
                  "source": 8,
                  "value": "1"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "JUMPDEST",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "ADDRESS",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "0"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "MSTORE",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "PUSH",
                  "source": 8,
                  "value": "73"
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "DUP2",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "MSTORE8",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "DUP3",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "DUP2",
                  "source": 8
                },
                {
                  "begin": 449,
                  "end": 6722,
                  "name": "RETURN",
                  "source": 8
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033",
                  ".code": [
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSHDEPLOYADDRESS",
                      "source": 8
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "ADDRESS",
                      "source": 8
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "EQ",
                      "source": 8
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 8,
                      "value": "80"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 8,
                      "value": "40"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "MSTORE",
                      "source": 8
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "DUP1",
                      "source": 8
                    },
                    {
                      "begin": 449,
                      "end": 6722,
                      "name": "REVERT",
                      "source": 8
                    }
                  ]
                }
              },
              "sourceList": [
                "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
                "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
                "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
                "@openzeppelin/contracts/utils/Address.sol",
                "@openzeppelin/contracts/utils/StorageSlot.sol",
                "DragonDrink.sol",
                "#utility.yul"
              ]
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "IBeacon": {
          "abi": [
            {
              "inputs": [],
              "name": "implementation",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "This is the interface that {BeaconProxy} expects of its beacon.",
            "kind": "dev",
            "methods": {
              "implementation()": {
                "details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "implementation()": "5c60da1b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 standard as defined in the EIP.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the value of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the value of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface for the optional metadata functions from the ERC20 standard.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the value of tokens owned by `account`."
              },
              "decimals()": {
                "details": "Returns the decimals places of the token."
              },
              "name()": {
                "details": "Returns the name of the token."
              },
              "symbol()": {
                "details": "Returns the symbol of the token."
              },
              "totalSupply()": {
                "details": "Returns the value of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "legacyAssembly": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "Address": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "AddressEmptyCode",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "AddressInsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedInnerCall",
              "type": "error"
            }
          ],
          "devdoc": {
            "details": "Collection of functions related to the address type",
            "errors": {
              "AddressEmptyCode(address)": [
                {
                  "details": "There's no code at `target` (it is not a contract)."
                }
              ],
              "AddressInsufficientBalance(address)": [
                {
                  "details": "The ETH balance of the account is not enough to perform the operation."
                }
              ],
              "FailedInnerCall()": [
                {
                  "details": "A call to an address target failed. The target may have reverted."
                }
              ]
            },
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
              "opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
              "sourceMap": "195:6066:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
              "sourceMap": "195:6066:12:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17000",
                "executionCost": "92",
                "totalCost": "17092"
              },
              "internal": {
                "_revert(bytes memory)": "infinite",
                "functionCall(address,bytes memory)": "infinite",
                "functionCallWithValue(address,bytes memory,uint256)": "infinite",
                "functionDelegateCall(address,bytes memory)": "infinite",
                "functionStaticCall(address,bytes memory)": "infinite",
                "sendValue(address payable,uint256)": "infinite",
                "verifyCallResult(bool,bytes memory)": "infinite",
                "verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH #[$]",
                  "source": 12,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH [$]",
                  "source": 12,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "B"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "DUP3",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "DUP3",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "DUP3",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "CODECOPY",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "DUP1",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "MLOAD",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "0"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "BYTE",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "73"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "EQ",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH [tag]",
                  "source": 12,
                  "value": "1"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "JUMPI",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "0"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "MSTORE",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "0"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "4"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "MSTORE",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "24"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "0"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "REVERT",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "tag",
                  "source": 12,
                  "value": "1"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "JUMPDEST",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "ADDRESS",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "0"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "MSTORE",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "PUSH",
                  "source": 12,
                  "value": "73"
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "DUP2",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "MSTORE8",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "DUP3",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "DUP2",
                  "source": 12
                },
                {
                  "begin": 195,
                  "end": 6261,
                  "name": "RETURN",
                  "source": 12
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
                  ".code": [
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSHDEPLOYADDRESS",
                      "source": 12
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "ADDRESS",
                      "source": 12
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "EQ",
                      "source": 12
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 12,
                      "value": "80"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 12,
                      "value": "40"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "MSTORE",
                      "source": 12
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "PUSH",
                      "source": 12,
                      "value": "0"
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "DUP1",
                      "source": 12
                    },
                    {
                      "begin": 195,
                      "end": 6261,
                      "name": "REVERT",
                      "source": 12
                    }
                  ]
                }
              },
              "sourceList": [
                "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
                "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
                "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
                "@openzeppelin/contracts/utils/Address.sol",
                "@openzeppelin/contracts/utils/StorageSlot.sol",
                "DragonDrink.sol",
                "#utility.yul"
              ]
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol": {
        "StorageSlot": {
          "abi": [],
          "devdoc": {
            "details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033\n}\n",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
              "opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
              "sourceMap": "1245:2685:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
              "sourceMap": "1245:2685:13:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17000",
                "executionCost": "92",
                "totalCost": "17092"
              },
              "internal": {
                "getAddressSlot(bytes32)": "infinite",
                "getBooleanSlot(bytes32)": "infinite",
                "getBytes32Slot(bytes32)": "infinite",
                "getBytesSlot(bytes storage pointer)": "infinite",
                "getBytesSlot(bytes32)": "infinite",
                "getStringSlot(bytes32)": "infinite",
                "getStringSlot(string storage pointer)": "infinite",
                "getUint256Slot(bytes32)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH #[$]",
                  "source": 13,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH [$]",
                  "source": 13,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "B"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "DUP3",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "DUP3",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "DUP3",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "CODECOPY",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "DUP1",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "MLOAD",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "0"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "BYTE",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "73"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "EQ",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH [tag]",
                  "source": 13,
                  "value": "1"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "JUMPI",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "0"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "MSTORE",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "0"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "4"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "MSTORE",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "24"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "0"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "REVERT",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "tag",
                  "source": 13,
                  "value": "1"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "JUMPDEST",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "ADDRESS",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "0"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "MSTORE",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "PUSH",
                  "source": 13,
                  "value": "73"
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "DUP2",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "MSTORE8",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "DUP3",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "DUP2",
                  "source": 13
                },
                {
                  "begin": 1245,
                  "end": 3930,
                  "name": "RETURN",
                  "source": 13
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
                  ".code": [
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSHDEPLOYADDRESS",
                      "source": 13
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "ADDRESS",
                      "source": 13
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "EQ",
                      "source": 13
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 13,
                      "value": "80"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 13,
                      "value": "40"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "MSTORE",
                      "source": 13
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "PUSH",
                      "source": 13,
                      "value": "0"
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "DUP1",
                      "source": 13
                    },
                    {
                      "begin": 1245,
                      "end": 3930,
                      "name": "REVERT",
                      "source": 13
                    }
                  ]
                }
              },
              "sourceList": [
                "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
                "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
                "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
                "@openzeppelin/contracts/utils/Address.sol",
                "@openzeppelin/contracts/utils/StorageSlot.sol",
                "DragonDrink.sol",
                "#utility.yul"
              ]
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "DragonDrink.sol": {
        "DragonDrink": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "AddressEmptyCode",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidImplementation",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ERC1967NonPayable",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedInnerCall",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_battleContract",
                  "type": "address"
                }
              ],
              "name": "setBattleContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_exploreContract",
                  "type": "address"
                }
              ],
              "name": "setExploreContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "UUPSUnauthorizedCallContext",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "slot",
                  "type": "bytes32"
                }
              ],
              "name": "UUPSUnsupportedProxiableUUID",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "MintTokens",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_dailyCheckContract",
                  "type": "address"
                }
              ],
              "name": "setDailyCheckContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_questContract",
                  "type": "address"
                }
              ],
              "name": "setQuestContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "upgradeToAndCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "battleContract",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dailyCheckContract",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "exploreContract",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "proxiableUUID",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "questContract",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "UPGRADE_INTERFACE_VERSION",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "errors": {
              "AddressEmptyCode(address)": [
                {
                  "details": "There's no code at `target` (it is not a contract)."
                }
              ],
              "ERC1967InvalidImplementation(address)": [
                {
                  "details": "The `implementation` of the proxy is invalid."
                }
              ],
              "ERC1967NonPayable()": [
                {
                  "details": "An upgrade function sees `msg.value > 0` that may be lost."
                }
              ],
              "ERC20InsufficientAllowance(address,uint256,uint256)": [
                {
                  "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
                  "params": {
                    "allowance": "Amount of tokens a `spender` is allowed to operate with.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "ERC20InsufficientBalance(address,uint256,uint256)": [
                {
                  "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
                  "params": {
                    "balance": "Current balance for the interacting account.",
                    "needed": "Minimum amount required to perform a transfer.",
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidApprover(address)": [
                {
                  "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
                  "params": {
                    "approver": "Address initiating an approval operation."
                  }
                }
              ],
              "ERC20InvalidReceiver(address)": [
                {
                  "details": "Indicates a failure with the token `receiver`. Used in transfers.",
                  "params": {
                    "receiver": "Address to which tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSender(address)": [
                {
                  "details": "Indicates a failure with the token `sender`. Used in transfers.",
                  "params": {
                    "sender": "Address whose tokens are being transferred."
                  }
                }
              ],
              "ERC20InvalidSpender(address)": [
                {
                  "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
                  "params": {
                    "spender": "Address that may be allowed to operate on tokens without being their owner."
                  }
                }
              ],
              "FailedInnerCall()": [
                {
                  "details": "A call to an address target failed. The target may have reverted."
                }
              ],
              "InvalidInitialization()": [
                {
                  "details": "The contract is already initialized."
                }
              ],
              "NotInitializing()": [
                {
                  "details": "The contract is not initializing."
                }
              ],
              "OwnableInvalidOwner(address)": [
                {
                  "details": "The owner is not a valid owner account. (eg. `address(0)`)"
                }
              ],
              "OwnableUnauthorizedAccount(address)": [
                {
                  "details": "The caller account is not authorized to perform an operation."
                }
              ],
              "UUPSUnauthorizedCallContext()": [
                {
                  "details": "The call is from an unauthorized context."
                }
              ],
              "UUPSUnsupportedProxiableUUID(bytes32)": [
                {
                  "details": "The storage `slot` is unsupported as a UUID."
                }
              ]
            },
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Initialized(uint64)": {
                "details": "Triggered when the contract has been initialized or reinitialized."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              },
              "Upgraded(address)": {
                "details": "Emitted when the implementation is upgraded."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "See {IERC20-allowance}."
              },
              "approve(address,uint256)": {
                "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
              },
              "balanceOf(address)": {
                "details": "See {IERC20-balanceOf}."
              },
              "burn(uint256)": {
                "details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
              },
              "burnFrom(address,uint256)": {
                "details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
              },
              "decimals()": {
                "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
              },
              "name()": {
                "details": "Returns the name of the token."
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "proxiableUUID()": {
                "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
              },
              "symbol()": {
                "details": "Returns the symbol of the token, usually a shorter version of the name."
              },
              "totalSupply()": {
                "details": "See {IERC20-totalSupply}."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              },
              "upgradeToAndCall(address,bytes)": {
                "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
                "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
              }
            },
            "version": 1
          },
          "evm": {
            "assembly": "    /* \"DragonDrink.sol\":475:2472  contract DragonDrink is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"DragonDrink.sol\":812:867  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DragonDrink.sol\":837:859  _disableInitializers() */\n  tag_4\n    /* \"DragonDrink.sol\":837:857  _disableInitializers */\n  shl(0x20, tag_5)\n    /* \"DragonDrink.sol\":837:859  _disableInitializers() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"DragonDrink.sol\":475:2472  contract DragonDrink is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7856  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  tag_8\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7883  _getInitializableStorage */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7859:7885  _getInitializableStorage() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7826:7885  InitializableStorage storage $ = _getInitializableStorage() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7901  $ */\n  dup1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  0x00\n  add\n  0x08\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  0xf92ee8a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8003:8019  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  dup1\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7986  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  0x00\n  add\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  0xffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8052:8068  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8036  $ */\n  dup2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8049  $._initialized */\n  0x00\n  add\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8099:8115  type(uint64).max */\n  0xffffffffffffffff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:108   */\ntag_15:\n    /* \"#utility.yul\":43:50   */\n  0x00\n    /* \"#utility.yul\":83:101   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":76:81   */\n  dup3\n    /* \"#utility.yul\":72:102   */\n  and\n    /* \"#utility.yul\":61:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":114:229   */\ntag_16:\n    /* \"#utility.yul\":199:222   */\n  tag_20\n    /* \"#utility.yul\":216:221   */\n  dup2\n    /* \"#utility.yul\":199:222   */\n  tag_15\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":194:197   */\n  dup3\n    /* \"#utility.yul\":187:223   */\n  mstore\n    /* \"#utility.yul\":114:229   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":235:453   */\ntag_13:\n    /* \"#utility.yul\":326:330   */\n  0x00\n    /* \"#utility.yul\":364:366   */\n  0x20\n    /* \"#utility.yul\":353:362   */\n  dup3\n    /* \"#utility.yul\":349:367   */\n  add\n    /* \"#utility.yul\":341:367   */\n  swap1\n  pop\n    /* \"#utility.yul\":377:446   */\n  tag_22\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":432:441   */\n  dup4\n    /* \"#utility.yul\":428:445   */\n  add\n    /* \"#utility.yul\":419:425   */\n  dup5\n    /* \"#utility.yul\":377:446   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":235:453   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"DragonDrink.sol\":475:2472  contract DragonDrink is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\ntag_6:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"DragonDrink.sol\":475:2472  contract DragonDrink is Initializable, ERC20Upgradeable, ERC20BurnableUpgradeable, OwnableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a6940cc\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe4b8c4d4\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xfe5a45d0\n      eq\n      tag_28\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x79cc6790\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7fae588d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x6a6940cc\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_29:\n      dup1\n      0x313ce567\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x42966c68\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x55ccbff7\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x423b1ca3\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0db6dff7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x21098461\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DragonDrink.sol\":1374:1496  function setBattleContract(address _battleContract) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DragonDrink.sol\":1228:1366  function setDailyCheckContract(address _dailyCheckContract) external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"DragonDrink.sol\":2314:2469  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DragonDrink.sol\":1639:1978  function mint(address to, uint256 amount) external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"DragonDrink.sol\":676:705  address public battleContract */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":931:1018  function burn(uint256 value) public virtual {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_12:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DragonDrink.sol\":712:742  address public exploreContract */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DragonDrink.sol\":601:629  address public questContract */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1334:1492  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"DragonDrink.sol\":1102:1220  function setQuestContract(address _questContract) external onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DragonDrink.sol\":2171:2306  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DragonDrink.sol\":873:1094  function initialize(address initialOwner) initializer public {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      tag_144\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DragonDrink.sol\":1504:1630  function setExploreContract(address _exploreContract) external onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n    tag_147:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      stop\n        /* \"DragonDrink.sol\":636:669  address public dailyCheckContract */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3056:3069  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3081:3103  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3124  _getERC20Storage() */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3122  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3124  _getERC20Storage() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3081:3124  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3141:3142  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3141:3148  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3134:3148  return $._name */\n      dup1\n      sload\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_163\n      swap1\n      tag_162\n      jump\t// in\n    tag_163:\n      dup1\n      iszero\n      tag_164\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_165\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_164)\n    tag_165:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_166:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_166\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_164:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5578:5582  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5594:5607  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5622  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5620  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5622  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5594:5622  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5663  _approve(owner, spender, value) */\n      tag_170\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5641:5646  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5648:5655  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5657:5662  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5640  _approve */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5663  _approve(owner, spender, value) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5680:5684  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5673:5684  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DragonDrink.sol\":1374:1496  function setBattleContract(address _battleContract) external onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"DragonDrink.sol\":1473:1488  _battleContract */\n      dup1\n        /* \"DragonDrink.sol\":1456:1470  battleContract */\n      0x02\n      0x00\n        /* \"DragonDrink.sol\":1456:1488  battleContract = _battleContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DragonDrink.sol\":1374:1496  function setBattleContract(address _battleContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4250  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4284  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4305  _getERC20Storage() */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4303  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4305  _getERC20Storage() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4305  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4322:4323  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4322:4336  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4315:4336  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"DragonDrink.sol\":1228:1366  function setDailyCheckContract(address _dailyCheckContract) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"DragonDrink.sol\":1339:1358  _dailyCheckContract */\n      dup1\n        /* \"DragonDrink.sol\":1318:1336  dailyCheckContract */\n      0x01\n      0x00\n        /* \"DragonDrink.sol\":1318:1358  dailyCheckContract = _dailyCheckContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DragonDrink.sol\":1228:1366  function setDailyCheckContract(address _dailyCheckContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"DragonDrink.sol\":2314:2469  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_65:\n        /* \"DragonDrink.sol\":2412:2416  bool */\n      0x00\n        /* \"DragonDrink.sol\":2429:2461  revert(\"Transfers are disabled\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4103  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4122:4124  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4115:4124  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"DragonDrink.sol\":1639:1978  function mint(address to, uint256 amount) external {... */\n    tag_75:\n        /* \"DragonDrink.sol\":1894:1930  _mint(to, amount * (10**decimals())) */\n      tag_186\n        /* \"DragonDrink.sol\":1900:1902  to */\n      dup3\n        /* \"DragonDrink.sol\":1918:1928  decimals() */\n      tag_187\n        /* \"DragonDrink.sol\":1918:1926  decimals */\n      tag_69\n        /* \"DragonDrink.sol\":1918:1928  decimals() */\n      jump\t// in\n    tag_187:\n        /* \"DragonDrink.sol\":1914:1916  10 */\n      0x0a\n        /* \"DragonDrink.sol\":1914:1928  10**decimals() */\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"DragonDrink.sol\":1904:1910  amount */\n      dup4\n        /* \"DragonDrink.sol\":1904:1929  amount * (10**decimals()) */\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"DragonDrink.sol\":1894:1899  _mint */\n      tag_192\n        /* \"DragonDrink.sol\":1894:1930  _mint(to, amount * (10**decimals())) */\n      jump\t// in\n    tag_186:\n        /* \"DragonDrink.sol\":1959:1961  to */\n      dup2\n        /* \"DragonDrink.sol\":1948:1970  MintTokens(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7b47457f3af09e5f794b020fd74160963a808f5985883496a096d403d380c343\n        /* \"DragonDrink.sol\":1963:1969  amount */\n      dup3\n        /* \"DragonDrink.sol\":1948:1970  MintTokens(to, amount) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DragonDrink.sol\":1639:1978  function mint(address to, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DragonDrink.sol\":676:705  address public battleContract */\n    tag_78:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":931:1018  function burn(uint256 value) public virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":985:1011  _burn(_msgSender(), value) */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":991:1003  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":991:1001  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":991:1003  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1005:1010  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":985:990  _burn */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":985:1011  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":931:1018  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3800:3832  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3793:3832  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"DragonDrink.sol\":712:742  address public exploreContract */\n    tag_97:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"DragonDrink.sol\":601:629  address public questContract */\n    tag_101:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4466:4473  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4485:4507  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4528  _getERC20Storage() */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4526  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4528  _getERC20Storage() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4485:4528  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4546  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4556  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4565  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4564  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4565  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4538:4565  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1334:1492  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1409:1454  _spendAllowance(account, _msgSender(), value) */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1425:1432  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1434:1446  _msgSender() */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1434:1444  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1434:1446  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1448:1453  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1409:1424  _spendAllowance */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1409:1454  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1464:1485  _burn(account, value) */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1470:1477  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1479:1484  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1464:1469  _burn */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1464:1485  _burn(account, value) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":1334:1492  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DragonDrink.sol\":1102:1220  function setQuestContract(address _questContract) external onlyOwner {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_223:\n        /* \"DragonDrink.sol\":1198:1212  _questContract */\n      dup1\n        /* \"DragonDrink.sol\":1182:1195  questContract */\n      0x00\n      dup1\n        /* \"DragonDrink.sol\":1182:1212  questContract = _questContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DragonDrink.sol\":1102:1220  function setQuestContract(address _questContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3315:3328  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3340:3362  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3383  _getERC20Storage() */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3381  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3383  _getERC20Storage() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3340:3383  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3400:3401  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3400:3409  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3393:3409  return $._symbol */\n      dup1\n      sload\n      tag_230\n      swap1\n      tag_162\n      jump\t// in\n    tag_230:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_231\n      swap1\n      tag_162\n      jump\t// in\n    tag_231:\n      dup1\n      iszero\n      tag_232\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_233\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_232)\n    tag_233:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_234:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_234\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"DragonDrink.sol\":2171:2306  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_130:\n        /* \"DragonDrink.sol\":2249:2253  bool */\n      0x00\n        /* \"DragonDrink.sol\":2266:2298  revert(\"Transfers are disabled\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_183\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_134:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"DragonDrink.sol\":873:1094  function initialize(address initialOwner) initializer public {... */\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_240\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_241\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_244:\n        /* \"DragonDrink.sol\":945:979  __ERC20_init(\"DragonDrink\", \"DDK\") */\n      tag_246\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x447261676f6e4472696e6b000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x44444b0000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"DragonDrink.sol\":945:957  __ERC20_init */\n      tag_247\n        /* \"DragonDrink.sol\":945:979  __ERC20_init(\"DragonDrink\", \"DDK\") */\n      jump\t// in\n    tag_246:\n        /* \"DragonDrink.sol\":990:1012  __ERC20Burnable_init() */\n      tag_248\n        /* \"DragonDrink.sol\":990:1010  __ERC20Burnable_init */\n      tag_249\n        /* \"DragonDrink.sol\":990:1012  __ERC20Burnable_init() */\n      jump\t// in\n    tag_248:\n        /* \"DragonDrink.sol\":1023:1051  __Ownable_init(initialOwner) */\n      tag_250\n        /* \"DragonDrink.sol\":1038:1050  initialOwner */\n      dup7\n        /* \"DragonDrink.sol\":1023:1037  __Ownable_init */\n      tag_251\n        /* \"DragonDrink.sol\":1023:1051  __Ownable_init(initialOwner) */\n      jump\t// in\n    tag_250:\n        /* \"DragonDrink.sol\":1062:1086  __UUPSUpgradeable_init() */\n      tag_252\n        /* \"DragonDrink.sol\":1062:1084  __UUPSUpgradeable_init */\n      tag_253\n        /* \"DragonDrink.sol\":1062:1086  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_255\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DragonDrink.sol\":873:1094  function initialize(address initialOwner) initializer public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5083:5090  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5102:5124  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5145  _getERC20Storage() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5143  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5145  _getERC20Storage() */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5102:5145  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5163  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5175  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5182  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5176:5181  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5182  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5191  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5183:5190  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5191  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5155:5191  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DragonDrink.sol\":1504:1630  function setExploreContract(address _exploreContract) external onlyOwner {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_260\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_260:\n        /* \"DragonDrink.sol\":1606:1622  _exploreContract */\n      dup1\n        /* \"DragonDrink.sol\":1588:1603  exploreContract */\n      0x03\n      0x00\n        /* \"DragonDrink.sol\":1588:1622  exploreContract = _exploreContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DragonDrink.sol\":1504:1630  function setExploreContract(address _exploreContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_267\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"DragonDrink.sol\":636:669  address public dailyCheckContract */\n    tag_156:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2242:2395  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2292:2314  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2359:2379  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2349:2379  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2242:2395  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10264:10392  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10348:10385  _approve(owner, spender, value, true) */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10357:10362  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10364:10371  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10373:10378  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10380:10384  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10348:10356  _approve */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10348:10385  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10264:10392  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_275\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_121\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8996:9204  function _mint(address account, uint256 value) internal {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9085:9086  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9066:9087  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9066:9073  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9066:9087  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9062:9153  if (account == address(0)) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9139:9140  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9110:9142  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9062:9153  if (account == address(0)) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9162:9197  _update(address(0), account, value) */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9178:9179  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9182:9189  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9191:9196  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9162:9169  _update */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9162:9197  _update(address(0), account, value) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8996:9204  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9522:9728  function _burn(address account, uint256 value) internal {... */\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9611:9612  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9592:9613  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9592:9599  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9592:9613  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9588:9677  if (account == address(0)) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9663:9664  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9636:9666  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9588:9677  if (account == address(0)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9721  _update(account, address(0), value) */\n      tag_287\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9694:9701  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9711:9712  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9715:9720  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9693  _update */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9721  _update(account, address(0), value) */\n      jump\t// in\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9522:9728  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_289\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4779  ERC1967Utils.getImplementation */\n      tag_291\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_292:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"DragonDrink.sol\":1986:2102  function _authorizeUpgrade(address newImplementation)... */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_294:\n        /* \"DragonDrink.sol\":1986:2102  function _authorizeUpgrade(address newImplementation)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_297\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_298\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      0x01\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6555:6572  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6253:6285  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6249  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6341:6345  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_308\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_309\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_313\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11993:12470  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12092:12116  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12119:12144  allowance(owner, spender) */\n      tag_315\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12129:12134  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12136:12143  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12119:12128  allowance */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12119:12144  allowance(owner, spender) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12092:12144  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12178:12195  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12174  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12195  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12154:12464  if (currentAllowance != type(uint256).max) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12234:12239  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12215:12231  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12215:12239  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12211:12341  if (currentAllowance < value) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12293:12300  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12302:12318  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12320:12325  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12266:12326  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12211:12341  if (currentAllowance < value) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12382:12439  _approve(owner, spender, currentAllowance - value, false) */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12391:12396  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12398:12405  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12426:12431  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12407:12423  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12407:12431  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12433:12438  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12382:12390  _approve */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12382:12439  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12154:12464  if (currentAllowance != type(uint256).max) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12082:12470  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11993:12470  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2577:2724  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2717  __ERC20_init_unchained(name_, symbol_) */\n      tag_327\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2702:2707  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2709:2716  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2701  __ERC20_init_unchained */\n      tag_328\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2717  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2577:2724  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":666:731  function __ERC20Burnable_init() internal onlyInitializing {... */\n    tag_249:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":666:731  function __ERC20Burnable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2968:3035  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11224:11711  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11332:11354  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11357:11375  _getERC20Storage() */\n      tag_341\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11357:11373  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11357:11375  _getERC20Storage() */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11332:11375  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11406:11407  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11389:11408  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11389:11394  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11389:11408  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11474  if (owner == address(0)) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11460:11461  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11463  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_343\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11474  if (owner == address(0)) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11506:11507  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11487:11508  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11487:11494  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11487:11508  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11483:11573  if (spender == address(0)) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11559:11560  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11531:11562  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11483:11573  if (spender == address(0)) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11614:11619  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11583  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11595  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11602  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11596:11601  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11602  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11611  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11603:11610  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11611  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11619  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11633:11642  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11629:11705  if (emitEvent) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11679:11686  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11672:11677  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11688:11693  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_347\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11629:11705  if (emitEvent) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11322:11711  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11224:11711  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7483:8653  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7568:7590  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7593:7611  _getERC20Storage() */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7593:7609  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7593:7611  _getERC20Storage() */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7568:7611  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7641:7642  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7625:7643  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7625:7629  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7625:7643  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7779:7784  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7761:7762  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7761:7775  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7761:7784  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_351\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n      jump(tag_353)\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7815:7834  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7838  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7848  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7854  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7849:7853  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7854  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7815:7854  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7886:7891  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7872:7883  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7872:7891  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7868:7983  if (fromBalance < value) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7943:7947  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7949:7960  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7962:7967  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7968  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_319\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7868:7983  if (fromBalance < value) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8137:8142  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8123:8134  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8123:8142  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8104  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8114  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8120  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8115:8119  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8120  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8142  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7801:8167  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8195:8196  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8181:8197  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8181:8183  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8181:8197  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8362:8367  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8344:8345  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8344:8358  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8344:8367  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n      jump(tag_357)\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8576:8581  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8558  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8568  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8572  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8569:8571  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8572  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8581  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n    tag_357:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8636:8638  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8630:8634  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8640:8645  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      mload(0x40)\n      tag_358\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7558:8653  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7483:8653  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2009:2016  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_360\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2062:2081  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2061  StorageSlot.getAddressSlot */\n      tag_361\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2028:2088  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_363\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_364\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_363:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2931:2948  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2978:2979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2968  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      iszero\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_366\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_367\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_366:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      jump(tag_368)\n    tag_365:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_369\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_370\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_325:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_372\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_373\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2730:2946  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_328:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_376\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2842:2864  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2885  _getERC20Storage() */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2883  _getERC20Storage */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2885  _getERC20Storage() */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2842:2885  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2905:2910  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2896  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2902  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2910  $._name = name_ */\n      swap1\n      dup2\n      tag_379\n      swap2\n      swap1\n      tag_380\n      jump\t// in\n    tag_379:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2932:2939  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2921  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2929  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2939  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_381\n      swap2\n      swap1\n      tag_380\n      jump\t// in\n    tag_381:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2832:2946  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2730:2946  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_385\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_386\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_386:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_385:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1745:1766  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1854:1858  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1844:1858  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_390\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2349:2366  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_391\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2443:2460  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_392\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2414:2433  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2413  StorageSlot.getAddressSlot */\n      tag_361\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2440  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_394\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_394:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_398\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_397)\n    tag_398:\n      0x60\n      swap2\n      pop\n    tag_397:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_399\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_400\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6660:6661  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      iszero\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n    tag_402:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_404\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_404:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_400:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_406\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_407\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_408\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_409)\n    tag_406:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_410\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_410:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_411\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_412\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_412:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_411:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_405)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_409:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_405:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_414\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_414:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:106   */\n    tag_416:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_417:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_418:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_419:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_420:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_485\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_416\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":711:782   */\n      tag_486\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_417\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_487\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_418\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":881:910   */\n      tag_488\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_419\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_39:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_490\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_420\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_421:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_422:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_423:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_424:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_425:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_496\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_424\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_426:\n        /* \"#utility.yul\":1876:1900   */\n      tag_498\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_425\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_499:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_427:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_501\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_426\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_428:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_429:\n        /* \"#utility.yul\":2232:2256   */\n      tag_504\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_428\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_505:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_430:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_507\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_429\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_43:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_510\n      tag_422\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":2525:2644   */\n    tag_509:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_511\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_427\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_512\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_430\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_431:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_432:\n        /* \"#utility.yul\":3089:3110   */\n      tag_515\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_431\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_46:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_517\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_432\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_50:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_520\n      tag_422\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":3415:3534   */\n    tag_519:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_521\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_427\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_433:\n        /* \"#utility.yul\":3761:3785   */\n      tag_523\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_428\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_56:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_525\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_433\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_64:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_528\n      tag_422\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":4136:4255   */\n    tag_527:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_529\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_427\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_530\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_427\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_531\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_430\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_434:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_435:\n        /* \"#utility.yul\":4826:4848   */\n      tag_534\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_434\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_71:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_536\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_435\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_436:\n        /* \"#utility.yul\":5168:5192   */\n      tag_538\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_425\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_80:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_540\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_436\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_84:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_543\n      tag_422\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":5509:5628   */\n    tag_542:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_544\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_430\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:5885   */\n    tag_437:\n        /* \"#utility.yul\":5877:5878   */\n      0x00\n        /* \"#utility.yul\":5874:5875   */\n      dup1\n        /* \"#utility.yul\":5867:5879   */\n      revert\n        /* \"#utility.yul\":5891:6008   */\n    tag_438:\n        /* \"#utility.yul\":6000:6001   */\n      0x00\n        /* \"#utility.yul\":5997:5998   */\n      dup1\n        /* \"#utility.yul\":5990:6002   */\n      revert\n        /* \"#utility.yul\":6014:6194   */\n    tag_439:\n        /* \"#utility.yul\":6062:6139   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6059:6060   */\n      0x00\n        /* \"#utility.yul\":6052:6140   */\n      mstore\n        /* \"#utility.yul\":6159:6163   */\n      0x41\n        /* \"#utility.yul\":6156:6157   */\n      0x04\n        /* \"#utility.yul\":6149:6164   */\n      mstore\n        /* \"#utility.yul\":6183:6187   */\n      0x24\n        /* \"#utility.yul\":6180:6181   */\n      0x00\n        /* \"#utility.yul\":6173:6188   */\n      revert\n        /* \"#utility.yul\":6200:6481   */\n    tag_440:\n        /* \"#utility.yul\":6283:6310   */\n      tag_549\n        /* \"#utility.yul\":6305:6309   */\n      dup3\n        /* \"#utility.yul\":6283:6310   */\n      tag_419\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":6275:6281   */\n      dup2\n        /* \"#utility.yul\":6271:6311   */\n      add\n        /* \"#utility.yul\":6413:6419   */\n      dup2\n        /* \"#utility.yul\":6401:6411   */\n      dup2\n        /* \"#utility.yul\":6398:6420   */\n      lt\n        /* \"#utility.yul\":6377:6395   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6365:6375   */\n      dup3\n        /* \"#utility.yul\":6362:6396   */\n      gt\n        /* \"#utility.yul\":6359:6421   */\n      or\n        /* \"#utility.yul\":6356:6444   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":6424:6442   */\n      tag_551\n      tag_439\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":6356:6444   */\n    tag_550:\n        /* \"#utility.yul\":6464:6474   */\n      dup1\n        /* \"#utility.yul\":6460:6462   */\n      0x40\n        /* \"#utility.yul\":6453:6475   */\n      mstore\n        /* \"#utility.yul\":6243:6481   */\n      pop\n        /* \"#utility.yul\":6200:6481   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6487:6616   */\n    tag_441:\n        /* \"#utility.yul\":6521:6527   */\n      0x00\n        /* \"#utility.yul\":6548:6568   */\n      tag_553\n      tag_421\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":6538:6568   */\n      swap1\n      pop\n        /* \"#utility.yul\":6577:6610   */\n      tag_554\n        /* \"#utility.yul\":6605:6609   */\n      dup3\n        /* \"#utility.yul\":6597:6603   */\n      dup3\n        /* \"#utility.yul\":6577:6610   */\n      tag_440\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":6487:6616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6622:6929   */\n    tag_442:\n        /* \"#utility.yul\":6683:6687   */\n      0x00\n        /* \"#utility.yul\":6773:6791   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6765:6771   */\n      dup3\n        /* \"#utility.yul\":6762:6792   */\n      gt\n        /* \"#utility.yul\":6759:6815   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":6795:6813   */\n      tag_557\n      tag_439\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":6759:6815   */\n    tag_556:\n        /* \"#utility.yul\":6833:6862   */\n      tag_558\n        /* \"#utility.yul\":6855:6861   */\n      dup3\n        /* \"#utility.yul\":6833:6862   */\n      tag_419\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":6825:6862   */\n      swap1\n      pop\n        /* \"#utility.yul\":6917:6921   */\n      0x20\n        /* \"#utility.yul\":6911:6915   */\n      dup2\n        /* \"#utility.yul\":6907:6922   */\n      add\n        /* \"#utility.yul\":6899:6922   */\n      swap1\n      pop\n        /* \"#utility.yul\":6622:6929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6935:7083   */\n    tag_443:\n        /* \"#utility.yul\":7033:7039   */\n      dup3\n        /* \"#utility.yul\":7028:7031   */\n      dup2\n        /* \"#utility.yul\":7023:7026   */\n      dup4\n        /* \"#utility.yul\":7010:7040   */\n      calldatacopy\n        /* \"#utility.yul\":7074:7075   */\n      0x00\n        /* \"#utility.yul\":7065:7071   */\n      dup4\n        /* \"#utility.yul\":7060:7063   */\n      dup4\n        /* \"#utility.yul\":7056:7072   */\n      add\n        /* \"#utility.yul\":7049:7076   */\n      mstore\n        /* \"#utility.yul\":6935:7083   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7089:7512   */\n    tag_444:\n        /* \"#utility.yul\":7166:7171   */\n      0x00\n        /* \"#utility.yul\":7191:7256   */\n      tag_561\n        /* \"#utility.yul\":7207:7255   */\n      tag_562\n        /* \"#utility.yul\":7248:7254   */\n      dup5\n        /* \"#utility.yul\":7207:7255   */\n      tag_442\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":7191:7256   */\n      tag_441\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":7182:7256   */\n      swap1\n      pop\n        /* \"#utility.yul\":7279:7285   */\n      dup3\n        /* \"#utility.yul\":7272:7277   */\n      dup2\n        /* \"#utility.yul\":7265:7286   */\n      mstore\n        /* \"#utility.yul\":7317:7321   */\n      0x20\n        /* \"#utility.yul\":7310:7315   */\n      dup2\n        /* \"#utility.yul\":7306:7322   */\n      add\n        /* \"#utility.yul\":7355:7358   */\n      dup5\n        /* \"#utility.yul\":7346:7352   */\n      dup5\n        /* \"#utility.yul\":7341:7344   */\n      dup5\n        /* \"#utility.yul\":7337:7353   */\n      add\n        /* \"#utility.yul\":7334:7359   */\n      gt\n        /* \"#utility.yul\":7331:7443   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":7362:7441   */\n      tag_564\n      tag_438\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":7331:7443   */\n    tag_563:\n        /* \"#utility.yul\":7452:7506   */\n      tag_565\n        /* \"#utility.yul\":7499:7505   */\n      dup5\n        /* \"#utility.yul\":7494:7497   */\n      dup3\n        /* \"#utility.yul\":7489:7492   */\n      dup6\n        /* \"#utility.yul\":7452:7506   */\n      tag_443\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":7172:7512   */\n      pop\n        /* \"#utility.yul\":7089:7512   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7531:7869   */\n    tag_445:\n        /* \"#utility.yul\":7586:7591   */\n      0x00\n        /* \"#utility.yul\":7635:7638   */\n      dup3\n        /* \"#utility.yul\":7628:7632   */\n      0x1f\n        /* \"#utility.yul\":7620:7626   */\n      dup4\n        /* \"#utility.yul\":7616:7633   */\n      add\n        /* \"#utility.yul\":7612:7639   */\n      slt\n        /* \"#utility.yul\":7602:7724   */\n      tag_567\n      jumpi\n        /* \"#utility.yul\":7643:7722   */\n      tag_568\n      tag_437\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":7602:7724   */\n    tag_567:\n        /* \"#utility.yul\":7760:7766   */\n      dup2\n        /* \"#utility.yul\":7747:7767   */\n      calldataload\n        /* \"#utility.yul\":7785:7863   */\n      tag_569\n        /* \"#utility.yul\":7859:7862   */\n      dup5\n        /* \"#utility.yul\":7851:7857   */\n      dup3\n        /* \"#utility.yul\":7844:7848   */\n      0x20\n        /* \"#utility.yul\":7836:7842   */\n      dup7\n        /* \"#utility.yul\":7832:7849   */\n      add\n        /* \"#utility.yul\":7785:7863   */\n      tag_444\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":7776:7863   */\n      swap2\n      pop\n        /* \"#utility.yul\":7592:7869   */\n      pop\n        /* \"#utility.yul\":7531:7869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7875:8527   */\n    tag_88:\n        /* \"#utility.yul\":7952:7958   */\n      0x00\n        /* \"#utility.yul\":7960:7966   */\n      dup1\n        /* \"#utility.yul\":8009:8011   */\n      0x40\n        /* \"#utility.yul\":7997:8006   */\n      dup4\n        /* \"#utility.yul\":7988:7995   */\n      dup6\n        /* \"#utility.yul\":7984:8007   */\n      sub\n        /* \"#utility.yul\":7980:8012   */\n      slt\n        /* \"#utility.yul\":7977:8096   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":8015:8094   */\n      tag_572\n      tag_422\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":7977:8096   */\n    tag_571:\n        /* \"#utility.yul\":8135:8136   */\n      0x00\n        /* \"#utility.yul\":8160:8213   */\n      tag_573\n        /* \"#utility.yul\":8205:8212   */\n      dup6\n        /* \"#utility.yul\":8196:8202   */\n      dup3\n        /* \"#utility.yul\":8185:8194   */\n      dup7\n        /* \"#utility.yul\":8181:8203   */\n      add\n        /* \"#utility.yul\":8160:8213   */\n      tag_427\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":8150:8213   */\n      swap3\n      pop\n        /* \"#utility.yul\":8106:8223   */\n      pop\n        /* \"#utility.yul\":8290:8292   */\n      0x20\n        /* \"#utility.yul\":8279:8288   */\n      dup4\n        /* \"#utility.yul\":8275:8293   */\n      add\n        /* \"#utility.yul\":8262:8294   */\n      calldataload\n        /* \"#utility.yul\":8321:8339   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8313:8319   */\n      dup2\n        /* \"#utility.yul\":8310:8340   */\n      gt\n        /* \"#utility.yul\":8307:8424   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":8343:8422   */\n      tag_575\n      tag_423\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":8307:8424   */\n    tag_574:\n        /* \"#utility.yul\":8448:8510   */\n      tag_576\n        /* \"#utility.yul\":8502:8509   */\n      dup6\n        /* \"#utility.yul\":8493:8499   */\n      dup3\n        /* \"#utility.yul\":8482:8491   */\n      dup7\n        /* \"#utility.yul\":8478:8500   */\n      add\n        /* \"#utility.yul\":8448:8510   */\n      tag_445\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":8438:8510   */\n      swap2\n      pop\n        /* \"#utility.yul\":8233:8520   */\n      pop\n        /* \"#utility.yul\":7875:8527   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8533:8610   */\n    tag_446:\n        /* \"#utility.yul\":8570:8577   */\n      0x00\n        /* \"#utility.yul\":8599:8604   */\n      dup2\n        /* \"#utility.yul\":8588:8604   */\n      swap1\n      pop\n        /* \"#utility.yul\":8533:8610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8616:8734   */\n    tag_447:\n        /* \"#utility.yul\":8703:8727   */\n      tag_579\n        /* \"#utility.yul\":8721:8726   */\n      dup2\n        /* \"#utility.yul\":8703:8727   */\n      tag_446\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":8698:8701   */\n      dup3\n        /* \"#utility.yul\":8691:8728   */\n      mstore\n        /* \"#utility.yul\":8616:8734   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8740:8962   */\n    tag_94:\n        /* \"#utility.yul\":8833:8837   */\n      0x00\n        /* \"#utility.yul\":8871:8873   */\n      0x20\n        /* \"#utility.yul\":8860:8869   */\n      dup3\n        /* \"#utility.yul\":8856:8874   */\n      add\n        /* \"#utility.yul\":8848:8874   */\n      swap1\n      pop\n        /* \"#utility.yul\":8884:8955   */\n      tag_581\n        /* \"#utility.yul\":8952:8953   */\n      0x00\n        /* \"#utility.yul\":8941:8950   */\n      dup4\n        /* \"#utility.yul\":8937:8954   */\n      add\n        /* \"#utility.yul\":8928:8934   */\n      dup5\n        /* \"#utility.yul\":8884:8955   */\n      tag_447\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":8740:8962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8968:9442   */\n    tag_143:\n        /* \"#utility.yul\":9036:9042   */\n      0x00\n        /* \"#utility.yul\":9044:9050   */\n      dup1\n        /* \"#utility.yul\":9093:9095   */\n      0x40\n        /* \"#utility.yul\":9081:9090   */\n      dup4\n        /* \"#utility.yul\":9072:9079   */\n      dup6\n        /* \"#utility.yul\":9068:9091   */\n      sub\n        /* \"#utility.yul\":9064:9096   */\n      slt\n        /* \"#utility.yul\":9061:9180   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":9099:9178   */\n      tag_584\n      tag_422\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":9061:9180   */\n    tag_583:\n        /* \"#utility.yul\":9219:9220   */\n      0x00\n        /* \"#utility.yul\":9244:9297   */\n      tag_585\n        /* \"#utility.yul\":9289:9296   */\n      dup6\n        /* \"#utility.yul\":9280:9286   */\n      dup3\n        /* \"#utility.yul\":9269:9278   */\n      dup7\n        /* \"#utility.yul\":9265:9287   */\n      add\n        /* \"#utility.yul\":9244:9297   */\n      tag_427\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":9234:9297   */\n      swap3\n      pop\n        /* \"#utility.yul\":9190:9307   */\n      pop\n        /* \"#utility.yul\":9346:9348   */\n      0x20\n        /* \"#utility.yul\":9372:9425   */\n      tag_586\n        /* \"#utility.yul\":9417:9424   */\n      dup6\n        /* \"#utility.yul\":9408:9414   */\n      dup3\n        /* \"#utility.yul\":9397:9406   */\n      dup7\n        /* \"#utility.yul\":9393:9415   */\n      add\n        /* \"#utility.yul\":9372:9425   */\n      tag_427\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":9362:9425   */\n      swap2\n      pop\n        /* \"#utility.yul\":9317:9435   */\n      pop\n        /* \"#utility.yul\":8968:9442   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9448:9628   */\n    tag_448:\n        /* \"#utility.yul\":9496:9573   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9493:9494   */\n      0x00\n        /* \"#utility.yul\":9486:9574   */\n      mstore\n        /* \"#utility.yul\":9593:9597   */\n      0x22\n        /* \"#utility.yul\":9590:9591   */\n      0x04\n        /* \"#utility.yul\":9583:9598   */\n      mstore\n        /* \"#utility.yul\":9617:9621   */\n      0x24\n        /* \"#utility.yul\":9614:9615   */\n      0x00\n        /* \"#utility.yul\":9607:9622   */\n      revert\n        /* \"#utility.yul\":9634:9954   */\n    tag_162:\n        /* \"#utility.yul\":9678:9684   */\n      0x00\n        /* \"#utility.yul\":9715:9716   */\n      0x02\n        /* \"#utility.yul\":9709:9713   */\n      dup3\n        /* \"#utility.yul\":9705:9717   */\n      div\n        /* \"#utility.yul\":9695:9717   */\n      swap1\n      pop\n        /* \"#utility.yul\":9762:9763   */\n      0x01\n        /* \"#utility.yul\":9756:9760   */\n      dup3\n        /* \"#utility.yul\":9752:9764   */\n      and\n        /* \"#utility.yul\":9783:9801   */\n      dup1\n        /* \"#utility.yul\":9773:9854   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":9839:9843   */\n      0x7f\n        /* \"#utility.yul\":9831:9837   */\n      dup3\n        /* \"#utility.yul\":9827:9844   */\n      and\n        /* \"#utility.yul\":9817:9844   */\n      swap2\n      pop\n        /* \"#utility.yul\":9773:9854   */\n    tag_589:\n        /* \"#utility.yul\":9901:9903   */\n      0x20\n        /* \"#utility.yul\":9893:9899   */\n      dup3\n        /* \"#utility.yul\":9890:9904   */\n      lt\n        /* \"#utility.yul\":9870:9888   */\n      dup2\n        /* \"#utility.yul\":9867:9905   */\n      sub\n        /* \"#utility.yul\":9864:9948   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":9920:9938   */\n      tag_591\n      tag_448\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":9864:9948   */\n    tag_590:\n        /* \"#utility.yul\":9685:9954   */\n      pop\n        /* \"#utility.yul\":9634:9954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9960:10132   */\n    tag_449:\n        /* \"#utility.yul\":10100:10124   */\n      0x5472616e7366657273206172652064697361626c656400000000000000000000\n        /* \"#utility.yul\":10096:10097   */\n      0x00\n        /* \"#utility.yul\":10088:10094   */\n      dup3\n        /* \"#utility.yul\":10084:10098   */\n      add\n        /* \"#utility.yul\":10077:10125   */\n      mstore\n        /* \"#utility.yul\":9960:10132   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10138:10504   */\n    tag_450:\n        /* \"#utility.yul\":10280:10283   */\n      0x00\n        /* \"#utility.yul\":10301:10368   */\n      tag_594\n        /* \"#utility.yul\":10365:10367   */\n      0x16\n        /* \"#utility.yul\":10360:10363   */\n      dup4\n        /* \"#utility.yul\":10301:10368   */\n      tag_417\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":10294:10368   */\n      swap2\n      pop\n        /* \"#utility.yul\":10377:10470   */\n      tag_595\n        /* \"#utility.yul\":10466:10469   */\n      dup3\n        /* \"#utility.yul\":10377:10470   */\n      tag_449\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":10495:10497   */\n      0x20\n        /* \"#utility.yul\":10490:10493   */\n      dup3\n        /* \"#utility.yul\":10486:10498   */\n      add\n        /* \"#utility.yul\":10479:10498   */\n      swap1\n      pop\n        /* \"#utility.yul\":10138:10504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10510:10929   */\n    tag_183:\n        /* \"#utility.yul\":10676:10680   */\n      0x00\n        /* \"#utility.yul\":10714:10716   */\n      0x20\n        /* \"#utility.yul\":10703:10712   */\n      dup3\n        /* \"#utility.yul\":10699:10717   */\n      add\n        /* \"#utility.yul\":10691:10717   */\n      swap1\n      pop\n        /* \"#utility.yul\":10763:10772   */\n      dup2\n        /* \"#utility.yul\":10757:10761   */\n      dup2\n        /* \"#utility.yul\":10753:10773   */\n      sub\n        /* \"#utility.yul\":10749:10750   */\n      0x00\n        /* \"#utility.yul\":10738:10747   */\n      dup4\n        /* \"#utility.yul\":10734:10751   */\n      add\n        /* \"#utility.yul\":10727:10774   */\n      mstore\n        /* \"#utility.yul\":10791:10922   */\n      tag_597\n        /* \"#utility.yul\":10917:10921   */\n      dup2\n        /* \"#utility.yul\":10791:10922   */\n      tag_450\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":10783:10922   */\n      swap1\n      pop\n        /* \"#utility.yul\":10510:10929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10935:11115   */\n    tag_451:\n        /* \"#utility.yul\":10983:11060   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10980:10981   */\n      0x00\n        /* \"#utility.yul\":10973:11061   */\n      mstore\n        /* \"#utility.yul\":11080:11084   */\n      0x11\n        /* \"#utility.yul\":11077:11078   */\n      0x04\n        /* \"#utility.yul\":11070:11085   */\n      mstore\n        /* \"#utility.yul\":11104:11108   */\n      0x24\n        /* \"#utility.yul\":11101:11102   */\n      0x00\n        /* \"#utility.yul\":11094:11109   */\n      revert\n        /* \"#utility.yul\":11121:11223   */\n    tag_452:\n        /* \"#utility.yul\":11163:11171   */\n      0x00\n        /* \"#utility.yul\":11210:11215   */\n      dup2\n        /* \"#utility.yul\":11207:11208   */\n      0x01\n        /* \"#utility.yul\":11203:11216   */\n      shr\n        /* \"#utility.yul\":11182:11216   */\n      swap1\n      pop\n        /* \"#utility.yul\":11121:11223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11229:12077   */\n    tag_453:\n        /* \"#utility.yul\":11290:11295   */\n      0x00\n        /* \"#utility.yul\":11297:11301   */\n      dup1\n        /* \"#utility.yul\":11321:11327   */\n      dup3\n        /* \"#utility.yul\":11312:11327   */\n      swap2\n      pop\n        /* \"#utility.yul\":11345:11350   */\n      dup4\n        /* \"#utility.yul\":11336:11350   */\n      swap1\n      pop\n        /* \"#utility.yul\":11359:12071   */\n    tag_601:\n        /* \"#utility.yul\":11380:11381   */\n      0x01\n        /* \"#utility.yul\":11370:11378   */\n      dup6\n        /* \"#utility.yul\":11367:11382   */\n      gt\n        /* \"#utility.yul\":11359:12071   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":11475:11479   */\n      dup1\n        /* \"#utility.yul\":11470:11473   */\n      dup7\n        /* \"#utility.yul\":11466:11480   */\n      div\n        /* \"#utility.yul\":11460:11464   */\n      dup2\n        /* \"#utility.yul\":11457:11481   */\n      gt\n        /* \"#utility.yul\":11454:11504   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":11484:11502   */\n      tag_605\n      tag_451\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":11454:11504   */\n    tag_604:\n        /* \"#utility.yul\":11534:11535   */\n      0x01\n        /* \"#utility.yul\":11524:11532   */\n      dup6\n        /* \"#utility.yul\":11520:11536   */\n      and\n        /* \"#utility.yul\":11517:11968   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":11949:11953   */\n      dup1\n        /* \"#utility.yul\":11942:11947   */\n      dup3\n        /* \"#utility.yul\":11938:11954   */\n      mul\n        /* \"#utility.yul\":11929:11954   */\n      swap2\n      pop\n        /* \"#utility.yul\":11517:11968   */\n    tag_606:\n        /* \"#utility.yul\":11999:12003   */\n      dup1\n        /* \"#utility.yul\":11993:11997   */\n      dup2\n        /* \"#utility.yul\":11989:12004   */\n      mul\n        /* \"#utility.yul\":11981:12004   */\n      swap1\n      pop\n        /* \"#utility.yul\":12029:12061   */\n      tag_607\n        /* \"#utility.yul\":12052:12060   */\n      dup6\n        /* \"#utility.yul\":12029:12061   */\n      tag_452\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":12017:12061   */\n      swap5\n      pop\n        /* \"#utility.yul\":11359:12071   */\n      jump(tag_601)\n    tag_603:\n        /* \"#utility.yul\":11229:12077   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12083:13156   */\n    tag_454:\n        /* \"#utility.yul\":12137:12142   */\n      0x00\n        /* \"#utility.yul\":12328:12336   */\n      dup3\n        /* \"#utility.yul\":12318:12358   */\n      tag_609\n      jumpi\n        /* \"#utility.yul\":12349:12350   */\n      0x01\n        /* \"#utility.yul\":12340:12350   */\n      swap1\n      pop\n        /* \"#utility.yul\":12351:12356   */\n      jump(tag_608)\n        /* \"#utility.yul\":12318:12358   */\n    tag_609:\n        /* \"#utility.yul\":12377:12381   */\n      dup2\n        /* \"#utility.yul\":12367:12403   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":12394:12395   */\n      0x00\n        /* \"#utility.yul\":12385:12395   */\n      swap1\n      pop\n        /* \"#utility.yul\":12396:12401   */\n      jump(tag_608)\n        /* \"#utility.yul\":12367:12403   */\n    tag_610:\n        /* \"#utility.yul\":12463:12467   */\n      dup2\n        /* \"#utility.yul\":12511:12512   */\n      0x01\n        /* \"#utility.yul\":12506:12533   */\n      dup2\n      eq\n      tag_612\n      jumpi\n        /* \"#utility.yul\":12547:12548   */\n      0x02\n        /* \"#utility.yul\":12542:12733   */\n      dup2\n      eq\n      tag_613\n      jumpi\n        /* \"#utility.yul\":12456:12733   */\n      jump(tag_611)\n        /* \"#utility.yul\":12506:12533   */\n    tag_612:\n        /* \"#utility.yul\":12524:12525   */\n      0x01\n        /* \"#utility.yul\":12515:12525   */\n      swap2\n      pop\n        /* \"#utility.yul\":12526:12531   */\n      pop\n      jump(tag_608)\n        /* \"#utility.yul\":12542:12733   */\n    tag_613:\n        /* \"#utility.yul\":12587:12590   */\n      0xff\n        /* \"#utility.yul\":12577:12585   */\n      dup5\n        /* \"#utility.yul\":12574:12591   */\n      gt\n        /* \"#utility.yul\":12571:12614   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":12594:12612   */\n      tag_615\n      tag_451\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":12571:12614   */\n    tag_614:\n        /* \"#utility.yul\":12643:12651   */\n      dup4\n        /* \"#utility.yul\":12640:12641   */\n      0x02\n        /* \"#utility.yul\":12636:12652   */\n      exp\n        /* \"#utility.yul\":12627:12652   */\n      swap2\n      pop\n        /* \"#utility.yul\":12678:12681   */\n      dup5\n        /* \"#utility.yul\":12671:12676   */\n      dup3\n        /* \"#utility.yul\":12668:12682   */\n      gt\n        /* \"#utility.yul\":12665:12705   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":12685:12703   */\n      tag_617\n      tag_451\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":12665:12705   */\n    tag_616:\n        /* \"#utility.yul\":12718:12723   */\n      pop\n      jump(tag_608)\n        /* \"#utility.yul\":12456:12733   */\n    tag_611:\n      pop\n        /* \"#utility.yul\":12842:12844   */\n      0x20\n        /* \"#utility.yul\":12832:12840   */\n      dup4\n        /* \"#utility.yul\":12829:12845   */\n      lt\n        /* \"#utility.yul\":12823:12826   */\n      0x0133\n        /* \"#utility.yul\":12817:12821   */\n      dup4\n        /* \"#utility.yul\":12814:12827   */\n      lt\n        /* \"#utility.yul\":12810:12846   */\n      and\n        /* \"#utility.yul\":12792:12794   */\n      0x4e\n        /* \"#utility.yul\":12782:12790   */\n      dup5\n        /* \"#utility.yul\":12779:12795   */\n      lt\n        /* \"#utility.yul\":12774:12776   */\n      0x0b\n        /* \"#utility.yul\":12768:12772   */\n      dup5\n        /* \"#utility.yul\":12765:12777   */\n      lt\n        /* \"#utility.yul\":12761:12796   */\n      and\n        /* \"#utility.yul\":12745:12856   */\n      or\n        /* \"#utility.yul\":12742:12988   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":12898:12906   */\n      dup3\n        /* \"#utility.yul\":12892:12896   */\n      dup3\n        /* \"#utility.yul\":12888:12907   */\n      exp\n        /* \"#utility.yul\":12879:12907   */\n      swap1\n      pop\n        /* \"#utility.yul\":12933:12936   */\n      dup4\n        /* \"#utility.yul\":12926:12931   */\n      dup2\n        /* \"#utility.yul\":12923:12937   */\n      gt\n        /* \"#utility.yul\":12920:12960   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":12940:12958   */\n      tag_620\n      tag_451\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":12920:12960   */\n    tag_619:\n        /* \"#utility.yul\":12973:12978   */\n      jump(tag_608)\n        /* \"#utility.yul\":12742:12988   */\n    tag_618:\n        /* \"#utility.yul\":13013:13055   */\n      tag_621\n        /* \"#utility.yul\":13051:13054   */\n      dup5\n        /* \"#utility.yul\":13041:13049   */\n      dup5\n        /* \"#utility.yul\":13035:13039   */\n      dup5\n        /* \"#utility.yul\":13032:13033   */\n      0x01\n        /* \"#utility.yul\":13013:13055   */\n      tag_453\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":12998:13055   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":13087:13091   */\n      dup2\n        /* \"#utility.yul\":13082:13085   */\n      dup5\n        /* \"#utility.yul\":13078:13092   */\n      div\n        /* \"#utility.yul\":13071:13076   */\n      dup2\n        /* \"#utility.yul\":13068:13093   */\n      gt\n        /* \"#utility.yul\":13065:13116   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":13096:13114   */\n      tag_623\n      tag_451\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":13065:13116   */\n    tag_622:\n        /* \"#utility.yul\":13145:13149   */\n      dup2\n        /* \"#utility.yul\":13138:13143   */\n      dup2\n        /* \"#utility.yul\":13134:13150   */\n      mul\n        /* \"#utility.yul\":13125:13150   */\n      swap1\n      pop\n        /* \"#utility.yul\":12083:13156   */\n    tag_608:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13162:13443   */\n    tag_189:\n        /* \"#utility.yul\":13220:13225   */\n      0x00\n        /* \"#utility.yul\":13244:13267   */\n      tag_625\n        /* \"#utility.yul\":13262:13266   */\n      dup3\n        /* \"#utility.yul\":13244:13267   */\n      tag_428\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":13236:13267   */\n      swap2\n      pop\n        /* \"#utility.yul\":13288:13313   */\n      tag_626\n        /* \"#utility.yul\":13304:13312   */\n      dup4\n        /* \"#utility.yul\":13288:13313   */\n      tag_434\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":13276:13313   */\n      swap3\n      pop\n        /* \"#utility.yul\":13332:13436   */\n      tag_627\n        /* \"#utility.yul\":13369:13435   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13359:13367   */\n      dup5\n        /* \"#utility.yul\":13353:13357   */\n      dup5\n        /* \"#utility.yul\":13332:13436   */\n      tag_454\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":13323:13436   */\n      swap1\n      pop\n        /* \"#utility.yul\":13162:13443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13449:13859   */\n    tag_191:\n        /* \"#utility.yul\":13489:13496   */\n      0x00\n        /* \"#utility.yul\":13512:13532   */\n      tag_629\n        /* \"#utility.yul\":13530:13531   */\n      dup3\n        /* \"#utility.yul\":13512:13532   */\n      tag_428\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":13507:13532   */\n      swap2\n      pop\n        /* \"#utility.yul\":13546:13566   */\n      tag_630\n        /* \"#utility.yul\":13564:13565   */\n      dup4\n        /* \"#utility.yul\":13546:13566   */\n      tag_428\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":13541:13566   */\n      swap3\n      pop\n        /* \"#utility.yul\":13601:13602   */\n      dup3\n        /* \"#utility.yul\":13598:13599   */\n      dup3\n        /* \"#utility.yul\":13594:13603   */\n      mul\n        /* \"#utility.yul\":13623:13653   */\n      tag_631\n        /* \"#utility.yul\":13641:13652   */\n      dup2\n        /* \"#utility.yul\":13623:13653   */\n      tag_428\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":13612:13653   */\n      swap2\n      pop\n        /* \"#utility.yul\":13802:13803   */\n      dup3\n        /* \"#utility.yul\":13793:13800   */\n      dup3\n        /* \"#utility.yul\":13789:13804   */\n      div\n        /* \"#utility.yul\":13786:13787   */\n      dup5\n        /* \"#utility.yul\":13783:13805   */\n      eq\n        /* \"#utility.yul\":13763:13764   */\n      dup4\n        /* \"#utility.yul\":13756:13765   */\n      iszero\n        /* \"#utility.yul\":13736:13819   */\n      or\n        /* \"#utility.yul\":13713:13852   */\n      tag_632\n      jumpi\n        /* \"#utility.yul\":13832:13850   */\n      tag_633\n      tag_451\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":13713:13852   */\n    tag_632:\n        /* \"#utility.yul\":13497:13859   */\n      pop\n        /* \"#utility.yul\":13449:13859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13865:13950   */\n    tag_455:\n        /* \"#utility.yul\":13910:13917   */\n      0x00\n        /* \"#utility.yul\":13939:13944   */\n      dup2\n        /* \"#utility.yul\":13928:13944   */\n      swap1\n      pop\n        /* \"#utility.yul\":13865:13950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13956:14057   */\n    tag_456:\n        /* \"#utility.yul\":13992:13999   */\n      0x00\n        /* \"#utility.yul\":14032:14050   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14025:14030   */\n      dup3\n        /* \"#utility.yul\":14021:14051   */\n      and\n        /* \"#utility.yul\":14010:14051   */\n      swap1\n      pop\n        /* \"#utility.yul\":13956:14057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14063:14123   */\n    tag_457:\n        /* \"#utility.yul\":14091:14094   */\n      0x00\n        /* \"#utility.yul\":14112:14117   */\n      dup2\n        /* \"#utility.yul\":14105:14117   */\n      swap1\n      pop\n        /* \"#utility.yul\":14063:14123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14129:14285   */\n    tag_458:\n        /* \"#utility.yul\":14186:14195   */\n      0x00\n        /* \"#utility.yul\":14219:14279   */\n      tag_638\n        /* \"#utility.yul\":14236:14278   */\n      tag_639\n        /* \"#utility.yul\":14245:14277   */\n      tag_640\n        /* \"#utility.yul\":14271:14276   */\n      dup5\n        /* \"#utility.yul\":14245:14277   */\n      tag_455\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":14236:14278   */\n      tag_457\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":14219:14279   */\n      tag_456\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":14206:14279   */\n      swap1\n      pop\n        /* \"#utility.yul\":14129:14285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14291:14436   */\n    tag_459:\n        /* \"#utility.yul\":14385:14429   */\n      tag_642\n        /* \"#utility.yul\":14423:14428   */\n      dup2\n        /* \"#utility.yul\":14385:14429   */\n      tag_458\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":14380:14383   */\n      dup3\n        /* \"#utility.yul\":14373:14430   */\n      mstore\n        /* \"#utility.yul\":14291:14436   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14442:14678   */\n    tag_256:\n        /* \"#utility.yul\":14542:14546   */\n      0x00\n        /* \"#utility.yul\":14580:14582   */\n      0x20\n        /* \"#utility.yul\":14569:14578   */\n      dup3\n        /* \"#utility.yul\":14565:14583   */\n      add\n        /* \"#utility.yul\":14557:14583   */\n      swap1\n      pop\n        /* \"#utility.yul\":14593:14671   */\n      tag_644\n        /* \"#utility.yul\":14668:14669   */\n      0x00\n        /* \"#utility.yul\":14657:14666   */\n      dup4\n        /* \"#utility.yul\":14653:14670   */\n      add\n        /* \"#utility.yul\":14644:14650   */\n      dup5\n        /* \"#utility.yul\":14593:14671   */\n      tag_459\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":14442:14678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14684:14806   */\n    tag_460:\n        /* \"#utility.yul\":14757:14781   */\n      tag_646\n        /* \"#utility.yul\":14775:14780   */\n      dup2\n        /* \"#utility.yul\":14757:14781   */\n      tag_446\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":14750:14755   */\n      dup2\n        /* \"#utility.yul\":14747:14782   */\n      eq\n        /* \"#utility.yul\":14737:14800   */\n      tag_647\n      jumpi\n        /* \"#utility.yul\":14796:14797   */\n      0x00\n        /* \"#utility.yul\":14793:14794   */\n      dup1\n        /* \"#utility.yul\":14786:14798   */\n      revert\n        /* \"#utility.yul\":14737:14800   */\n    tag_647:\n        /* \"#utility.yul\":14684:14806   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14812:14955   */\n    tag_461:\n        /* \"#utility.yul\":14869:14874   */\n      0x00\n        /* \"#utility.yul\":14900:14906   */\n      dup2\n        /* \"#utility.yul\":14894:14907   */\n      mload\n        /* \"#utility.yul\":14885:14907   */\n      swap1\n      pop\n        /* \"#utility.yul\":14916:14949   */\n      tag_649\n        /* \"#utility.yul\":14943:14948   */\n      dup2\n        /* \"#utility.yul\":14916:14949   */\n      tag_460\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":14812:14955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14961:15312   */\n    tag_299:\n        /* \"#utility.yul\":15031:15037   */\n      0x00\n        /* \"#utility.yul\":15080:15082   */\n      0x20\n        /* \"#utility.yul\":15068:15077   */\n      dup3\n        /* \"#utility.yul\":15059:15066   */\n      dup5\n        /* \"#utility.yul\":15055:15078   */\n      sub\n        /* \"#utility.yul\":15051:15083   */\n      slt\n        /* \"#utility.yul\":15048:15167   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":15086:15165   */\n      tag_652\n      tag_422\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":15048:15167   */\n    tag_651:\n        /* \"#utility.yul\":15206:15207   */\n      0x00\n        /* \"#utility.yul\":15231:15295   */\n      tag_653\n        /* \"#utility.yul\":15287:15294   */\n      dup5\n        /* \"#utility.yul\":15278:15284   */\n      dup3\n        /* \"#utility.yul\":15267:15276   */\n      dup6\n        /* \"#utility.yul\":15263:15285   */\n      add\n        /* \"#utility.yul\":15231:15295   */\n      tag_461\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":15221:15295   */\n      swap2\n      pop\n        /* \"#utility.yul\":15177:15305   */\n      pop\n        /* \"#utility.yul\":14961:15312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15318:15760   */\n    tag_319:\n        /* \"#utility.yul\":15467:15471   */\n      0x00\n        /* \"#utility.yul\":15505:15507   */\n      0x60\n        /* \"#utility.yul\":15494:15503   */\n      dup3\n        /* \"#utility.yul\":15490:15508   */\n      add\n        /* \"#utility.yul\":15482:15508   */\n      swap1\n      pop\n        /* \"#utility.yul\":15518:15589   */\n      tag_655\n        /* \"#utility.yul\":15586:15587   */\n      0x00\n        /* \"#utility.yul\":15575:15584   */\n      dup4\n        /* \"#utility.yul\":15571:15588   */\n      add\n        /* \"#utility.yul\":15562:15568   */\n      dup7\n        /* \"#utility.yul\":15518:15589   */\n      tag_436\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":15599:15671   */\n      tag_656\n        /* \"#utility.yul\":15667:15669   */\n      0x20\n        /* \"#utility.yul\":15656:15665   */\n      dup4\n        /* \"#utility.yul\":15652:15670   */\n      add\n        /* \"#utility.yul\":15643:15649   */\n      dup6\n        /* \"#utility.yul\":15599:15671   */\n      tag_433\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":15681:15753   */\n      tag_657\n        /* \"#utility.yul\":15749:15751   */\n      0x40\n        /* \"#utility.yul\":15738:15747   */\n      dup4\n        /* \"#utility.yul\":15734:15752   */\n      add\n        /* \"#utility.yul\":15725:15731   */\n      dup5\n        /* \"#utility.yul\":15681:15753   */\n      tag_433\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":15318:15760   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15766:15957   */\n    tag_352:\n        /* \"#utility.yul\":15806:15809   */\n      0x00\n        /* \"#utility.yul\":15825:15845   */\n      tag_659\n        /* \"#utility.yul\":15843:15844   */\n      dup3\n        /* \"#utility.yul\":15825:15845   */\n      tag_428\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":15820:15845   */\n      swap2\n      pop\n        /* \"#utility.yul\":15859:15879   */\n      tag_660\n        /* \"#utility.yul\":15877:15878   */\n      dup4\n        /* \"#utility.yul\":15859:15879   */\n      tag_428\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":15854:15879   */\n      swap3\n      pop\n        /* \"#utility.yul\":15902:15903   */\n      dup3\n        /* \"#utility.yul\":15899:15900   */\n      dup3\n        /* \"#utility.yul\":15895:15904   */\n      add\n        /* \"#utility.yul\":15888:15904   */\n      swap1\n      pop\n        /* \"#utility.yul\":15923:15926   */\n      dup1\n        /* \"#utility.yul\":15920:15921   */\n      dup3\n        /* \"#utility.yul\":15917:15927   */\n      gt\n        /* \"#utility.yul\":15914:15950   */\n      iszero\n      tag_661\n      jumpi\n        /* \"#utility.yul\":15930:15948   */\n      tag_662\n      tag_451\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":15914:15950   */\n    tag_661:\n        /* \"#utility.yul\":15766:15957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15963:16104   */\n    tag_462:\n        /* \"#utility.yul\":16012:16016   */\n      0x00\n        /* \"#utility.yul\":16035:16038   */\n      dup2\n        /* \"#utility.yul\":16027:16038   */\n      swap1\n      pop\n        /* \"#utility.yul\":16058:16061   */\n      dup2\n        /* \"#utility.yul\":16055:16056   */\n      0x00\n        /* \"#utility.yul\":16048:16062   */\n      mstore\n        /* \"#utility.yul\":16092:16096   */\n      0x20\n        /* \"#utility.yul\":16089:16090   */\n      0x00\n        /* \"#utility.yul\":16079:16097   */\n      keccak256\n        /* \"#utility.yul\":16071:16097   */\n      swap1\n      pop\n        /* \"#utility.yul\":15963:16104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16110:16203   */\n    tag_463:\n        /* \"#utility.yul\":16147:16153   */\n      0x00\n        /* \"#utility.yul\":16194:16196   */\n      0x20\n        /* \"#utility.yul\":16189:16191   */\n      0x1f\n        /* \"#utility.yul\":16182:16187   */\n      dup4\n        /* \"#utility.yul\":16178:16192   */\n      add\n        /* \"#utility.yul\":16174:16197   */\n      div\n        /* \"#utility.yul\":16164:16197   */\n      swap1\n      pop\n        /* \"#utility.yul\":16110:16203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16209:16316   */\n    tag_464:\n        /* \"#utility.yul\":16253:16261   */\n      0x00\n        /* \"#utility.yul\":16303:16308   */\n      dup3\n        /* \"#utility.yul\":16297:16301   */\n      dup3\n        /* \"#utility.yul\":16293:16309   */\n      shl\n        /* \"#utility.yul\":16272:16309   */\n      swap1\n      pop\n        /* \"#utility.yul\":16209:16316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16322:16715   */\n    tag_465:\n        /* \"#utility.yul\":16391:16397   */\n      0x00\n        /* \"#utility.yul\":16441:16442   */\n      0x08\n        /* \"#utility.yul\":16429:16439   */\n      dup4\n        /* \"#utility.yul\":16425:16443   */\n      mul\n        /* \"#utility.yul\":16464:16561   */\n      tag_667\n        /* \"#utility.yul\":16494:16560   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16483:16492   */\n      dup3\n        /* \"#utility.yul\":16464:16561   */\n      tag_464\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":16582:16621   */\n      tag_668\n        /* \"#utility.yul\":16612:16620   */\n      dup7\n        /* \"#utility.yul\":16601:16610   */\n      dup4\n        /* \"#utility.yul\":16582:16621   */\n      tag_464\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":16570:16621   */\n      swap6\n      pop\n        /* \"#utility.yul\":16654:16658   */\n      dup1\n        /* \"#utility.yul\":16650:16659   */\n      not\n        /* \"#utility.yul\":16643:16648   */\n      dup5\n        /* \"#utility.yul\":16639:16660   */\n      and\n        /* \"#utility.yul\":16630:16660   */\n      swap4\n      pop\n        /* \"#utility.yul\":16703:16707   */\n      dup1\n        /* \"#utility.yul\":16693:16701   */\n      dup7\n        /* \"#utility.yul\":16689:16708   */\n      and\n        /* \"#utility.yul\":16682:16687   */\n      dup5\n        /* \"#utility.yul\":16679:16709   */\n      or\n        /* \"#utility.yul\":16669:16709   */\n      swap3\n      pop\n        /* \"#utility.yul\":16398:16715   */\n      pop\n      pop\n        /* \"#utility.yul\":16322:16715   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16721:16863   */\n    tag_466:\n        /* \"#utility.yul\":16771:16780   */\n      0x00\n        /* \"#utility.yul\":16804:16857   */\n      tag_670\n        /* \"#utility.yul\":16822:16856   */\n      tag_671\n        /* \"#utility.yul\":16831:16855   */\n      tag_672\n        /* \"#utility.yul\":16849:16854   */\n      dup5\n        /* \"#utility.yul\":16831:16855   */\n      tag_428\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":16822:16856   */\n      tag_457\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":16804:16857   */\n      tag_428\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":16791:16857   */\n      swap1\n      pop\n        /* \"#utility.yul\":16721:16863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16869:16944   */\n    tag_467:\n        /* \"#utility.yul\":16912:16915   */\n      0x00\n        /* \"#utility.yul\":16933:16938   */\n      dup2\n        /* \"#utility.yul\":16926:16938   */\n      swap1\n      pop\n        /* \"#utility.yul\":16869:16944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16950:17219   */\n    tag_468:\n        /* \"#utility.yul\":17060:17099   */\n      tag_675\n        /* \"#utility.yul\":17091:17098   */\n      dup4\n        /* \"#utility.yul\":17060:17099   */\n      tag_466\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":17121:17212   */\n      tag_676\n        /* \"#utility.yul\":17170:17211   */\n      tag_677\n        /* \"#utility.yul\":17194:17210   */\n      dup3\n        /* \"#utility.yul\":17170:17211   */\n      tag_467\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":17162:17168   */\n      dup5\n        /* \"#utility.yul\":17155:17159   */\n      dup5\n        /* \"#utility.yul\":17149:17160   */\n      sload\n        /* \"#utility.yul\":17121:17212   */\n      tag_465\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":17115:17119   */\n      dup3\n        /* \"#utility.yul\":17108:17213   */\n      sstore\n        /* \"#utility.yul\":17026:17219   */\n      pop\n        /* \"#utility.yul\":16950:17219   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17225:17298   */\n    tag_469:\n        /* \"#utility.yul\":17270:17273   */\n      0x00\n        /* \"#utility.yul\":17225:17298   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17304:17493   */\n    tag_470:\n        /* \"#utility.yul\":17381:17413   */\n      tag_680\n      tag_469\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":17422:17487   */\n      tag_681\n        /* \"#utility.yul\":17480:17486   */\n      dup2\n        /* \"#utility.yul\":17472:17478   */\n      dup5\n        /* \"#utility.yul\":17466:17470   */\n      dup5\n        /* \"#utility.yul\":17422:17487   */\n      tag_468\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":17357:17493   */\n      pop\n        /* \"#utility.yul\":17304:17493   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17499:17685   */\n    tag_471:\n        /* \"#utility.yul\":17559:17679   */\n    tag_683:\n        /* \"#utility.yul\":17576:17579   */\n      dup2\n        /* \"#utility.yul\":17569:17574   */\n      dup2\n        /* \"#utility.yul\":17566:17580   */\n      lt\n        /* \"#utility.yul\":17559:17679   */\n      iszero\n      tag_685\n      jumpi\n        /* \"#utility.yul\":17630:17669   */\n      tag_686\n        /* \"#utility.yul\":17667:17668   */\n      0x00\n        /* \"#utility.yul\":17660:17665   */\n      dup3\n        /* \"#utility.yul\":17630:17669   */\n      tag_470\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":17603:17604   */\n      0x01\n        /* \"#utility.yul\":17596:17601   */\n      dup2\n        /* \"#utility.yul\":17592:17605   */\n      add\n        /* \"#utility.yul\":17583:17605   */\n      swap1\n      pop\n        /* \"#utility.yul\":17559:17679   */\n      jump(tag_683)\n    tag_685:\n        /* \"#utility.yul\":17499:17685   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17691:18234   */\n    tag_472:\n        /* \"#utility.yul\":17792:17794   */\n      0x1f\n        /* \"#utility.yul\":17787:17790   */\n      dup3\n        /* \"#utility.yul\":17784:17795   */\n      gt\n        /* \"#utility.yul\":17781:18227   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":17826:17864   */\n      tag_689\n        /* \"#utility.yul\":17858:17863   */\n      dup2\n        /* \"#utility.yul\":17826:17864   */\n      tag_462\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":17910:17939   */\n      tag_690\n        /* \"#utility.yul\":17928:17938   */\n      dup5\n        /* \"#utility.yul\":17910:17939   */\n      tag_463\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":17900:17908   */\n      dup2\n        /* \"#utility.yul\":17896:17940   */\n      add\n        /* \"#utility.yul\":18093:18095   */\n      0x20\n        /* \"#utility.yul\":18081:18091   */\n      dup6\n        /* \"#utility.yul\":18078:18096   */\n      lt\n        /* \"#utility.yul\":18075:18124   */\n      iszero\n      tag_691\n      jumpi\n        /* \"#utility.yul\":18114:18122   */\n      dup2\n        /* \"#utility.yul\":18099:18122   */\n      swap1\n      pop\n        /* \"#utility.yul\":18075:18124   */\n    tag_691:\n        /* \"#utility.yul\":18137:18217   */\n      tag_692\n        /* \"#utility.yul\":18193:18215   */\n      tag_693\n        /* \"#utility.yul\":18211:18214   */\n      dup6\n        /* \"#utility.yul\":18193:18215   */\n      tag_463\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":18183:18191   */\n      dup4\n        /* \"#utility.yul\":18179:18216   */\n      add\n        /* \"#utility.yul\":18166:18177   */\n      dup3\n        /* \"#utility.yul\":18137:18217   */\n      tag_471\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":17796:18227   */\n      pop\n      pop\n        /* \"#utility.yul\":17781:18227   */\n    tag_688:\n        /* \"#utility.yul\":17691:18234   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18240:18357   */\n    tag_473:\n        /* \"#utility.yul\":18294:18302   */\n      0x00\n        /* \"#utility.yul\":18344:18349   */\n      dup3\n        /* \"#utility.yul\":18338:18342   */\n      dup3\n        /* \"#utility.yul\":18334:18350   */\n      shr\n        /* \"#utility.yul\":18313:18350   */\n      swap1\n      pop\n        /* \"#utility.yul\":18240:18357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18363:18532   */\n    tag_474:\n        /* \"#utility.yul\":18407:18413   */\n      0x00\n        /* \"#utility.yul\":18440:18491   */\n      tag_696\n        /* \"#utility.yul\":18488:18489   */\n      0x00\n        /* \"#utility.yul\":18484:18490   */\n      not\n        /* \"#utility.yul\":18476:18481   */\n      dup5\n        /* \"#utility.yul\":18473:18474   */\n      0x08\n        /* \"#utility.yul\":18469:18482   */\n      mul\n        /* \"#utility.yul\":18440:18491   */\n      tag_473\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":18436:18492   */\n      not\n        /* \"#utility.yul\":18521:18525   */\n      dup1\n        /* \"#utility.yul\":18515:18519   */\n      dup4\n        /* \"#utility.yul\":18511:18526   */\n      and\n        /* \"#utility.yul\":18501:18526   */\n      swap2\n      pop\n        /* \"#utility.yul\":18414:18532   */\n      pop\n        /* \"#utility.yul\":18363:18532   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18537:18832   */\n    tag_475:\n        /* \"#utility.yul\":18613:18617   */\n      0x00\n        /* \"#utility.yul\":18759:18788   */\n      tag_698\n        /* \"#utility.yul\":18784:18787   */\n      dup4\n        /* \"#utility.yul\":18778:18782   */\n      dup4\n        /* \"#utility.yul\":18759:18788   */\n      tag_474\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":18751:18788   */\n      swap2\n      pop\n        /* \"#utility.yul\":18821:18824   */\n      dup3\n        /* \"#utility.yul\":18818:18819   */\n      0x02\n        /* \"#utility.yul\":18814:18825   */\n      mul\n        /* \"#utility.yul\":18808:18812   */\n      dup3\n        /* \"#utility.yul\":18805:18826   */\n      or\n        /* \"#utility.yul\":18797:18826   */\n      swap1\n      pop\n        /* \"#utility.yul\":18537:18832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18837:20232   */\n    tag_380:\n        /* \"#utility.yul\":18954:18991   */\n      tag_700\n        /* \"#utility.yul\":18987:18990   */\n      dup3\n        /* \"#utility.yul\":18954:18991   */\n      tag_416\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":19056:19074   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19048:19054   */\n      dup2\n        /* \"#utility.yul\":19045:19075   */\n      gt\n        /* \"#utility.yul\":19042:19098   */\n      iszero\n      tag_701\n      jumpi\n        /* \"#utility.yul\":19078:19096   */\n      tag_702\n      tag_439\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":19042:19098   */\n    tag_701:\n        /* \"#utility.yul\":19122:19160   */\n      tag_703\n        /* \"#utility.yul\":19154:19158   */\n      dup3\n        /* \"#utility.yul\":19148:19159   */\n      sload\n        /* \"#utility.yul\":19122:19160   */\n      tag_162\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":19207:19274   */\n      tag_704\n        /* \"#utility.yul\":19267:19273   */\n      dup3\n        /* \"#utility.yul\":19259:19265   */\n      dup3\n        /* \"#utility.yul\":19253:19257   */\n      dup6\n        /* \"#utility.yul\":19207:19274   */\n      tag_472\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":19301:19302   */\n      0x00\n        /* \"#utility.yul\":19325:19329   */\n      0x20\n        /* \"#utility.yul\":19312:19329   */\n      swap1\n      pop\n        /* \"#utility.yul\":19357:19359   */\n      0x1f\n        /* \"#utility.yul\":19349:19355   */\n      dup4\n        /* \"#utility.yul\":19346:19360   */\n      gt\n        /* \"#utility.yul\":19374:19375   */\n      0x01\n        /* \"#utility.yul\":19369:19987   */\n      dup2\n      eq\n      tag_706\n      jumpi\n        /* \"#utility.yul\":20031:20032   */\n      0x00\n        /* \"#utility.yul\":20048:20054   */\n      dup5\n        /* \"#utility.yul\":20045:20122   */\n      iszero\n      tag_707\n      jumpi\n        /* \"#utility.yul\":20097:20106   */\n      dup3\n        /* \"#utility.yul\":20092:20095   */\n      dup8\n        /* \"#utility.yul\":20088:20107   */\n      add\n        /* \"#utility.yul\":20082:20108   */\n      mload\n        /* \"#utility.yul\":20073:20108   */\n      swap1\n      pop\n        /* \"#utility.yul\":20045:20122   */\n    tag_707:\n        /* \"#utility.yul\":20148:20215   */\n      tag_708\n        /* \"#utility.yul\":20208:20214   */\n      dup6\n        /* \"#utility.yul\":20201:20206   */\n      dup3\n        /* \"#utility.yul\":20148:20215   */\n      tag_475\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":20142:20146   */\n      dup7\n        /* \"#utility.yul\":20135:20216   */\n      sstore\n        /* \"#utility.yul\":20004:20226   */\n      pop\n        /* \"#utility.yul\":19339:20226   */\n      jump(tag_705)\n        /* \"#utility.yul\":19369:19987   */\n    tag_706:\n        /* \"#utility.yul\":19421:19425   */\n      0x1f\n        /* \"#utility.yul\":19417:19426   */\n      not\n        /* \"#utility.yul\":19409:19415   */\n      dup5\n        /* \"#utility.yul\":19405:19427   */\n      and\n        /* \"#utility.yul\":19455:19492   */\n      tag_709\n        /* \"#utility.yul\":19487:19491   */\n      dup7\n        /* \"#utility.yul\":19455:19492   */\n      tag_462\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":19514:19515   */\n      0x00\n        /* \"#utility.yul\":19528:19736   */\n    tag_710:\n        /* \"#utility.yul\":19542:19549   */\n      dup3\n        /* \"#utility.yul\":19539:19540   */\n      dup2\n        /* \"#utility.yul\":19536:19550   */\n      lt\n        /* \"#utility.yul\":19528:19736   */\n      iszero\n      tag_712\n      jumpi\n        /* \"#utility.yul\":19621:19630   */\n      dup5\n        /* \"#utility.yul\":19616:19619   */\n      dup10\n        /* \"#utility.yul\":19612:19631   */\n      add\n        /* \"#utility.yul\":19606:19632   */\n      mload\n        /* \"#utility.yul\":19598:19604   */\n      dup3\n        /* \"#utility.yul\":19591:19633   */\n      sstore\n        /* \"#utility.yul\":19672:19673   */\n      0x01\n        /* \"#utility.yul\":19664:19670   */\n      dup3\n        /* \"#utility.yul\":19660:19674   */\n      add\n        /* \"#utility.yul\":19650:19674   */\n      swap2\n      pop\n        /* \"#utility.yul\":19719:19721   */\n      0x20\n        /* \"#utility.yul\":19708:19717   */\n      dup6\n        /* \"#utility.yul\":19704:19722   */\n      add\n        /* \"#utility.yul\":19691:19722   */\n      swap5\n      pop\n        /* \"#utility.yul\":19565:19569   */\n      0x20\n        /* \"#utility.yul\":19562:19563   */\n      dup2\n        /* \"#utility.yul\":19558:19570   */\n      add\n        /* \"#utility.yul\":19553:19570   */\n      swap1\n      pop\n        /* \"#utility.yul\":19528:19736   */\n      jump(tag_710)\n    tag_712:\n        /* \"#utility.yul\":19764:19770   */\n      dup7\n        /* \"#utility.yul\":19755:19762   */\n      dup4\n        /* \"#utility.yul\":19752:19771   */\n      lt\n        /* \"#utility.yul\":19749:19928   */\n      iszero\n      tag_713\n      jumpi\n        /* \"#utility.yul\":19822:19831   */\n      dup5\n        /* \"#utility.yul\":19817:19820   */\n      dup10\n        /* \"#utility.yul\":19813:19832   */\n      add\n        /* \"#utility.yul\":19807:19833   */\n      mload\n        /* \"#utility.yul\":19865:19913   */\n      tag_714\n        /* \"#utility.yul\":19907:19911   */\n      0x1f\n        /* \"#utility.yul\":19899:19905   */\n      dup10\n        /* \"#utility.yul\":19895:19912   */\n      and\n        /* \"#utility.yul\":19884:19893   */\n      dup3\n        /* \"#utility.yul\":19865:19913   */\n      tag_474\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":19857:19863   */\n      dup4\n        /* \"#utility.yul\":19850:19914   */\n      sstore\n        /* \"#utility.yul\":19772:19928   */\n      pop\n        /* \"#utility.yul\":19749:19928   */\n    tag_713:\n        /* \"#utility.yul\":19974:19975   */\n      0x01\n        /* \"#utility.yul\":19970:19971   */\n      0x02\n        /* \"#utility.yul\":19962:19968   */\n      dup9\n        /* \"#utility.yul\":19958:19972   */\n      mul\n        /* \"#utility.yul\":19954:19976   */\n      add\n        /* \"#utility.yul\":19948:19952   */\n      dup9\n        /* \"#utility.yul\":19941:19977   */\n      sstore\n        /* \"#utility.yul\":19376:19987   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19339:20226   */\n    tag_705:\n      pop\n        /* \"#utility.yul\":18929:20232   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18837:20232   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20238:20336   */\n    tag_476:\n        /* \"#utility.yul\":20289:20295   */\n      0x00\n        /* \"#utility.yul\":20323:20328   */\n      dup2\n        /* \"#utility.yul\":20317:20329   */\n      mload\n        /* \"#utility.yul\":20307:20329   */\n      swap1\n      pop\n        /* \"#utility.yul\":20238:20336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20342:20489   */\n    tag_477:\n        /* \"#utility.yul\":20443:20454   */\n      0x00\n        /* \"#utility.yul\":20480:20483   */\n      dup2\n        /* \"#utility.yul\":20465:20483   */\n      swap1\n      pop\n        /* \"#utility.yul\":20342:20489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20495:20881   */\n    tag_478:\n        /* \"#utility.yul\":20599:20602   */\n      0x00\n        /* \"#utility.yul\":20627:20665   */\n      tag_718\n        /* \"#utility.yul\":20659:20664   */\n      dup3\n        /* \"#utility.yul\":20627:20665   */\n      tag_476\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":20681:20769   */\n      tag_719\n        /* \"#utility.yul\":20762:20768   */\n      dup2\n        /* \"#utility.yul\":20757:20760   */\n      dup6\n        /* \"#utility.yul\":20681:20769   */\n      tag_477\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":20674:20769   */\n      swap4\n      pop\n        /* \"#utility.yul\":20778:20843   */\n      tag_720\n        /* \"#utility.yul\":20836:20842   */\n      dup2\n        /* \"#utility.yul\":20831:20834   */\n      dup6\n        /* \"#utility.yul\":20824:20828   */\n      0x20\n        /* \"#utility.yul\":20817:20822   */\n      dup7\n        /* \"#utility.yul\":20813:20829   */\n      add\n        /* \"#utility.yul\":20778:20843   */\n      tag_418\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":20868:20874   */\n      dup1\n        /* \"#utility.yul\":20863:20866   */\n      dup5\n        /* \"#utility.yul\":20859:20875   */\n      add\n        /* \"#utility.yul\":20852:20875   */\n      swap2\n      pop\n        /* \"#utility.yul\":20603:20881   */\n      pop\n        /* \"#utility.yul\":20495:20881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20887:21158   */\n    tag_395:\n        /* \"#utility.yul\":21017:21020   */\n      0x00\n        /* \"#utility.yul\":21039:21132   */\n      tag_722\n        /* \"#utility.yul\":21128:21131   */\n      dup3\n        /* \"#utility.yul\":21119:21125   */\n      dup5\n        /* \"#utility.yul\":21039:21132   */\n      tag_478\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":21032:21132   */\n      swap2\n      pop\n        /* \"#utility.yul\":21149:21152   */\n      dup2\n        /* \"#utility.yul\":21142:21152   */\n      swap1\n      pop\n        /* \"#utility.yul\":20887:21158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f36abd7b7c07fba378ec97a0783c549e997caaa8f0db082c82613fc84813a1664736f6c634300081a0033\n}\n",
            "bytecode": {
              "functionDebugData": {
                "@_2320": {
                  "entryPoint": null,
                  "id": 2320,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_disableInitializers_416": {
                  "entryPoint": 86,
                  "id": 416,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_getInitializableStorage_447": {
                  "entryPoint": 340,
                  "id": 447,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_t_uint64_to_t_uint64_fromStack": {
                  "entryPoint": 398,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
                  "entryPoint": 413,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_uint64": {
                  "entryPoint": 379,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:456:15",
                    "nodeType": "YulBlock",
                    "src": "0:456:15",
                    "statements": [
                      {
                        "body": {
                          "nativeSrc": "51:57:15",
                          "nodeType": "YulBlock",
                          "src": "51:57:15",
                          "statements": [
                            {
                              "nativeSrc": "61:41:15",
                              "nodeType": "YulAssignment",
                              "src": "61:41:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "76:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "76:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "83:18:15",
                                    "nodeType": "YulLiteral",
                                    "src": "83:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "72:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "72:3:15"
                                },
                                "nativeSrc": "72:30:15",
                                "nodeType": "YulFunctionCall",
                                "src": "72:30:15"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nativeSrc": "61:7:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "61:7:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint64",
                        "nativeSrc": "7:101:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "33:5:15",
                            "nodeType": "YulTypedName",
                            "src": "33:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nativeSrc": "43:7:15",
                            "nodeType": "YulTypedName",
                            "src": "43:7:15",
                            "type": ""
                          }
                        ],
                        "src": "7:101:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "177:52:15",
                          "nodeType": "YulBlock",
                          "src": "177:52:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "194:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "194:3:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "216:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "216:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint64",
                                      "nativeSrc": "199:16:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "199:16:15"
                                    },
                                    "nativeSrc": "199:23:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "199:23:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "187:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:15"
                                },
                                "nativeSrc": "187:36:15",
                                "nodeType": "YulFunctionCall",
                                "src": "187:36:15"
                              },
                              "nativeSrc": "187:36:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "187:36:15"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint64_to_t_uint64_fromStack",
                        "nativeSrc": "114:115:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "165:5:15",
                            "nodeType": "YulTypedName",
                            "src": "165:5:15",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nativeSrc": "172:3:15",
                            "nodeType": "YulTypedName",
                            "src": "172:3:15",
                            "type": ""
                          }
                        ],
                        "src": "114:115:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "331:122:15",
                          "nodeType": "YulBlock",
                          "src": "331:122:15",
                          "statements": [
                            {
                              "nativeSrc": "341:26:15",
                              "nodeType": "YulAssignment",
                              "src": "341:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "353:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "353:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "364:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "364:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "349:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "349:3:15"
                                },
                                "nativeSrc": "349:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "349:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "341:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "341:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "419:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "419:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "432:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "432:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "443:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "443:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "428:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "428:3:15"
                                    },
                                    "nativeSrc": "428:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "428:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint64_to_t_uint64_fromStack",
                                  "nativeSrc": "377:41:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "377:41:15"
                                },
                                "nativeSrc": "377:69:15",
                                "nodeType": "YulFunctionCall",
                                "src": "377:69:15"
                              },
                              "nativeSrc": "377:69:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "377:69:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
                        "nativeSrc": "235:218:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "303:9:15",
                            "nodeType": "YulTypedName",
                            "src": "303:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "315:6:15",
                            "nodeType": "YulTypedName",
                            "src": "315:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "326:4:15",
                            "nodeType": "YulTypedName",
                            "src": "326:4:15",
                            "type": ""
                          }
                        ],
                        "src": "235:218:15"
                      }
                    ]
                  },
                  "contents": "{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51 PUSH2 0x56 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1B6 JUMP JUMPDEST PUSH0 PUSH2 0x65 PUSH2 0x154 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x151 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x17B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x28F0 PUSH2 0x1DC PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1097 ADD MSTORE DUP2 DUP2 PUSH2 0x10EC ADD MSTORE PUSH2 0x12A6 ADD MSTORE PUSH2 0x28F0 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A6940CC GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xE4B8C4D4 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xFE5A45D0 EQ PUSH2 0x609 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x555 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x7FAE588D EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C5 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x6A6940CC EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x435 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x55CCBFF7 EQ PUSH2 0x3A5 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x423B1CA3 EQ PUSH2 0x30D JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xDB6DFF7 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x21098461 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1F5A JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1FC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E3 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x449 PUSH2 0x982 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AF PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D9 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x536 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53F PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x588 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH2 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0xDDC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x607 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x614 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61D PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x63E PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x64F SWAP1 PUSH2 0x2253 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67B SWAP1 PUSH2 0x2253 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x69D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6DB PUSH2 0xEF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E8 DUP2 DUP6 DUP6 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6FB PUSH2 0xF10 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x748 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x75D PUSH2 0xF10 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D3 SWAP1 PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x80C DUP3 PUSH2 0x7F0 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0xA PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST DUP4 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x2491 JUMP JUMPDEST PUSH2 0xF97 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7B47457F3AF09E5F794B020FD74160963A808F5985883496A096D403D380C343 DUP3 PUSH1 0x40 MLOAD PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x894 PUSH2 0x88E PUSH2 0xEF7 JUMP JUMPDEST DUP3 PUSH2 0x1016 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x89F PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x8A8 DUP3 PUSH2 0x117B JUMP JUMPDEST PUSH2 0x8B2 DUP3 DUP3 PUSH2 0x1186 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8BF PUSH2 0x12A4 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x939 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98A PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x993 PUSH0 PUSH2 0x132B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9A7 DUP3 PUSH2 0x9A1 PUSH2 0xEF7 JUMP JUMPDEST DUP4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x9B1 DUP3 DUP3 PUSH2 0x1016 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9BD PUSH2 0xF10 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA09 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA3F PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xA50 SWAP1 PUSH2 0x2253 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA7C SWAP1 PUSH2 0x2253 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA9E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAAA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB05 SWAP1 PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xB50 PUSH2 0x14B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB98 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBCB JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xBD9 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC5D JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xCD1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x447261676F6E4472696E6B000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44444B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x14DC JUMP JUMPDEST PUSH2 0xCD9 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0xCE2 DUP7 PUSH2 0x14FC JUMP JUMPDEST PUSH2 0xCEA PUSH2 0x1510 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xD44 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD3B SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD56 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE4 PUSH2 0xF10 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xE2F PUSH2 0xF10 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA8 DUP2 PUSH2 0x132B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF0B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x151A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF18 PUSH2 0xEF7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF36 PUSH2 0x9FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF95 JUMPI PUSH2 0xF59 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1007 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1012 PUSH0 DUP4 DUP4 PUSH2 0x16F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1086 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1091 DUP3 PUSH0 DUP4 PUSH2 0x16F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1142 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1129 PUSH2 0x1926 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1179 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1183 PUSH2 0xF10 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11EE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x256A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x122F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1295 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129F DUP4 DUP4 PUSH2 0x1979 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1334 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1407 DUP5 DUP5 PUSH2 0xD4C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1488 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1479 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1470 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1487 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x151A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14E4 PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x14EE DUP3 DUP3 PUSH2 0x1A2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14FA PUSH2 0x19EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1504 PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x150D DUP2 PUSH2 0x1A67 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1518 PUSH2 0x19EB JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1523 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1595 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158C SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1605 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x16F0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x16E7 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1700 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1754 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1748 SWAP2 SWAP1 PUSH2 0x25CA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1826 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x17DF JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186F JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18BB JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1918 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1952 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1AEB JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1982 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x19DE JUMPI PUSH2 0x19D8 DUP3 DUP3 PUSH2 0x1BBD JUMP JUMPDEST POP PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0x19E6 PUSH2 0x1C3D JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x19F3 PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x1A29 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1A33 PUSH2 0x19EB JUMP JUMPDEST PUSH0 PUSH2 0x1A3C PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1A4F SWAP2 SWAP1 PUSH2 0x2791 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1A61 SWAP2 SWAP1 PUSH2 0x2791 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1A6F PUSH2 0x19EB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ADF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD6 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AE8 DUP2 PUSH2 0x132B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1B4F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B46 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1B7B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1AEB JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BE6 SWAP2 SWAP1 PUSH2 0x28A4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1C1E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1C33 DUP6 DUP4 DUP4 PUSH2 0x1C97 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1C82 PUSH2 0x14B5 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1CAC JUMPI PUSH2 0x1CA7 DUP3 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x1D1C JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1CD2 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1D14 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0B SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1D36 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAA DUP3 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x1DB4 DUP2 DUP6 PUSH2 0x1D72 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DC4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D82 JUMP JUMPDEST PUSH2 0x1DCD DUP2 PUSH2 0x1D90 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DF0 DUP2 DUP5 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E32 DUP3 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E42 DUP2 PUSH2 0x1E28 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E5D DUP2 PUSH2 0x1E39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E75 DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E90 DUP2 PUSH2 0x1E6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAC JUMPI PUSH2 0x1EAB PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ECA DUP6 DUP3 DUP7 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE8 DUP2 PUSH2 0x1ED4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F01 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F29 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F3B DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F54 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F71 JUMPI PUSH2 0x1F70 PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F7E DUP7 DUP3 DUP8 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F8F DUP7 DUP3 DUP8 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FA0 DUP7 DUP3 DUP8 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBF DUP2 PUSH2 0x1FAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FE7 DUP2 PUSH2 0x1E28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2000 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x201B JUMPI PUSH2 0x201A PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2028 DUP5 DUP3 DUP6 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x206F DUP3 PUSH2 0x1D90 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x208E JUMPI PUSH2 0x208D PUSH2 0x2039 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20A0 PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 POP PUSH2 0x20AC DUP3 DUP3 PUSH2 0x2066 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x2039 JUMP JUMPDEST JUMPDEST PUSH2 0x20D4 DUP3 PUSH2 0x1D90 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2101 PUSH2 0x20FC DUP5 PUSH2 0x20B1 JUMP JUMPDEST PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x211D JUMPI PUSH2 0x211C PUSH2 0x2035 JUMP JUMPDEST JUMPDEST PUSH2 0x2128 DUP5 DUP3 DUP6 PUSH2 0x20E1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2144 JUMPI PUSH2 0x2143 PUSH2 0x2031 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2154 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2173 JUMPI PUSH2 0x2172 PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2180 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A1 JUMPI PUSH2 0x21A0 PUSH2 0x1E05 JUMP JUMPDEST JUMPDEST PUSH2 0x21AD DUP6 DUP3 DUP7 ADD PUSH2 0x2130 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C9 DUP2 PUSH2 0x21B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x21C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21FE JUMPI PUSH2 0x21FD PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x220B DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x221C DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x226A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x227D JUMPI PUSH2 0x227C PUSH2 0x2226 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657273206172652064697361626C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22B7 PUSH1 0x16 DUP4 PUSH2 0x1D72 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C2 DUP3 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22E4 DUP2 PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x236D JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2349 JUMPI PUSH2 0x2348 PUSH2 0x22EB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2358 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2366 DUP6 PUSH2 0x2318 JUMP JUMPDEST SWAP5 POP PUSH2 0x232D JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2385 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2440 JUMP JUMPDEST DUP2 PUSH2 0x2392 JUMPI PUSH0 SWAP1 POP PUSH2 0x2440 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x23A8 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x23B2 JUMPI PUSH2 0x23E1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2440 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x23C4 JUMPI PUSH2 0x23C3 PUSH2 0x22EB JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x23DB JUMPI PUSH2 0x23DA PUSH2 0x22EB JUMP JUMPDEST JUMPDEST POP PUSH2 0x2440 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2416 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2411 JUMPI PUSH2 0x2410 PUSH2 0x22EB JUMP JUMPDEST JUMPDEST PUSH2 0x2440 JUMP JUMPDEST PUSH2 0x2423 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2324 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x243A JUMPI PUSH2 0x2439 PUSH2 0x22EB JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2451 DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP2 POP PUSH2 0x245C DUP4 PUSH2 0x1FAA JUMP JUMPDEST SWAP3 POP PUSH2 0x2489 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2376 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x249B DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP2 POP PUSH2 0x24A6 DUP4 PUSH2 0x1E63 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x24B4 DUP2 PUSH2 0x1E63 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x24CB JUMPI PUSH2 0x24CA PUSH2 0x22EB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2511 PUSH2 0x250C PUSH2 0x2507 DUP5 PUSH2 0x24D2 JUMP JUMPDEST PUSH2 0x24EE JUMP JUMPDEST PUSH2 0x24DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2521 DUP2 PUSH2 0x24F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x253A PUSH0 DUP4 ADD DUP5 PUSH2 0x2518 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2549 DUP2 PUSH2 0x21B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2553 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2564 DUP2 PUSH2 0x2540 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x257F JUMPI PUSH2 0x257E PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x258C DUP5 DUP3 DUP6 ADD PUSH2 0x2556 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25A8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1FDE JUMP JUMPDEST PUSH2 0x25B5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F32 JUMP JUMPDEST PUSH2 0x25C2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F32 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25D4 DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP2 POP PUSH2 0x25DF DUP4 PUSH2 0x1E63 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25F7 JUMPI PUSH2 0x25F6 PUSH2 0x22EB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2659 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x261E JUMP JUMPDEST PUSH2 0x2663 DUP7 DUP4 PUSH2 0x261E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2695 PUSH2 0x2690 PUSH2 0x268B DUP5 PUSH2 0x1E63 JUMP JUMPDEST PUSH2 0x24EE JUMP JUMPDEST PUSH2 0x1E63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26AE DUP4 PUSH2 0x267B JUMP JUMPDEST PUSH2 0x26C2 PUSH2 0x26BA DUP3 PUSH2 0x269C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x262A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x26D6 PUSH2 0x26CA JUMP JUMPDEST PUSH2 0x26E1 DUP2 DUP5 DUP5 PUSH2 0x26A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2704 JUMPI PUSH2 0x26F9 PUSH0 DUP3 PUSH2 0x26CE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26E7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2749 JUMPI PUSH2 0x271A DUP2 PUSH2 0x25FD JUMP JUMPDEST PUSH2 0x2723 DUP5 PUSH2 0x260F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2732 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2746 PUSH2 0x273E DUP6 PUSH2 0x260F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x26E6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2769 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x274E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2781 DUP4 DUP4 PUSH2 0x275A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x279A DUP3 PUSH2 0x1D68 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27B3 JUMPI PUSH2 0x27B2 PUSH2 0x2039 JUMP JUMPDEST JUMPDEST PUSH2 0x27BD DUP3 SLOAD PUSH2 0x2253 JUMP JUMPDEST PUSH2 0x27C8 DUP3 DUP3 DUP6 PUSH2 0x2708 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x27F9 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x27E7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x27F1 DUP6 DUP3 PUSH2 0x2776 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2807 DUP7 PUSH2 0x25FD JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x282E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2809 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x284B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2847 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x275A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x287E DUP3 PUSH2 0x2860 JUMP JUMPDEST PUSH2 0x2888 DUP2 DUP6 PUSH2 0x286A JUMP JUMPDEST SWAP4 POP PUSH2 0x2898 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D82 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28AF DUP3 DUP5 PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F CALLDATASIZE 0xAB 0xD7 0xB7 0xC0 PUSH32 0xBA378EC97A0783C549E997CAAA8F0DB082C82613FC84813A1664736F6C634300 ADDMOD BYTE STOP CALLER ",
              "sourceMap": "475:1997:14:-:0;;;1171:4:2;1128:48;;;;;;;;;812:55:14;;;;;;;;;;837:22;:20;;;:22;;:::i;:::-;475:1997;;7711:422:1;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;7:101:15:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;475:1997:14:-;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@UPGRADE_INTERFACE_VERSION_472": {
                  "entryPoint": 2830,
                  "id": 472,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@__ERC20Burnable_init_1268": {
                  "entryPoint": 5362,
                  "id": 1268,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@__ERC20_init_698": {
                  "entryPoint": 5340,
                  "id": 698,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@__ERC20_init_unchained_726": {
                  "entryPoint": 6699,
                  "id": 726,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@__Ownable_init_54": {
                  "entryPoint": 5372,
                  "id": 54,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@__Ownable_init_unchained_81": {
                  "entryPoint": 6759,
                  "id": 81,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@__UUPSUpgradeable_init_502": {
                  "entryPoint": 5392,
                  "id": 502,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_approve_1130": {
                  "entryPoint": 3838,
                  "id": 1130,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_approve_1198": {
                  "entryPoint": 5402,
                  "id": 1198,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@_authorizeUpgrade_2424": {
                  "entryPoint": 4475,
                  "id": 2424,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_burn_1112": {
                  "entryPoint": 4118,
                  "id": 1112,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_checkInitializing_370": {
                  "entryPoint": 6635,
                  "id": 370,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_checkNonPayable_1804": {
                  "entryPoint": 7229,
                  "id": 1804,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_checkNotDelegated_578": {
                  "entryPoint": 4772,
                  "id": 578,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_checkOwner_122": {
                  "entryPoint": 3856,
                  "id": 122,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_checkProxy_562": {
                  "entryPoint": 4245,
                  "id": 562,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_getERC20Storage_682": {
                  "entryPoint": 3792,
                  "id": 682,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_getInitializableStorage_447": {
                  "entryPoint": 5301,
                  "id": 447,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_getOwnableStorage_25": {
                  "entryPoint": 5262,
                  "id": 25,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_isInitializing_438": {
                  "entryPoint": 7289,
                  "id": 438,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_mint_1079": {
                  "entryPoint": 3991,
                  "id": 1079,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_1337": {
                  "entryPoint": 3831,
                  "id": 1337,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_revert_2171": {
                  "entryPoint": 7460,
                  "id": 2171,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_setImplementation_1590": {
                  "entryPoint": 6900,
                  "id": 1590,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_spendAllowance_1246": {
                  "entryPoint": 5116,
                  "id": 1246,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transferOwnership_193": {
                  "entryPoint": 4907,
                  "id": 193,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_update_1046": {
                  "entryPoint": 5879,
                  "id": 1046,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_upgradeToAndCallUUPS_629": {
                  "entryPoint": 4486,
                  "id": 629,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@allowance_851": {
                  "entryPoint": 3404,
                  "id": 851,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approve_875": {
                  "entryPoint": 1745,
                  "id": 875,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_803": {
                  "entryPoint": 2351,
                  "id": 803,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@battleContract_2305": {
                  "entryPoint": 2142,
                  "id": 2305,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@burnFrom_1308": {
                  "entryPoint": 2453,
                  "id": 1308,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@burn_1287": {
                  "entryPoint": 2179,
                  "id": 1287,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@dailyCheckContract_2303": {
                  "entryPoint": 3755,
                  "id": 2303,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@decimals_767": {
                  "entryPoint": 2012,
                  "id": 767,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@exploreContract_2307": {
                  "entryPoint": 2279,
                  "id": 2307,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@functionDelegateCall_2091": {
                  "entryPoint": 7101,
                  "id": 2091,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@getAddressSlot_2204": {
                  "entryPoint": 6891,
                  "id": 2204,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getImplementation_1563": {
                  "entryPoint": 6438,
                  "id": 1563,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@initialize_2343": {
                  "entryPoint": 2887,
                  "id": 2343,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@mint_2415": {
                  "entryPoint": 2020,
                  "id": 2415,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@name_742": {
                  "entryPoint": 1587,
                  "id": 742,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@owner_105": {
                  "entryPoint": 2559,
                  "id": 105,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@proxiableUUID_520": {
                  "entryPoint": 2230,
                  "id": 520,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@questContract_2301": {
                  "entryPoint": 2316,
                  "id": 2301,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@renounceOwnership_136": {
                  "entryPoint": 2434,
                  "id": 136,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@setBattleContract_2379": {
                  "entryPoint": 1779,
                  "id": 2379,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setDailyCheckContract_2367": {
                  "entryPoint": 1877,
                  "id": 2367,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setExploreContract_2391": {
                  "entryPoint": 3548,
                  "id": 2391,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setQuestContract_2355": {
                  "entryPoint": 2485,
                  "id": 2355,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@symbol_758": {
                  "entryPoint": 2612,
                  "id": 758,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalSupply_783": {
                  "entryPoint": 1854,
                  "id": 783,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferFrom_2456": {
                  "entryPoint": 1952,
                  "id": 2456,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transferOwnership_164": {
                  "entryPoint": 3623,
                  "id": 164,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@transfer_2439": {
                  "entryPoint": 2770,
                  "id": 2439,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@upgradeToAndCall_1624": {
                  "entryPoint": 6521,
                  "id": 1624,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@upgradeToAndCall_540": {
                  "entryPoint": 2199,
                  "id": 540,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@verifyCallResultFromTarget_2131": {
                  "entryPoint": 7319,
                  "id": 2131,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_available_length_t_bytes_memory_ptr": {
                  "entryPoint": 8431,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_t_address": {
                  "entryPoint": 7759,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bytes32_fromMemory": {
                  "entryPoint": 9558,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bytes_memory_ptr": {
                  "entryPoint": 8496,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 7810,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 7943,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 8680,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 8026,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_bytes_memory_ptr": {
                  "entryPoint": 8541,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 7830,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bytes32_fromMemory": {
                  "entryPoint": 9578,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 8198,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 8158,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_bool_to_t_bool_fromStack": {
                  "entryPoint": 7903,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_bytes32_to_t_bytes32_fromStack": {
                  "entryPoint": 8640,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                  "entryPoint": 10356,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
                  "entryPoint": 9496,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 7584,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 8875,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 7986,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_uint8_to_t_uint8_fromStack": {
                  "entryPoint": 8118,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 10404,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 8173,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": 9621,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": 7918,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": 8655,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
                  "entryPoint": 9511,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 7640,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 8909,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": 8001,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": 8133,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 8343,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 7672,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_t_bytes_memory_ptr": {
                  "entryPoint": 8369,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_t_string_storage": {
                  "entryPoint": 9725,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_bytes_memory_ptr": {
                  "entryPoint": 10336,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_string_memory_ptr": {
                  "entryPoint": 7528,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
                  "entryPoint": 10346,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 7538,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 9674,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 8996,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint8": {
                  "entryPoint": 9287,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 9078,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 9361,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_t_string_storage": {
                  "entryPoint": 9992,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "cleanup_t_address": {
                  "entryPoint": 7720,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bool": {
                  "entryPoint": 7892,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bytes32": {
                  "entryPoint": 8631,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_1_by_1": {
                  "entryPoint": 9426,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 7689,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 7779,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint64": {
                  "entryPoint": 9435,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint8": {
                  "entryPoint": 8106,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "clear_storage_range_t_bytes1": {
                  "entryPoint": 9958,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "convert_t_rational_1_by_1_to_t_uint64": {
                  "entryPoint": 9463,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_uint256_to_t_uint256": {
                  "entryPoint": 9851,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 10129,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_calldata_to_memory_with_cleanup": {
                  "entryPoint": 8417,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 7554,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "divide_by_32_ceil": {
                  "entryPoint": 9743,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 8787,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": 10102,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 8294,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": 9454,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mask_bytes_dynamic": {
                  "entryPoint": 10074,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 8939,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x22": {
                  "entryPoint": 8742,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 8249,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_t_uint256": {
                  "entryPoint": 9884,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 8241,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
                  "entryPoint": 8245,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 7685,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 7681,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of_32": {
                  "entryPoint": 7568,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_dynamic": {
                  "entryPoint": 9758,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "shift_right_1_unsigned": {
                  "entryPoint": 8984,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": 10062,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "storage_set_to_zero_t_uint256": {
                  "entryPoint": 9934,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "store_literal_in_memory_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce": {
                  "entryPoint": 8835,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic32": {
                  "entryPoint": 9770,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_storage_value_t_uint256_to_t_uint256": {
                  "entryPoint": 9893,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 7737,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_bytes32": {
                  "entryPoint": 9536,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 7788,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_t_uint256": {
                  "entryPoint": 9930,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:21161:15",
                    "nodeType": "YulBlock",
                    "src": "0:21161:15",
                    "statements": [
                      {
                        "body": {
                          "nativeSrc": "66:40:15",
                          "nodeType": "YulBlock",
                          "src": "66:40:15",
                          "statements": [
                            {
                              "nativeSrc": "77:22:15",
                              "nodeType": "YulAssignment",
                              "src": "77:22:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "93:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "93:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "87:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "87:5:15"
                                },
                                "nativeSrc": "87:12:15",
                                "nodeType": "YulFunctionCall",
                                "src": "87:12:15"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "77:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "77:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_string_memory_ptr",
                        "nativeSrc": "7:99:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "49:5:15",
                            "nodeType": "YulTypedName",
                            "src": "49:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "59:6:15",
                            "nodeType": "YulTypedName",
                            "src": "59:6:15",
                            "type": ""
                          }
                        ],
                        "src": "7:99:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "208:73:15",
                          "nodeType": "YulBlock",
                          "src": "208:73:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "225:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "225:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "230:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "230:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "218:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "218:6:15"
                                },
                                "nativeSrc": "218:19:15",
                                "nodeType": "YulFunctionCall",
                                "src": "218:19:15"
                              },
                              "nativeSrc": "218:19:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "218:19:15"
                            },
                            {
                              "nativeSrc": "246:29:15",
                              "nodeType": "YulAssignment",
                              "src": "246:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "265:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "265:3:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "270:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "270:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "261:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "261:3:15"
                                },
                                "nativeSrc": "261:14:15",
                                "nodeType": "YulFunctionCall",
                                "src": "261:14:15"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nativeSrc": "246:11:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "246:11:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nativeSrc": "112:169:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "180:3:15",
                            "nodeType": "YulTypedName",
                            "src": "180:3:15",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nativeSrc": "185:6:15",
                            "nodeType": "YulTypedName",
                            "src": "185:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nativeSrc": "196:11:15",
                            "nodeType": "YulTypedName",
                            "src": "196:11:15",
                            "type": ""
                          }
                        ],
                        "src": "112:169:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "349:77:15",
                          "nodeType": "YulBlock",
                          "src": "349:77:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nativeSrc": "366:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "366:3:15"
                                  },
                                  {
                                    "name": "src",
                                    "nativeSrc": "371:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "371:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "376:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "376:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mcopy",
                                  "nativeSrc": "360:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "360:5:15"
                                },
                                "nativeSrc": "360:23:15",
                                "nodeType": "YulFunctionCall",
                                "src": "360:23:15"
                              },
                              "nativeSrc": "360:23:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "360:23:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nativeSrc": "403:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:15"
                                      },
                                      {
                                        "name": "length",
                                        "nativeSrc": "408:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "408:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "399:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "399:3:15"
                                    },
                                    "nativeSrc": "399:16:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "399:16:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "417:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "417:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "392:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "392:6:15"
                                },
                                "nativeSrc": "392:27:15",
                                "nodeType": "YulFunctionCall",
                                "src": "392:27:15"
                              },
                              "nativeSrc": "392:27:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "392:27:15"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory_with_cleanup",
                        "nativeSrc": "287:139:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nativeSrc": "331:3:15",
                            "nodeType": "YulTypedName",
                            "src": "331:3:15",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nativeSrc": "336:3:15",
                            "nodeType": "YulTypedName",
                            "src": "336:3:15",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nativeSrc": "341:6:15",
                            "nodeType": "YulTypedName",
                            "src": "341:6:15",
                            "type": ""
                          }
                        ],
                        "src": "287:139:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "480:54:15",
                          "nodeType": "YulBlock",
                          "src": "480:54:15",
                          "statements": [
                            {
                              "nativeSrc": "490:38:15",
                              "nodeType": "YulAssignment",
                              "src": "490:38:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "508:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "508:5:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "515:2:15",
                                        "nodeType": "YulLiteral",
                                        "src": "515:2:15",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "504:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "504:3:15"
                                    },
                                    "nativeSrc": "504:14:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "504:14:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "524:2:15",
                                        "nodeType": "YulLiteral",
                                        "src": "524:2:15",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "520:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "520:3:15"
                                    },
                                    "nativeSrc": "520:7:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "520:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "500:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "500:3:15"
                                },
                                "nativeSrc": "500:28:15",
                                "nodeType": "YulFunctionCall",
                                "src": "500:28:15"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nativeSrc": "490:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "490:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nativeSrc": "432:102:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "463:5:15",
                            "nodeType": "YulTypedName",
                            "src": "463:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nativeSrc": "473:6:15",
                            "nodeType": "YulTypedName",
                            "src": "473:6:15",
                            "type": ""
                          }
                        ],
                        "src": "432:102:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "632:285:15",
                          "nodeType": "YulBlock",
                          "src": "632:285:15",
                          "statements": [
                            {
                              "nativeSrc": "642:53:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "642:53:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "689:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "689:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nativeSrc": "656:32:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "656:32:15"
                                },
                                "nativeSrc": "656:39:15",
                                "nodeType": "YulFunctionCall",
                                "src": "656:39:15"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "646:6:15",
                                  "nodeType": "YulTypedName",
                                  "src": "646:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "704:78:15",
                              "nodeType": "YulAssignment",
                              "src": "704:78:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "770:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "770:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "775:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "775:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nativeSrc": "711:58:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "711:58:15"
                                },
                                "nativeSrc": "711:71:15",
                                "nodeType": "YulFunctionCall",
                                "src": "711:71:15"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "704:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "704:3:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "830:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "830:5:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "837:4:15",
                                        "nodeType": "YulLiteral",
                                        "src": "837:4:15",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "826:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "826:3:15"
                                    },
                                    "nativeSrc": "826:16:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "826:16:15"
                                  },
                                  {
                                    "name": "pos",
                                    "nativeSrc": "844:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "844:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "849:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "849:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nativeSrc": "791:34:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "791:34:15"
                                },
                                "nativeSrc": "791:65:15",
                                "nodeType": "YulFunctionCall",
                                "src": "791:65:15"
                              },
                              "nativeSrc": "791:65:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "791:65:15"
                            },
                            {
                              "nativeSrc": "865:46:15",
                              "nodeType": "YulAssignment",
                              "src": "865:46:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "876:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "876:3:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "903:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "903:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nativeSrc": "881:21:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "881:21:15"
                                    },
                                    "nativeSrc": "881:29:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "881:29:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "872:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "872:3:15"
                                },
                                "nativeSrc": "872:39:15",
                                "nodeType": "YulFunctionCall",
                                "src": "872:39:15"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "865:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "865:3:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                        "nativeSrc": "540:377:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "613:5:15",
                            "nodeType": "YulTypedName",
                            "src": "613:5:15",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nativeSrc": "620:3:15",
                            "nodeType": "YulTypedName",
                            "src": "620:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "628:3:15",
                            "nodeType": "YulTypedName",
                            "src": "628:3:15",
                            "type": ""
                          }
                        ],
                        "src": "540:377:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "1041:195:15",
                          "nodeType": "YulBlock",
                          "src": "1041:195:15",
                          "statements": [
                            {
                              "nativeSrc": "1051:26:15",
                              "nodeType": "YulAssignment",
                              "src": "1051:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1063:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "1063:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1074:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "1074:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1059:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1059:3:15"
                                },
                                "nativeSrc": "1059:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "1059:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1051:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1051:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1098:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "1098:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1109:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "1109:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1094:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "1094:3:15"
                                    },
                                    "nativeSrc": "1094:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1094:17:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nativeSrc": "1117:4:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "1117:4:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1123:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "1123:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1113:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "1113:3:15"
                                    },
                                    "nativeSrc": "1113:20:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1113:20:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1087:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1087:6:15"
                                },
                                "nativeSrc": "1087:47:15",
                                "nodeType": "YulFunctionCall",
                                "src": "1087:47:15"
                              },
                              "nativeSrc": "1087:47:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "1087:47:15"
                            },
                            {
                              "nativeSrc": "1143:86:15",
                              "nodeType": "YulAssignment",
                              "src": "1143:86:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1215:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "1215:6:15"
                                  },
                                  {
                                    "name": "tail",
                                    "nativeSrc": "1224:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "1224:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                                  "nativeSrc": "1151:63:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1151:63:15"
                                },
                                "nativeSrc": "1151:78:15",
                                "nodeType": "YulFunctionCall",
                                "src": "1151:78:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1143:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1143:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "923:313:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1013:9:15",
                            "nodeType": "YulTypedName",
                            "src": "1013:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1025:6:15",
                            "nodeType": "YulTypedName",
                            "src": "1025:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1036:4:15",
                            "nodeType": "YulTypedName",
                            "src": "1036:4:15",
                            "type": ""
                          }
                        ],
                        "src": "923:313:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "1282:35:15",
                          "nodeType": "YulBlock",
                          "src": "1282:35:15",
                          "statements": [
                            {
                              "nativeSrc": "1292:19:15",
                              "nodeType": "YulAssignment",
                              "src": "1292:19:15",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1308:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "1308:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1302:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1302:5:15"
                                },
                                "nativeSrc": "1302:9:15",
                                "nodeType": "YulFunctionCall",
                                "src": "1302:9:15"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "1292:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1292:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nativeSrc": "1242:75:15",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nativeSrc": "1275:6:15",
                            "nodeType": "YulTypedName",
                            "src": "1275:6:15",
                            "type": ""
                          }
                        ],
                        "src": "1242:75:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "1412:28:15",
                          "nodeType": "YulBlock",
                          "src": "1412:28:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1429:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "1429:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1432:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "1432:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "1422:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1422:6:15"
                                },
                                "nativeSrc": "1422:12:15",
                                "nodeType": "YulFunctionCall",
                                "src": "1422:12:15"
                              },
                              "nativeSrc": "1422:12:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "1422:12:15"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nativeSrc": "1323:117:15",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1323:117:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "1535:28:15",
                          "nodeType": "YulBlock",
                          "src": "1535:28:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1552:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "1552:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1555:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "1555:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "1545:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1545:6:15"
                                },
                                "nativeSrc": "1545:12:15",
                                "nodeType": "YulFunctionCall",
                                "src": "1545:12:15"
                              },
                              "nativeSrc": "1545:12:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "1545:12:15"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nativeSrc": "1446:117:15",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1446:117:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "1614:81:15",
                          "nodeType": "YulBlock",
                          "src": "1614:81:15",
                          "statements": [
                            {
                              "nativeSrc": "1624:65:15",
                              "nodeType": "YulAssignment",
                              "src": "1624:65:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "1639:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "1639:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1646:42:15",
                                    "nodeType": "YulLiteral",
                                    "src": "1646:42:15",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "1635:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1635:3:15"
                                },
                                "nativeSrc": "1635:54:15",
                                "nodeType": "YulFunctionCall",
                                "src": "1635:54:15"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nativeSrc": "1624:7:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1624:7:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nativeSrc": "1569:126:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "1596:5:15",
                            "nodeType": "YulTypedName",
                            "src": "1596:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nativeSrc": "1606:7:15",
                            "nodeType": "YulTypedName",
                            "src": "1606:7:15",
                            "type": ""
                          }
                        ],
                        "src": "1569:126:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "1746:51:15",
                          "nodeType": "YulBlock",
                          "src": "1746:51:15",
                          "statements": [
                            {
                              "nativeSrc": "1756:35:15",
                              "nodeType": "YulAssignment",
                              "src": "1756:35:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "1785:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "1785:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nativeSrc": "1767:17:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1767:17:15"
                                },
                                "nativeSrc": "1767:24:15",
                                "nodeType": "YulFunctionCall",
                                "src": "1767:24:15"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nativeSrc": "1756:7:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1756:7:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nativeSrc": "1701:96:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "1728:5:15",
                            "nodeType": "YulTypedName",
                            "src": "1728:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nativeSrc": "1738:7:15",
                            "nodeType": "YulTypedName",
                            "src": "1738:7:15",
                            "type": ""
                          }
                        ],
                        "src": "1701:96:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "1846:79:15",
                          "nodeType": "YulBlock",
                          "src": "1846:79:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1903:16:15",
                                "nodeType": "YulBlock",
                                "src": "1903:16:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1912:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "1912:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1915:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "1915:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1905:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "1905:6:15"
                                      },
                                      "nativeSrc": "1905:12:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1905:12:15"
                                    },
                                    "nativeSrc": "1905:12:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1905:12:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1869:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "1869:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "1894:5:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "1894:5:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nativeSrc": "1876:17:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "1876:17:15"
                                        },
                                        "nativeSrc": "1876:24:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1876:24:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "1866:2:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "1866:2:15"
                                    },
                                    "nativeSrc": "1866:35:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1866:35:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1859:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1859:6:15"
                                },
                                "nativeSrc": "1859:43:15",
                                "nodeType": "YulFunctionCall",
                                "src": "1859:43:15"
                              },
                              "nativeSrc": "1856:63:15",
                              "nodeType": "YulIf",
                              "src": "1856:63:15"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nativeSrc": "1803:122:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "1839:5:15",
                            "nodeType": "YulTypedName",
                            "src": "1839:5:15",
                            "type": ""
                          }
                        ],
                        "src": "1803:122:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "1983:87:15",
                          "nodeType": "YulBlock",
                          "src": "1983:87:15",
                          "statements": [
                            {
                              "nativeSrc": "1993:29:15",
                              "nodeType": "YulAssignment",
                              "src": "1993:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "2015:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "2015:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2002:12:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "2002:12:15"
                                },
                                "nativeSrc": "2002:20:15",
                                "nodeType": "YulFunctionCall",
                                "src": "2002:20:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1993:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "1993:5:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "2058:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "2058:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nativeSrc": "2031:26:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "2031:26:15"
                                },
                                "nativeSrc": "2031:33:15",
                                "nodeType": "YulFunctionCall",
                                "src": "2031:33:15"
                              },
                              "nativeSrc": "2031:33:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "2031:33:15"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nativeSrc": "1931:139:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "1961:6:15",
                            "nodeType": "YulTypedName",
                            "src": "1961:6:15",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "1969:3:15",
                            "nodeType": "YulTypedName",
                            "src": "1969:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "1977:5:15",
                            "nodeType": "YulTypedName",
                            "src": "1977:5:15",
                            "type": ""
                          }
                        ],
                        "src": "1931:139:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "2121:32:15",
                          "nodeType": "YulBlock",
                          "src": "2121:32:15",
                          "statements": [
                            {
                              "nativeSrc": "2131:16:15",
                              "nodeType": "YulAssignment",
                              "src": "2131:16:15",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2142:5:15",
                                "nodeType": "YulIdentifier",
                                "src": "2142:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nativeSrc": "2131:7:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "2131:7:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nativeSrc": "2076:77:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "2103:5:15",
                            "nodeType": "YulTypedName",
                            "src": "2103:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nativeSrc": "2113:7:15",
                            "nodeType": "YulTypedName",
                            "src": "2113:7:15",
                            "type": ""
                          }
                        ],
                        "src": "2076:77:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "2202:79:15",
                          "nodeType": "YulBlock",
                          "src": "2202:79:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2259:16:15",
                                "nodeType": "YulBlock",
                                "src": "2259:16:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2268:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "2268:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2271:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "2271:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2261:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "2261:6:15"
                                      },
                                      "nativeSrc": "2261:12:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2261:12:15"
                                    },
                                    "nativeSrc": "2261:12:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2261:12:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "2225:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "2225:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "2250:5:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "2250:5:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nativeSrc": "2232:17:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "2232:17:15"
                                        },
                                        "nativeSrc": "2232:24:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2232:24:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "2222:2:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2222:2:15"
                                    },
                                    "nativeSrc": "2222:35:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2222:35:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "2215:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "2215:6:15"
                                },
                                "nativeSrc": "2215:43:15",
                                "nodeType": "YulFunctionCall",
                                "src": "2215:43:15"
                              },
                              "nativeSrc": "2212:63:15",
                              "nodeType": "YulIf",
                              "src": "2212:63:15"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nativeSrc": "2159:122:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "2195:5:15",
                            "nodeType": "YulTypedName",
                            "src": "2195:5:15",
                            "type": ""
                          }
                        ],
                        "src": "2159:122:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "2339:87:15",
                          "nodeType": "YulBlock",
                          "src": "2339:87:15",
                          "statements": [
                            {
                              "nativeSrc": "2349:29:15",
                              "nodeType": "YulAssignment",
                              "src": "2349:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "2371:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "2371:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2358:12:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "2358:12:15"
                                },
                                "nativeSrc": "2358:20:15",
                                "nodeType": "YulFunctionCall",
                                "src": "2358:20:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2349:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "2349:5:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "2414:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "2414:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nativeSrc": "2387:26:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "2387:26:15"
                                },
                                "nativeSrc": "2387:33:15",
                                "nodeType": "YulFunctionCall",
                                "src": "2387:33:15"
                              },
                              "nativeSrc": "2387:33:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "2387:33:15"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nativeSrc": "2287:139:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "2317:6:15",
                            "nodeType": "YulTypedName",
                            "src": "2317:6:15",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "2325:3:15",
                            "nodeType": "YulTypedName",
                            "src": "2325:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "2333:5:15",
                            "nodeType": "YulTypedName",
                            "src": "2333:5:15",
                            "type": ""
                          }
                        ],
                        "src": "2287:139:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "2515:391:15",
                          "nodeType": "YulBlock",
                          "src": "2515:391:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2561:83:15",
                                "nodeType": "YulBlock",
                                "src": "2561:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nativeSrc": "2563:77:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "2563:77:15"
                                      },
                                      "nativeSrc": "2563:79:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2563:79:15"
                                    },
                                    "nativeSrc": "2563:79:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2563:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2536:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "2536:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2545:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "2545:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2532:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2532:3:15"
                                    },
                                    "nativeSrc": "2532:23:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2532:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2557:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "2557:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2528:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "2528:3:15"
                                },
                                "nativeSrc": "2528:32:15",
                                "nodeType": "YulFunctionCall",
                                "src": "2528:32:15"
                              },
                              "nativeSrc": "2525:119:15",
                              "nodeType": "YulIf",
                              "src": "2525:119:15"
                            },
                            {
                              "nativeSrc": "2654:117:15",
                              "nodeType": "YulBlock",
                              "src": "2654:117:15",
                              "statements": [
                                {
                                  "nativeSrc": "2669:15:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2669:15:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "2683:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "2683:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "2673:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "2673:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "2698:63:15",
                                  "nodeType": "YulAssignment",
                                  "src": "2698:63:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "2733:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "2733:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "2744:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "2744:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "2729:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "2729:3:15"
                                        },
                                        "nativeSrc": "2729:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2729:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2753:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "2753:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nativeSrc": "2708:20:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2708:20:15"
                                    },
                                    "nativeSrc": "2708:53:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2708:53:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "2698:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2698:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2781:118:15",
                              "nodeType": "YulBlock",
                              "src": "2781:118:15",
                              "statements": [
                                {
                                  "nativeSrc": "2796:16:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2796:16:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "2810:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "2810:2:15",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "2800:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "2800:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "2826:63:15",
                                  "nodeType": "YulAssignment",
                                  "src": "2826:63:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "2861:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "2861:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "2872:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "2872:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "2857:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "2857:3:15"
                                        },
                                        "nativeSrc": "2857:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2857:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2881:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "2881:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nativeSrc": "2836:20:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2836:20:15"
                                    },
                                    "nativeSrc": "2836:53:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2836:53:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nativeSrc": "2826:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2826:6:15"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nativeSrc": "2432:474:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2477:9:15",
                            "nodeType": "YulTypedName",
                            "src": "2477:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2488:7:15",
                            "nodeType": "YulTypedName",
                            "src": "2488:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2500:6:15",
                            "nodeType": "YulTypedName",
                            "src": "2500:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "2508:6:15",
                            "nodeType": "YulTypedName",
                            "src": "2508:6:15",
                            "type": ""
                          }
                        ],
                        "src": "2432:474:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "2954:48:15",
                          "nodeType": "YulBlock",
                          "src": "2954:48:15",
                          "statements": [
                            {
                              "nativeSrc": "2964:32:15",
                              "nodeType": "YulAssignment",
                              "src": "2964:32:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "2989:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "2989:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "2982:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "2982:6:15"
                                    },
                                    "nativeSrc": "2982:13:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2982:13:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "2975:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "2975:6:15"
                                },
                                "nativeSrc": "2975:21:15",
                                "nodeType": "YulFunctionCall",
                                "src": "2975:21:15"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nativeSrc": "2964:7:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "2964:7:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nativeSrc": "2912:90:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "2936:5:15",
                            "nodeType": "YulTypedName",
                            "src": "2936:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nativeSrc": "2946:7:15",
                            "nodeType": "YulTypedName",
                            "src": "2946:7:15",
                            "type": ""
                          }
                        ],
                        "src": "2912:90:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "3067:50:15",
                          "nodeType": "YulBlock",
                          "src": "3067:50:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "3084:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "3084:3:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "3104:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "3104:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nativeSrc": "3089:14:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "3089:14:15"
                                    },
                                    "nativeSrc": "3089:21:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3089:21:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3077:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "3077:6:15"
                                },
                                "nativeSrc": "3077:34:15",
                                "nodeType": "YulFunctionCall",
                                "src": "3077:34:15"
                              },
                              "nativeSrc": "3077:34:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "3077:34:15"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bool_to_t_bool_fromStack",
                        "nativeSrc": "3008:109:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "3055:5:15",
                            "nodeType": "YulTypedName",
                            "src": "3055:5:15",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nativeSrc": "3062:3:15",
                            "nodeType": "YulTypedName",
                            "src": "3062:3:15",
                            "type": ""
                          }
                        ],
                        "src": "3008:109:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "3215:118:15",
                          "nodeType": "YulBlock",
                          "src": "3215:118:15",
                          "statements": [
                            {
                              "nativeSrc": "3225:26:15",
                              "nodeType": "YulAssignment",
                              "src": "3225:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3237:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "3237:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3248:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "3248:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3233:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "3233:3:15"
                                },
                                "nativeSrc": "3233:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "3233:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3225:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "3225:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "3299:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "3299:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3312:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "3312:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3323:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "3323:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3308:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "3308:3:15"
                                    },
                                    "nativeSrc": "3308:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3308:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bool_to_t_bool_fromStack",
                                  "nativeSrc": "3261:37:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "3261:37:15"
                                },
                                "nativeSrc": "3261:65:15",
                                "nodeType": "YulFunctionCall",
                                "src": "3261:65:15"
                              },
                              "nativeSrc": "3261:65:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "3261:65:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "3123:210:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3187:9:15",
                            "nodeType": "YulTypedName",
                            "src": "3187:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3199:6:15",
                            "nodeType": "YulTypedName",
                            "src": "3199:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3210:4:15",
                            "nodeType": "YulTypedName",
                            "src": "3210:4:15",
                            "type": ""
                          }
                        ],
                        "src": "3123:210:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "3405:263:15",
                          "nodeType": "YulBlock",
                          "src": "3405:263:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3451:83:15",
                                "nodeType": "YulBlock",
                                "src": "3451:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nativeSrc": "3453:77:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "3453:77:15"
                                      },
                                      "nativeSrc": "3453:79:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3453:79:15"
                                    },
                                    "nativeSrc": "3453:79:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3453:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3426:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "3426:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3435:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "3435:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3422:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "3422:3:15"
                                    },
                                    "nativeSrc": "3422:23:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3422:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3447:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "3447:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3418:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "3418:3:15"
                                },
                                "nativeSrc": "3418:32:15",
                                "nodeType": "YulFunctionCall",
                                "src": "3418:32:15"
                              },
                              "nativeSrc": "3415:119:15",
                              "nodeType": "YulIf",
                              "src": "3415:119:15"
                            },
                            {
                              "nativeSrc": "3544:117:15",
                              "nodeType": "YulBlock",
                              "src": "3544:117:15",
                              "statements": [
                                {
                                  "nativeSrc": "3559:15:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3559:15:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "3573:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "3573:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "3563:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "3563:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "3588:63:15",
                                  "nodeType": "YulAssignment",
                                  "src": "3588:63:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "3623:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "3623:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "3634:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "3634:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "3619:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "3619:3:15"
                                        },
                                        "nativeSrc": "3619:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3619:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3643:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "3643:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nativeSrc": "3598:20:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "3598:20:15"
                                    },
                                    "nativeSrc": "3598:53:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3598:53:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "3588:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "3588:6:15"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "3339:329:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3375:9:15",
                            "nodeType": "YulTypedName",
                            "src": "3375:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3386:7:15",
                            "nodeType": "YulTypedName",
                            "src": "3386:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3398:6:15",
                            "nodeType": "YulTypedName",
                            "src": "3398:6:15",
                            "type": ""
                          }
                        ],
                        "src": "3339:329:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "3739:53:15",
                          "nodeType": "YulBlock",
                          "src": "3739:53:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "3756:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "3756:3:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "3779:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "3779:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nativeSrc": "3761:17:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "3761:17:15"
                                    },
                                    "nativeSrc": "3761:24:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3761:24:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3749:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "3749:6:15"
                                },
                                "nativeSrc": "3749:37:15",
                                "nodeType": "YulFunctionCall",
                                "src": "3749:37:15"
                              },
                              "nativeSrc": "3749:37:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "3749:37:15"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nativeSrc": "3674:118:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "3727:5:15",
                            "nodeType": "YulTypedName",
                            "src": "3727:5:15",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nativeSrc": "3734:3:15",
                            "nodeType": "YulTypedName",
                            "src": "3734:3:15",
                            "type": ""
                          }
                        ],
                        "src": "3674:118:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "3896:124:15",
                          "nodeType": "YulBlock",
                          "src": "3896:124:15",
                          "statements": [
                            {
                              "nativeSrc": "3906:26:15",
                              "nodeType": "YulAssignment",
                              "src": "3906:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3918:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "3918:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3929:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "3929:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3914:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "3914:3:15"
                                },
                                "nativeSrc": "3914:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "3914:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3906:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "3906:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "3986:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "3986:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3999:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "3999:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4010:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "4010:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3995:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "3995:3:15"
                                    },
                                    "nativeSrc": "3995:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3995:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nativeSrc": "3942:43:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "3942:43:15"
                                },
                                "nativeSrc": "3942:71:15",
                                "nodeType": "YulFunctionCall",
                                "src": "3942:71:15"
                              },
                              "nativeSrc": "3942:71:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "3942:71:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "3798:222:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3868:9:15",
                            "nodeType": "YulTypedName",
                            "src": "3868:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3880:6:15",
                            "nodeType": "YulTypedName",
                            "src": "3880:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3891:4:15",
                            "nodeType": "YulTypedName",
                            "src": "3891:4:15",
                            "type": ""
                          }
                        ],
                        "src": "3798:222:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "4126:519:15",
                          "nodeType": "YulBlock",
                          "src": "4126:519:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "4172:83:15",
                                "nodeType": "YulBlock",
                                "src": "4172:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nativeSrc": "4174:77:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "4174:77:15"
                                      },
                                      "nativeSrc": "4174:79:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4174:79:15"
                                    },
                                    "nativeSrc": "4174:79:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4174:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "4147:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "4147:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4156:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "4156:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "4143:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "4143:3:15"
                                    },
                                    "nativeSrc": "4143:23:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4143:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4168:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "4168:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "4139:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "4139:3:15"
                                },
                                "nativeSrc": "4139:32:15",
                                "nodeType": "YulFunctionCall",
                                "src": "4139:32:15"
                              },
                              "nativeSrc": "4136:119:15",
                              "nodeType": "YulIf",
                              "src": "4136:119:15"
                            },
                            {
                              "nativeSrc": "4265:117:15",
                              "nodeType": "YulBlock",
                              "src": "4265:117:15",
                              "statements": [
                                {
                                  "nativeSrc": "4280:15:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4280:15:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "4294:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "4294:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "4284:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "4284:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "4309:63:15",
                                  "nodeType": "YulAssignment",
                                  "src": "4309:63:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "4344:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "4344:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "4355:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "4355:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4340:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "4340:3:15"
                                        },
                                        "nativeSrc": "4340:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4340:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "4364:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "4364:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nativeSrc": "4319:20:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "4319:20:15"
                                    },
                                    "nativeSrc": "4319:53:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4319:53:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "4309:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "4309:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4392:118:15",
                              "nodeType": "YulBlock",
                              "src": "4392:118:15",
                              "statements": [
                                {
                                  "nativeSrc": "4407:16:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4407:16:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "4421:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "4421:2:15",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "4411:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "4411:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "4437:63:15",
                                  "nodeType": "YulAssignment",
                                  "src": "4437:63:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "4472:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "4472:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "4483:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "4483:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4468:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "4468:3:15"
                                        },
                                        "nativeSrc": "4468:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4468:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "4492:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "4492:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nativeSrc": "4447:20:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "4447:20:15"
                                    },
                                    "nativeSrc": "4447:53:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4447:53:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nativeSrc": "4437:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "4437:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4520:118:15",
                              "nodeType": "YulBlock",
                              "src": "4520:118:15",
                              "statements": [
                                {
                                  "nativeSrc": "4535:16:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4535:16:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "4549:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "4549:2:15",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "4539:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "4539:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "4565:63:15",
                                  "nodeType": "YulAssignment",
                                  "src": "4565:63:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "4600:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "4600:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "4611:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "4611:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4596:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "4596:3:15"
                                        },
                                        "nativeSrc": "4596:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4596:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "4620:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "4620:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nativeSrc": "4575:20:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "4575:20:15"
                                    },
                                    "nativeSrc": "4575:53:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4575:53:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nativeSrc": "4565:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "4565:6:15"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nativeSrc": "4026:619:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4080:9:15",
                            "nodeType": "YulTypedName",
                            "src": "4080:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "4091:7:15",
                            "nodeType": "YulTypedName",
                            "src": "4091:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "4103:6:15",
                            "nodeType": "YulTypedName",
                            "src": "4103:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "4111:6:15",
                            "nodeType": "YulTypedName",
                            "src": "4111:6:15",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "4119:6:15",
                            "nodeType": "YulTypedName",
                            "src": "4119:6:15",
                            "type": ""
                          }
                        ],
                        "src": "4026:619:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "4694:43:15",
                          "nodeType": "YulBlock",
                          "src": "4694:43:15",
                          "statements": [
                            {
                              "nativeSrc": "4704:27:15",
                              "nodeType": "YulAssignment",
                              "src": "4704:27:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "4719:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "4719:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4726:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "4726:4:15",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "4715:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "4715:3:15"
                                },
                                "nativeSrc": "4715:16:15",
                                "nodeType": "YulFunctionCall",
                                "src": "4715:16:15"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nativeSrc": "4704:7:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "4704:7:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint8",
                        "nativeSrc": "4651:86:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "4676:5:15",
                            "nodeType": "YulTypedName",
                            "src": "4676:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nativeSrc": "4686:7:15",
                            "nodeType": "YulTypedName",
                            "src": "4686:7:15",
                            "type": ""
                          }
                        ],
                        "src": "4651:86:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "4804:51:15",
                          "nodeType": "YulBlock",
                          "src": "4804:51:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "4821:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "4821:3:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "4842:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "4842:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint8",
                                      "nativeSrc": "4826:15:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "4826:15:15"
                                    },
                                    "nativeSrc": "4826:22:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4826:22:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4814:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "4814:6:15"
                                },
                                "nativeSrc": "4814:35:15",
                                "nodeType": "YulFunctionCall",
                                "src": "4814:35:15"
                              },
                              "nativeSrc": "4814:35:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "4814:35:15"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                        "nativeSrc": "4743:112:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "4792:5:15",
                            "nodeType": "YulTypedName",
                            "src": "4792:5:15",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nativeSrc": "4799:3:15",
                            "nodeType": "YulTypedName",
                            "src": "4799:3:15",
                            "type": ""
                          }
                        ],
                        "src": "4743:112:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "4955:120:15",
                          "nodeType": "YulBlock",
                          "src": "4955:120:15",
                          "statements": [
                            {
                              "nativeSrc": "4965:26:15",
                              "nodeType": "YulAssignment",
                              "src": "4965:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4977:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "4977:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4988:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "4988:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4973:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "4973:3:15"
                                },
                                "nativeSrc": "4973:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "4973:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4965:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "4965:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5041:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "5041:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5054:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "5054:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5065:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "5065:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5050:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "5050:3:15"
                                    },
                                    "nativeSrc": "5050:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5050:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint8_to_t_uint8_fromStack",
                                  "nativeSrc": "5001:39:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "5001:39:15"
                                },
                                "nativeSrc": "5001:67:15",
                                "nodeType": "YulFunctionCall",
                                "src": "5001:67:15"
                              },
                              "nativeSrc": "5001:67:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "5001:67:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nativeSrc": "4861:214:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4927:9:15",
                            "nodeType": "YulTypedName",
                            "src": "4927:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4939:6:15",
                            "nodeType": "YulTypedName",
                            "src": "4939:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4950:4:15",
                            "nodeType": "YulTypedName",
                            "src": "4950:4:15",
                            "type": ""
                          }
                        ],
                        "src": "4861:214:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "5146:53:15",
                          "nodeType": "YulBlock",
                          "src": "5146:53:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "5163:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "5163:3:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "5186:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "5186:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nativeSrc": "5168:17:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "5168:17:15"
                                    },
                                    "nativeSrc": "5168:24:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5168:24:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5156:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "5156:6:15"
                                },
                                "nativeSrc": "5156:37:15",
                                "nodeType": "YulFunctionCall",
                                "src": "5156:37:15"
                              },
                              "nativeSrc": "5156:37:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "5156:37:15"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nativeSrc": "5081:118:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "5134:5:15",
                            "nodeType": "YulTypedName",
                            "src": "5134:5:15",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nativeSrc": "5141:3:15",
                            "nodeType": "YulTypedName",
                            "src": "5141:3:15",
                            "type": ""
                          }
                        ],
                        "src": "5081:118:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "5303:124:15",
                          "nodeType": "YulBlock",
                          "src": "5303:124:15",
                          "statements": [
                            {
                              "nativeSrc": "5313:26:15",
                              "nodeType": "YulAssignment",
                              "src": "5313:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5325:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "5325:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5336:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "5336:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5321:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "5321:3:15"
                                },
                                "nativeSrc": "5321:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "5321:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5313:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "5313:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5393:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "5393:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5406:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "5406:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5417:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "5417:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5402:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "5402:3:15"
                                    },
                                    "nativeSrc": "5402:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5402:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nativeSrc": "5349:43:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "5349:43:15"
                                },
                                "nativeSrc": "5349:71:15",
                                "nodeType": "YulFunctionCall",
                                "src": "5349:71:15"
                              },
                              "nativeSrc": "5349:71:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "5349:71:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "5205:222:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5275:9:15",
                            "nodeType": "YulTypedName",
                            "src": "5275:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5287:6:15",
                            "nodeType": "YulTypedName",
                            "src": "5287:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5298:4:15",
                            "nodeType": "YulTypedName",
                            "src": "5298:4:15",
                            "type": ""
                          }
                        ],
                        "src": "5205:222:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "5499:263:15",
                          "nodeType": "YulBlock",
                          "src": "5499:263:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "5545:83:15",
                                "nodeType": "YulBlock",
                                "src": "5545:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nativeSrc": "5547:77:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "5547:77:15"
                                      },
                                      "nativeSrc": "5547:79:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5547:79:15"
                                    },
                                    "nativeSrc": "5547:79:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5547:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "5520:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "5520:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5529:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "5529:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "5516:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "5516:3:15"
                                    },
                                    "nativeSrc": "5516:23:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5516:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5541:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "5541:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "5512:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "5512:3:15"
                                },
                                "nativeSrc": "5512:32:15",
                                "nodeType": "YulFunctionCall",
                                "src": "5512:32:15"
                              },
                              "nativeSrc": "5509:119:15",
                              "nodeType": "YulIf",
                              "src": "5509:119:15"
                            },
                            {
                              "nativeSrc": "5638:117:15",
                              "nodeType": "YulBlock",
                              "src": "5638:117:15",
                              "statements": [
                                {
                                  "nativeSrc": "5653:15:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "5653:15:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "5667:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "5667:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "5657:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "5657:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "5682:63:15",
                                  "nodeType": "YulAssignment",
                                  "src": "5682:63:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "5717:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "5717:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "5728:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "5728:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "5713:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "5713:3:15"
                                        },
                                        "nativeSrc": "5713:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5713:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "5737:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "5737:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nativeSrc": "5692:20:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "5692:20:15"
                                    },
                                    "nativeSrc": "5692:53:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5692:53:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "5682:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "5682:6:15"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "5433:329:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5469:9:15",
                            "nodeType": "YulTypedName",
                            "src": "5469:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "5480:7:15",
                            "nodeType": "YulTypedName",
                            "src": "5480:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "5492:6:15",
                            "nodeType": "YulTypedName",
                            "src": "5492:6:15",
                            "type": ""
                          }
                        ],
                        "src": "5433:329:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "5857:28:15",
                          "nodeType": "YulBlock",
                          "src": "5857:28:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5874:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "5874:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5877:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "5877:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "5867:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "5867:6:15"
                                },
                                "nativeSrc": "5867:12:15",
                                "nodeType": "YulFunctionCall",
                                "src": "5867:12:15"
                              },
                              "nativeSrc": "5867:12:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "5867:12:15"
                            }
                          ]
                        },
                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                        "nativeSrc": "5768:117:15",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5768:117:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "5980:28:15",
                          "nodeType": "YulBlock",
                          "src": "5980:28:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5997:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "5997:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6000:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "6000:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "5990:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "5990:6:15"
                                },
                                "nativeSrc": "5990:12:15",
                                "nodeType": "YulFunctionCall",
                                "src": "5990:12:15"
                              },
                              "nativeSrc": "5990:12:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "5990:12:15"
                            }
                          ]
                        },
                        "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                        "nativeSrc": "5891:117:15",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5891:117:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "6042:152:15",
                          "nodeType": "YulBlock",
                          "src": "6042:152:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6059:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "6059:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6062:77:15",
                                    "nodeType": "YulLiteral",
                                    "src": "6062:77:15",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6052:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6052:6:15"
                                },
                                "nativeSrc": "6052:88:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6052:88:15"
                              },
                              "nativeSrc": "6052:88:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "6052:88:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6156:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "6156:1:15",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6159:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "6159:4:15",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6149:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6149:6:15"
                                },
                                "nativeSrc": "6149:15:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6149:15:15"
                              },
                              "nativeSrc": "6149:15:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "6149:15:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6180:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "6180:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6183:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "6183:4:15",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "6173:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6173:6:15"
                                },
                                "nativeSrc": "6173:15:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6173:15:15"
                              },
                              "nativeSrc": "6173:15:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "6173:15:15"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "6014:180:15",
                        "nodeType": "YulFunctionDefinition",
                        "src": "6014:180:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "6243:238:15",
                          "nodeType": "YulBlock",
                          "src": "6243:238:15",
                          "statements": [
                            {
                              "nativeSrc": "6253:58:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "6253:58:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "6275:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "6275:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "size",
                                        "nativeSrc": "6305:4:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "6305:4:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nativeSrc": "6283:21:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "6283:21:15"
                                    },
                                    "nativeSrc": "6283:27:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6283:27:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6271:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6271:3:15"
                                },
                                "nativeSrc": "6271:40:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6271:40:15"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "6257:10:15",
                                  "nodeType": "YulTypedName",
                                  "src": "6257:10:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "6422:22:15",
                                "nodeType": "YulBlock",
                                "src": "6422:22:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "6424:16:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "6424:16:15"
                                      },
                                      "nativeSrc": "6424:18:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6424:18:15"
                                    },
                                    "nativeSrc": "6424:18:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6424:18:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "6365:10:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "6365:10:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6377:18:15",
                                        "nodeType": "YulLiteral",
                                        "src": "6377:18:15",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "6362:2:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "6362:2:15"
                                    },
                                    "nativeSrc": "6362:34:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6362:34:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "6401:10:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "6401:10:15"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "6413:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "6413:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "6398:2:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "6398:2:15"
                                    },
                                    "nativeSrc": "6398:22:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6398:22:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "6359:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6359:2:15"
                                },
                                "nativeSrc": "6359:62:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6359:62:15"
                              },
                              "nativeSrc": "6356:88:15",
                              "nodeType": "YulIf",
                              "src": "6356:88:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6460:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "6460:2:15",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nativeSrc": "6464:10:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "6464:10:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "6453:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6453:6:15"
                                },
                                "nativeSrc": "6453:22:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6453:22:15"
                              },
                              "nativeSrc": "6453:22:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "6453:22:15"
                            }
                          ]
                        },
                        "name": "finalize_allocation",
                        "nativeSrc": "6200:281:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nativeSrc": "6229:6:15",
                            "nodeType": "YulTypedName",
                            "src": "6229:6:15",
                            "type": ""
                          },
                          {
                            "name": "size",
                            "nativeSrc": "6237:4:15",
                            "nodeType": "YulTypedName",
                            "src": "6237:4:15",
                            "type": ""
                          }
                        ],
                        "src": "6200:281:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "6528:88:15",
                          "nodeType": "YulBlock",
                          "src": "6528:88:15",
                          "statements": [
                            {
                              "nativeSrc": "6538:30:15",
                              "nodeType": "YulAssignment",
                              "src": "6538:30:15",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_unbounded",
                                  "nativeSrc": "6548:18:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6548:18:15"
                                },
                                "nativeSrc": "6548:20:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6548:20:15"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "6538:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6538:6:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "6597:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "6597:6:15"
                                  },
                                  {
                                    "name": "size",
                                    "nativeSrc": "6605:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "6605:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "finalize_allocation",
                                  "nativeSrc": "6577:19:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6577:19:15"
                                },
                                "nativeSrc": "6577:33:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6577:33:15"
                              },
                              "nativeSrc": "6577:33:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "6577:33:15"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nativeSrc": "6487:129:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nativeSrc": "6512:4:15",
                            "nodeType": "YulTypedName",
                            "src": "6512:4:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nativeSrc": "6521:6:15",
                            "nodeType": "YulTypedName",
                            "src": "6521:6:15",
                            "type": ""
                          }
                        ],
                        "src": "6487:129:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "6688:241:15",
                          "nodeType": "YulBlock",
                          "src": "6688:241:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "6793:22:15",
                                "nodeType": "YulBlock",
                                "src": "6793:22:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "6795:16:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "6795:16:15"
                                      },
                                      "nativeSrc": "6795:18:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6795:18:15"
                                    },
                                    "nativeSrc": "6795:18:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6795:18:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "6765:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "6765:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6773:18:15",
                                    "nodeType": "YulLiteral",
                                    "src": "6773:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "6762:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6762:2:15"
                                },
                                "nativeSrc": "6762:30:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6762:30:15"
                              },
                              "nativeSrc": "6759:56:15",
                              "nodeType": "YulIf",
                              "src": "6759:56:15"
                            },
                            {
                              "nativeSrc": "6825:37:15",
                              "nodeType": "YulAssignment",
                              "src": "6825:37:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "6855:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "6855:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nativeSrc": "6833:21:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6833:21:15"
                                },
                                "nativeSrc": "6833:29:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6833:29:15"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nativeSrc": "6825:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6825:4:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "6899:23:15",
                              "nodeType": "YulAssignment",
                              "src": "6899:23:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nativeSrc": "6911:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "6911:4:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "6917:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "6917:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "6907:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6907:3:15"
                                },
                                "nativeSrc": "6907:15:15",
                                "nodeType": "YulFunctionCall",
                                "src": "6907:15:15"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nativeSrc": "6899:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "6899:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_bytes_memory_ptr",
                        "nativeSrc": "6622:307:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nativeSrc": "6672:6:15",
                            "nodeType": "YulTypedName",
                            "src": "6672:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nativeSrc": "6683:4:15",
                            "nodeType": "YulTypedName",
                            "src": "6683:4:15",
                            "type": ""
                          }
                        ],
                        "src": "6622:307:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "6999:84:15",
                          "nodeType": "YulBlock",
                          "src": "6999:84:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nativeSrc": "7023:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7023:3:15"
                                  },
                                  {
                                    "name": "src",
                                    "nativeSrc": "7028:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7028:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "7033:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7033:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nativeSrc": "7010:12:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7010:12:15"
                                },
                                "nativeSrc": "7010:30:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7010:30:15"
                              },
                              "nativeSrc": "7010:30:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "7010:30:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nativeSrc": "7060:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7060:3:15"
                                      },
                                      {
                                        "name": "length",
                                        "nativeSrc": "7065:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7065:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7056:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "7056:3:15"
                                    },
                                    "nativeSrc": "7056:16:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7056:16:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7074:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "7074:1:15",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7049:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7049:6:15"
                                },
                                "nativeSrc": "7049:27:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7049:27:15"
                              },
                              "nativeSrc": "7049:27:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "7049:27:15"
                            }
                          ]
                        },
                        "name": "copy_calldata_to_memory_with_cleanup",
                        "nativeSrc": "6935:148:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nativeSrc": "6981:3:15",
                            "nodeType": "YulTypedName",
                            "src": "6981:3:15",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nativeSrc": "6986:3:15",
                            "nodeType": "YulTypedName",
                            "src": "6986:3:15",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nativeSrc": "6991:6:15",
                            "nodeType": "YulTypedName",
                            "src": "6991:6:15",
                            "type": ""
                          }
                        ],
                        "src": "6935:148:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "7172:340:15",
                          "nodeType": "YulBlock",
                          "src": "7172:340:15",
                          "statements": [
                            {
                              "nativeSrc": "7182:74:15",
                              "nodeType": "YulAssignment",
                              "src": "7182:74:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "7248:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7248:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_bytes_memory_ptr",
                                      "nativeSrc": "7207:40:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "7207:40:15"
                                    },
                                    "nativeSrc": "7207:48:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7207:48:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nativeSrc": "7191:15:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7191:15:15"
                                },
                                "nativeSrc": "7191:65:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7191:65:15"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nativeSrc": "7182:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7182:5:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nativeSrc": "7272:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7272:5:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "7279:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7279:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7265:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7265:6:15"
                                },
                                "nativeSrc": "7265:21:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7265:21:15"
                              },
                              "nativeSrc": "7265:21:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "7265:21:15"
                            },
                            {
                              "nativeSrc": "7295:27:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "7295:27:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nativeSrc": "7310:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7310:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7317:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "7317:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "7306:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7306:3:15"
                                },
                                "nativeSrc": "7306:16:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7306:16:15"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nativeSrc": "7299:3:15",
                                  "nodeType": "YulTypedName",
                                  "src": "7299:3:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "7360:83:15",
                                "nodeType": "YulBlock",
                                "src": "7360:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                        "nativeSrc": "7362:77:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7362:77:15"
                                      },
                                      "nativeSrc": "7362:79:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7362:79:15"
                                    },
                                    "nativeSrc": "7362:79:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7362:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nativeSrc": "7341:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7341:3:15"
                                      },
                                      {
                                        "name": "length",
                                        "nativeSrc": "7346:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7346:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7337:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "7337:3:15"
                                    },
                                    "nativeSrc": "7337:16:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7337:16:15"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "7355:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7355:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "7334:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7334:2:15"
                                },
                                "nativeSrc": "7334:25:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7334:25:15"
                              },
                              "nativeSrc": "7331:112:15",
                              "nodeType": "YulIf",
                              "src": "7331:112:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "7489:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7489:3:15"
                                  },
                                  {
                                    "name": "dst",
                                    "nativeSrc": "7494:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7494:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "7499:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7499:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory_with_cleanup",
                                  "nativeSrc": "7452:36:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7452:36:15"
                                },
                                "nativeSrc": "7452:54:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7452:54:15"
                              },
                              "nativeSrc": "7452:54:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "7452:54:15"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_bytes_memory_ptr",
                        "nativeSrc": "7089:423:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nativeSrc": "7145:3:15",
                            "nodeType": "YulTypedName",
                            "src": "7145:3:15",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nativeSrc": "7150:6:15",
                            "nodeType": "YulTypedName",
                            "src": "7150:6:15",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "7158:3:15",
                            "nodeType": "YulTypedName",
                            "src": "7158:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nativeSrc": "7166:5:15",
                            "nodeType": "YulTypedName",
                            "src": "7166:5:15",
                            "type": ""
                          }
                        ],
                        "src": "7089:423:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "7592:277:15",
                          "nodeType": "YulBlock",
                          "src": "7592:277:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "7641:83:15",
                                "nodeType": "YulBlock",
                                "src": "7641:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                        "nativeSrc": "7643:77:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7643:77:15"
                                      },
                                      "nativeSrc": "7643:79:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7643:79:15"
                                    },
                                    "nativeSrc": "7643:79:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7643:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nativeSrc": "7620:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "7620:6:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "7628:4:15",
                                            "nodeType": "YulLiteral",
                                            "src": "7628:4:15",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "7616:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "7616:3:15"
                                        },
                                        "nativeSrc": "7616:17:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "7616:17:15"
                                      },
                                      {
                                        "name": "end",
                                        "nativeSrc": "7635:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7635:3:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "7612:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "7612:3:15"
                                    },
                                    "nativeSrc": "7612:27:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7612:27:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "7605:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7605:6:15"
                                },
                                "nativeSrc": "7605:35:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7605:35:15"
                              },
                              "nativeSrc": "7602:122:15",
                              "nodeType": "YulIf",
                              "src": "7602:122:15"
                            },
                            {
                              "nativeSrc": "7733:34:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "7733:34:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "7760:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7760:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "7747:12:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7747:12:15"
                                },
                                "nativeSrc": "7747:20:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7747:20:15"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "7737:6:15",
                                  "nodeType": "YulTypedName",
                                  "src": "7737:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "7776:87:15",
                              "nodeType": "YulAssignment",
                              "src": "7776:87:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "7836:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7836:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7844:4:15",
                                        "nodeType": "YulLiteral",
                                        "src": "7844:4:15",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7832:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "7832:3:15"
                                    },
                                    "nativeSrc": "7832:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7832:17:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "7851:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7851:6:15"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "7859:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "7859:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_bytes_memory_ptr",
                                  "nativeSrc": "7785:46:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7785:46:15"
                                },
                                "nativeSrc": "7785:78:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7785:78:15"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nativeSrc": "7776:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7776:5:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_memory_ptr",
                        "nativeSrc": "7531:338:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "7570:6:15",
                            "nodeType": "YulTypedName",
                            "src": "7570:6:15",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "7578:3:15",
                            "nodeType": "YulTypedName",
                            "src": "7578:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nativeSrc": "7586:5:15",
                            "nodeType": "YulTypedName",
                            "src": "7586:5:15",
                            "type": ""
                          }
                        ],
                        "src": "7531:338:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "7967:560:15",
                          "nodeType": "YulBlock",
                          "src": "7967:560:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "8013:83:15",
                                "nodeType": "YulBlock",
                                "src": "8013:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nativeSrc": "8015:77:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "8015:77:15"
                                      },
                                      "nativeSrc": "8015:79:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "8015:79:15"
                                    },
                                    "nativeSrc": "8015:79:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8015:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "7988:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7988:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7997:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "7997:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "7984:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "7984:3:15"
                                    },
                                    "nativeSrc": "7984:23:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7984:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8009:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "8009:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "7980:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "7980:3:15"
                                },
                                "nativeSrc": "7980:32:15",
                                "nodeType": "YulFunctionCall",
                                "src": "7980:32:15"
                              },
                              "nativeSrc": "7977:119:15",
                              "nodeType": "YulIf",
                              "src": "7977:119:15"
                            },
                            {
                              "nativeSrc": "8106:117:15",
                              "nodeType": "YulBlock",
                              "src": "8106:117:15",
                              "statements": [
                                {
                                  "nativeSrc": "8121:15:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8121:15:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "8135:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "8135:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "8125:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "8125:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "8150:63:15",
                                  "nodeType": "YulAssignment",
                                  "src": "8150:63:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "8185:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "8185:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "8196:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "8196:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "8181:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "8181:3:15"
                                        },
                                        "nativeSrc": "8181:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8181:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "8205:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "8205:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nativeSrc": "8160:20:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "8160:20:15"
                                    },
                                    "nativeSrc": "8160:53:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8160:53:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "8150:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "8150:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nativeSrc": "8233:287:15",
                              "nodeType": "YulBlock",
                              "src": "8233:287:15",
                              "statements": [
                                {
                                  "nativeSrc": "8248:46:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8248:46:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "8279:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "8279:9:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "8290:2:15",
                                            "nodeType": "YulLiteral",
                                            "src": "8290:2:15",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "8275:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "8275:3:15"
                                        },
                                        "nativeSrc": "8275:18:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8275:18:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nativeSrc": "8262:12:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "8262:12:15"
                                    },
                                    "nativeSrc": "8262:32:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8262:32:15"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "8252:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "8252:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nativeSrc": "8341:83:15",
                                    "nodeType": "YulBlock",
                                    "src": "8341:83:15",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nativeSrc": "8343:77:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "8343:77:15"
                                          },
                                          "nativeSrc": "8343:79:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "8343:79:15"
                                        },
                                        "nativeSrc": "8343:79:15",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "8343:79:15"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nativeSrc": "8313:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "8313:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8321:18:15",
                                        "nodeType": "YulLiteral",
                                        "src": "8321:18:15",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "8310:2:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "8310:2:15"
                                    },
                                    "nativeSrc": "8310:30:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8310:30:15"
                                  },
                                  "nativeSrc": "8307:117:15",
                                  "nodeType": "YulIf",
                                  "src": "8307:117:15"
                                },
                                {
                                  "nativeSrc": "8438:72:15",
                                  "nodeType": "YulAssignment",
                                  "src": "8438:72:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "8482:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "8482:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "8493:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "8493:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "8478:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "8478:3:15"
                                        },
                                        "nativeSrc": "8478:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "8478:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "8502:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "8502:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr",
                                      "nativeSrc": "8448:29:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "8448:29:15"
                                    },
                                    "nativeSrc": "8448:62:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8448:62:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nativeSrc": "8438:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "8438:6:15"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
                        "nativeSrc": "7875:652:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7929:9:15",
                            "nodeType": "YulTypedName",
                            "src": "7929:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "7940:7:15",
                            "nodeType": "YulTypedName",
                            "src": "7940:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "7952:6:15",
                            "nodeType": "YulTypedName",
                            "src": "7952:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "7960:6:15",
                            "nodeType": "YulTypedName",
                            "src": "7960:6:15",
                            "type": ""
                          }
                        ],
                        "src": "7875:652:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "8578:32:15",
                          "nodeType": "YulBlock",
                          "src": "8578:32:15",
                          "statements": [
                            {
                              "nativeSrc": "8588:16:15",
                              "nodeType": "YulAssignment",
                              "src": "8588:16:15",
                              "value": {
                                "name": "value",
                                "nativeSrc": "8599:5:15",
                                "nodeType": "YulIdentifier",
                                "src": "8599:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nativeSrc": "8588:7:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "8588:7:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes32",
                        "nativeSrc": "8533:77:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "8560:5:15",
                            "nodeType": "YulTypedName",
                            "src": "8560:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nativeSrc": "8570:7:15",
                            "nodeType": "YulTypedName",
                            "src": "8570:7:15",
                            "type": ""
                          }
                        ],
                        "src": "8533:77:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "8681:53:15",
                          "nodeType": "YulBlock",
                          "src": "8681:53:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "8698:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "8698:3:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "8721:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "8721:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes32",
                                      "nativeSrc": "8703:17:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "8703:17:15"
                                    },
                                    "nativeSrc": "8703:24:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8703:24:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8691:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "8691:6:15"
                                },
                                "nativeSrc": "8691:37:15",
                                "nodeType": "YulFunctionCall",
                                "src": "8691:37:15"
                              },
                              "nativeSrc": "8691:37:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "8691:37:15"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                        "nativeSrc": "8616:118:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "8669:5:15",
                            "nodeType": "YulTypedName",
                            "src": "8669:5:15",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nativeSrc": "8676:3:15",
                            "nodeType": "YulTypedName",
                            "src": "8676:3:15",
                            "type": ""
                          }
                        ],
                        "src": "8616:118:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "8838:124:15",
                          "nodeType": "YulBlock",
                          "src": "8838:124:15",
                          "statements": [
                            {
                              "nativeSrc": "8848:26:15",
                              "nodeType": "YulAssignment",
                              "src": "8848:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8860:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "8860:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8871:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "8871:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8856:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "8856:3:15"
                                },
                                "nativeSrc": "8856:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "8856:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "8848:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "8848:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "8928:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "8928:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8941:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "8941:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8952:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "8952:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8937:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "8937:3:15"
                                    },
                                    "nativeSrc": "8937:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8937:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                                  "nativeSrc": "8884:43:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "8884:43:15"
                                },
                                "nativeSrc": "8884:71:15",
                                "nodeType": "YulFunctionCall",
                                "src": "8884:71:15"
                              },
                              "nativeSrc": "8884:71:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "8884:71:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nativeSrc": "8740:222:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "8810:9:15",
                            "nodeType": "YulTypedName",
                            "src": "8810:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "8822:6:15",
                            "nodeType": "YulTypedName",
                            "src": "8822:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "8833:4:15",
                            "nodeType": "YulTypedName",
                            "src": "8833:4:15",
                            "type": ""
                          }
                        ],
                        "src": "8740:222:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "9051:391:15",
                          "nodeType": "YulBlock",
                          "src": "9051:391:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "9097:83:15",
                                "nodeType": "YulBlock",
                                "src": "9097:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nativeSrc": "9099:77:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "9099:77:15"
                                      },
                                      "nativeSrc": "9099:79:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9099:79:15"
                                    },
                                    "nativeSrc": "9099:79:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9099:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "9072:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "9072:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9081:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "9081:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "9068:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "9068:3:15"
                                    },
                                    "nativeSrc": "9068:23:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9068:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9093:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9093:2:15",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "9064:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "9064:3:15"
                                },
                                "nativeSrc": "9064:32:15",
                                "nodeType": "YulFunctionCall",
                                "src": "9064:32:15"
                              },
                              "nativeSrc": "9061:119:15",
                              "nodeType": "YulIf",
                              "src": "9061:119:15"
                            },
                            {
                              "nativeSrc": "9190:117:15",
                              "nodeType": "YulBlock",
                              "src": "9190:117:15",
                              "statements": [
                                {
                                  "nativeSrc": "9205:15:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9205:15:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "9219:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9219:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "9209:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "9209:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "9234:63:15",
                                  "nodeType": "YulAssignment",
                                  "src": "9234:63:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "9269:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "9269:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "9280:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "9280:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "9265:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "9265:3:15"
                                        },
                                        "nativeSrc": "9265:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "9265:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "9289:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "9289:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nativeSrc": "9244:20:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "9244:20:15"
                                    },
                                    "nativeSrc": "9244:53:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9244:53:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "9234:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "9234:6:15"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9317:118:15",
                              "nodeType": "YulBlock",
                              "src": "9317:118:15",
                              "statements": [
                                {
                                  "nativeSrc": "9332:16:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9332:16:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "9346:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9346:2:15",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "9336:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "9336:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "9362:63:15",
                                  "nodeType": "YulAssignment",
                                  "src": "9362:63:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "9397:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "9397:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "9408:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "9408:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "9393:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "9393:3:15"
                                        },
                                        "nativeSrc": "9393:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "9393:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "9417:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "9417:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nativeSrc": "9372:20:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "9372:20:15"
                                    },
                                    "nativeSrc": "9372:53:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9372:53:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nativeSrc": "9362:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "9362:6:15"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nativeSrc": "8968:474:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "9013:9:15",
                            "nodeType": "YulTypedName",
                            "src": "9013:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "9024:7:15",
                            "nodeType": "YulTypedName",
                            "src": "9024:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "9036:6:15",
                            "nodeType": "YulTypedName",
                            "src": "9036:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "9044:6:15",
                            "nodeType": "YulTypedName",
                            "src": "9044:6:15",
                            "type": ""
                          }
                        ],
                        "src": "8968:474:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "9476:152:15",
                          "nodeType": "YulBlock",
                          "src": "9476:152:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9493:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9493:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9496:77:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9496:77:15",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9486:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "9486:6:15"
                                },
                                "nativeSrc": "9486:88:15",
                                "nodeType": "YulFunctionCall",
                                "src": "9486:88:15"
                              },
                              "nativeSrc": "9486:88:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "9486:88:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9590:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9590:1:15",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9593:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9593:4:15",
                                    "type": "",
                                    "value": "0x22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9583:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "9583:6:15"
                                },
                                "nativeSrc": "9583:15:15",
                                "nodeType": "YulFunctionCall",
                                "src": "9583:15:15"
                              },
                              "nativeSrc": "9583:15:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "9583:15:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9614:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9614:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9617:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9617:4:15",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "9607:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "9607:6:15"
                                },
                                "nativeSrc": "9607:15:15",
                                "nodeType": "YulFunctionCall",
                                "src": "9607:15:15"
                              },
                              "nativeSrc": "9607:15:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "9607:15:15"
                            }
                          ]
                        },
                        "name": "panic_error_0x22",
                        "nativeSrc": "9448:180:15",
                        "nodeType": "YulFunctionDefinition",
                        "src": "9448:180:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "9685:269:15",
                          "nodeType": "YulBlock",
                          "src": "9685:269:15",
                          "statements": [
                            {
                              "nativeSrc": "9695:22:15",
                              "nodeType": "YulAssignment",
                              "src": "9695:22:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "9709:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "9709:4:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9715:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9715:1:15",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nativeSrc": "9705:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "9705:3:15"
                                },
                                "nativeSrc": "9705:12:15",
                                "nodeType": "YulFunctionCall",
                                "src": "9705:12:15"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "9695:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "9695:6:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "9726:38:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "9726:38:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "9756:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "9756:4:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9762:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "9762:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "9752:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "9752:3:15"
                                },
                                "nativeSrc": "9752:12:15",
                                "nodeType": "YulFunctionCall",
                                "src": "9752:12:15"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "9730:18:15",
                                  "nodeType": "YulTypedName",
                                  "src": "9730:18:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "9803:51:15",
                                "nodeType": "YulBlock",
                                "src": "9803:51:15",
                                "statements": [
                                  {
                                    "nativeSrc": "9817:27:15",
                                    "nodeType": "YulAssignment",
                                    "src": "9817:27:15",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "9831:6:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "9831:6:15"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9839:4:15",
                                          "nodeType": "YulLiteral",
                                          "src": "9839:4:15",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "9827:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "9827:3:15"
                                      },
                                      "nativeSrc": "9827:17:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9827:17:15"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "9817:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "9817:6:15"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "9783:18:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "9783:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "9776:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "9776:6:15"
                                },
                                "nativeSrc": "9776:26:15",
                                "nodeType": "YulFunctionCall",
                                "src": "9776:26:15"
                              },
                              "nativeSrc": "9773:81:15",
                              "nodeType": "YulIf",
                              "src": "9773:81:15"
                            },
                            {
                              "body": {
                                "nativeSrc": "9906:42:15",
                                "nodeType": "YulBlock",
                                "src": "9906:42:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x22",
                                        "nativeSrc": "9920:16:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "9920:16:15"
                                      },
                                      "nativeSrc": "9920:18:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9920:18:15"
                                    },
                                    "nativeSrc": "9920:18:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9920:18:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "9870:18:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "9870:18:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "9893:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "9893:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9901:2:15",
                                        "nodeType": "YulLiteral",
                                        "src": "9901:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "9890:2:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "9890:2:15"
                                    },
                                    "nativeSrc": "9890:14:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9890:14:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "9867:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "9867:2:15"
                                },
                                "nativeSrc": "9867:38:15",
                                "nodeType": "YulFunctionCall",
                                "src": "9867:38:15"
                              },
                              "nativeSrc": "9864:84:15",
                              "nodeType": "YulIf",
                              "src": "9864:84:15"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "9634:320:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "9669:4:15",
                            "nodeType": "YulTypedName",
                            "src": "9669:4:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "9678:6:15",
                            "nodeType": "YulTypedName",
                            "src": "9678:6:15",
                            "type": ""
                          }
                        ],
                        "src": "9634:320:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "10066:66:15",
                          "nodeType": "YulBlock",
                          "src": "10066:66:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "10088:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "10088:6:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10096:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "10096:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "10084:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "10084:3:15"
                                    },
                                    "nativeSrc": "10084:14:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10084:14:15"
                                  },
                                  {
                                    "hexValue": "5472616e7366657273206172652064697361626c6564",
                                    "kind": "string",
                                    "nativeSrc": "10100:24:15",
                                    "nodeType": "YulLiteral",
                                    "src": "10100:24:15",
                                    "type": "",
                                    "value": "Transfers are disabled"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10077:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10077:6:15"
                                },
                                "nativeSrc": "10077:48:15",
                                "nodeType": "YulFunctionCall",
                                "src": "10077:48:15"
                              },
                              "nativeSrc": "10077:48:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "10077:48:15"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce",
                        "nativeSrc": "9960:172:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nativeSrc": "10058:6:15",
                            "nodeType": "YulTypedName",
                            "src": "10058:6:15",
                            "type": ""
                          }
                        ],
                        "src": "9960:172:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "10284:220:15",
                          "nodeType": "YulBlock",
                          "src": "10284:220:15",
                          "statements": [
                            {
                              "nativeSrc": "10294:74:15",
                              "nodeType": "YulAssignment",
                              "src": "10294:74:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "10360:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "10360:3:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10365:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "10365:2:15",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nativeSrc": "10301:58:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10301:58:15"
                                },
                                "nativeSrc": "10301:67:15",
                                "nodeType": "YulFunctionCall",
                                "src": "10301:67:15"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "10294:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10294:3:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "10466:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "10466:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce",
                                  "nativeSrc": "10377:88:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10377:88:15"
                                },
                                "nativeSrc": "10377:93:15",
                                "nodeType": "YulFunctionCall",
                                "src": "10377:93:15"
                              },
                              "nativeSrc": "10377:93:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "10377:93:15"
                            },
                            {
                              "nativeSrc": "10479:19:15",
                              "nodeType": "YulAssignment",
                              "src": "10479:19:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "10490:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "10490:3:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10495:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "10495:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "10486:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10486:3:15"
                                },
                                "nativeSrc": "10486:12:15",
                                "nodeType": "YulFunctionCall",
                                "src": "10486:12:15"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "10479:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10479:3:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce_to_t_string_memory_ptr_fromStack",
                        "nativeSrc": "10138:366:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "10272:3:15",
                            "nodeType": "YulTypedName",
                            "src": "10272:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "10280:3:15",
                            "nodeType": "YulTypedName",
                            "src": "10280:3:15",
                            "type": ""
                          }
                        ],
                        "src": "10138:366:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "10681:248:15",
                          "nodeType": "YulBlock",
                          "src": "10681:248:15",
                          "statements": [
                            {
                              "nativeSrc": "10691:26:15",
                              "nodeType": "YulAssignment",
                              "src": "10691:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "10703:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "10703:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10714:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "10714:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "10699:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10699:3:15"
                                },
                                "nativeSrc": "10699:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "10699:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "10691:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10691:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "10738:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "10738:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10749:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "10749:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "10734:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "10734:3:15"
                                    },
                                    "nativeSrc": "10734:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10734:17:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nativeSrc": "10757:4:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "10757:4:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "10763:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "10763:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "10753:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "10753:3:15"
                                    },
                                    "nativeSrc": "10753:20:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10753:20:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10727:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10727:6:15"
                                },
                                "nativeSrc": "10727:47:15",
                                "nodeType": "YulFunctionCall",
                                "src": "10727:47:15"
                              },
                              "nativeSrc": "10727:47:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "10727:47:15"
                            },
                            {
                              "nativeSrc": "10783:139:15",
                              "nodeType": "YulAssignment",
                              "src": "10783:139:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nativeSrc": "10917:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "10917:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce_to_t_string_memory_ptr_fromStack",
                                  "nativeSrc": "10791:124:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10791:124:15"
                                },
                                "nativeSrc": "10791:131:15",
                                "nodeType": "YulFunctionCall",
                                "src": "10791:131:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "10783:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10783:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "10510:419:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "10661:9:15",
                            "nodeType": "YulTypedName",
                            "src": "10661:9:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "10676:4:15",
                            "nodeType": "YulTypedName",
                            "src": "10676:4:15",
                            "type": ""
                          }
                        ],
                        "src": "10510:419:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "10963:152:15",
                          "nodeType": "YulBlock",
                          "src": "10963:152:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10980:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "10980:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10983:77:15",
                                    "nodeType": "YulLiteral",
                                    "src": "10983:77:15",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "10973:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "10973:6:15"
                                },
                                "nativeSrc": "10973:88:15",
                                "nodeType": "YulFunctionCall",
                                "src": "10973:88:15"
                              },
                              "nativeSrc": "10973:88:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "10973:88:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11077:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "11077:1:15",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11080:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "11080:4:15",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11070:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "11070:6:15"
                                },
                                "nativeSrc": "11070:15:15",
                                "nodeType": "YulFunctionCall",
                                "src": "11070:15:15"
                              },
                              "nativeSrc": "11070:15:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "11070:15:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11101:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "11101:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11104:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "11104:4:15",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "11094:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "11094:6:15"
                                },
                                "nativeSrc": "11094:15:15",
                                "nodeType": "YulFunctionCall",
                                "src": "11094:15:15"
                              },
                              "nativeSrc": "11094:15:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "11094:15:15"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "10935:180:15",
                        "nodeType": "YulFunctionDefinition",
                        "src": "10935:180:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "11172:51:15",
                          "nodeType": "YulBlock",
                          "src": "11172:51:15",
                          "statements": [
                            {
                              "nativeSrc": "11182:34:15",
                              "nodeType": "YulAssignment",
                              "src": "11182:34:15",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11207:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "11207:1:15",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "value",
                                    "nativeSrc": "11210:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "11210:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "11203:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "11203:3:15"
                                },
                                "nativeSrc": "11203:13:15",
                                "nodeType": "YulFunctionCall",
                                "src": "11203:13:15"
                              },
                              "variableNames": [
                                {
                                  "name": "newValue",
                                  "nativeSrc": "11182:8:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "11182:8:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "shift_right_1_unsigned",
                        "nativeSrc": "11121:102:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "11153:5:15",
                            "nodeType": "YulTypedName",
                            "src": "11153:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "newValue",
                            "nativeSrc": "11163:8:15",
                            "nodeType": "YulTypedName",
                            "src": "11163:8:15",
                            "type": ""
                          }
                        ],
                        "src": "11121:102:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "11302:775:15",
                          "nodeType": "YulBlock",
                          "src": "11302:775:15",
                          "statements": [
                            {
                              "nativeSrc": "11312:15:15",
                              "nodeType": "YulAssignment",
                              "src": "11312:15:15",
                              "value": {
                                "name": "_power",
                                "nativeSrc": "11321:6:15",
                                "nodeType": "YulIdentifier",
                                "src": "11321:6:15"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "11312:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "11312:5:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "11336:14:15",
                              "nodeType": "YulAssignment",
                              "src": "11336:14:15",
                              "value": {
                                "name": "_base",
                                "nativeSrc": "11345:5:15",
                                "nodeType": "YulIdentifier",
                                "src": "11345:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nativeSrc": "11336:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "11336:4:15"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "11394:677:15",
                                "nodeType": "YulBlock",
                                "src": "11394:677:15",
                                "statements": [
                                  {
                                    "body": {
                                      "nativeSrc": "11482:22:15",
                                      "nodeType": "YulBlock",
                                      "src": "11482:22:15",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nativeSrc": "11484:16:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "11484:16:15"
                                            },
                                            "nativeSrc": "11484:18:15",
                                            "nodeType": "YulFunctionCall",
                                            "src": "11484:18:15"
                                          },
                                          "nativeSrc": "11484:18:15",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "11484:18:15"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "11460:4:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "11460:4:15"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "max",
                                              "nativeSrc": "11470:3:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "11470:3:15"
                                            },
                                            {
                                              "name": "base",
                                              "nativeSrc": "11475:4:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "11475:4:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nativeSrc": "11466:3:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "11466:3:15"
                                          },
                                          "nativeSrc": "11466:14:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "11466:14:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nativeSrc": "11457:2:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "11457:2:15"
                                      },
                                      "nativeSrc": "11457:24:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11457:24:15"
                                    },
                                    "nativeSrc": "11454:50:15",
                                    "nodeType": "YulIf",
                                    "src": "11454:50:15"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "11549:419:15",
                                      "nodeType": "YulBlock",
                                      "src": "11549:419:15",
                                      "statements": [
                                        {
                                          "nativeSrc": "11929:25:15",
                                          "nodeType": "YulAssignment",
                                          "src": "11929:25:15",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nativeSrc": "11942:5:15",
                                                "nodeType": "YulIdentifier",
                                                "src": "11942:5:15"
                                              },
                                              {
                                                "name": "base",
                                                "nativeSrc": "11949:4:15",
                                                "nodeType": "YulIdentifier",
                                                "src": "11949:4:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nativeSrc": "11938:3:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "11938:3:15"
                                            },
                                            "nativeSrc": "11938:16:15",
                                            "nodeType": "YulFunctionCall",
                                            "src": "11938:16:15"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nativeSrc": "11929:5:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "11929:5:15"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "11524:8:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "11524:8:15"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "11534:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "11534:1:15",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "11520:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "11520:3:15"
                                      },
                                      "nativeSrc": "11520:16:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11520:16:15"
                                    },
                                    "nativeSrc": "11517:451:15",
                                    "nodeType": "YulIf",
                                    "src": "11517:451:15"
                                  },
                                  {
                                    "nativeSrc": "11981:23:15",
                                    "nodeType": "YulAssignment",
                                    "src": "11981:23:15",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "11993:4:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "11993:4:15"
                                        },
                                        {
                                          "name": "base",
                                          "nativeSrc": "11999:4:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "11999:4:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nativeSrc": "11989:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "11989:3:15"
                                      },
                                      "nativeSrc": "11989:15:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "11989:15:15"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nativeSrc": "11981:4:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "11981:4:15"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "12017:44:15",
                                    "nodeType": "YulAssignment",
                                    "src": "12017:44:15",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "12052:8:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "12052:8:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shift_right_1_unsigned",
                                        "nativeSrc": "12029:22:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "12029:22:15"
                                      },
                                      "nativeSrc": "12029:32:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12029:32:15"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "12017:8:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "12017:8:15"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "11370:8:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "11370:8:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11380:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "11380:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "11367:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "11367:2:15"
                                },
                                "nativeSrc": "11367:15:15",
                                "nodeType": "YulFunctionCall",
                                "src": "11367:15:15"
                              },
                              "nativeSrc": "11359:712:15",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "11383:2:15",
                                "nodeType": "YulBlock",
                                "src": "11383:2:15",
                                "statements": []
                              },
                              "pre": {
                                "nativeSrc": "11363:3:15",
                                "nodeType": "YulBlock",
                                "src": "11363:3:15",
                                "statements": []
                              },
                              "src": "11359:712:15"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nativeSrc": "11229:848:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_power",
                            "nativeSrc": "11257:6:15",
                            "nodeType": "YulTypedName",
                            "src": "11257:6:15",
                            "type": ""
                          },
                          {
                            "name": "_base",
                            "nativeSrc": "11265:5:15",
                            "nodeType": "YulTypedName",
                            "src": "11265:5:15",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "11272:8:15",
                            "nodeType": "YulTypedName",
                            "src": "11272:8:15",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nativeSrc": "11282:3:15",
                            "nodeType": "YulTypedName",
                            "src": "11282:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "11290:5:15",
                            "nodeType": "YulTypedName",
                            "src": "11290:5:15",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nativeSrc": "11297:4:15",
                            "nodeType": "YulTypedName",
                            "src": "11297:4:15",
                            "type": ""
                          }
                        ],
                        "src": "11229:848:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "12143:1013:15",
                          "nodeType": "YulBlock",
                          "src": "12143:1013:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "12338:20:15",
                                "nodeType": "YulBlock",
                                "src": "12338:20:15",
                                "statements": [
                                  {
                                    "nativeSrc": "12340:10:15",
                                    "nodeType": "YulAssignment",
                                    "src": "12340:10:15",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "12349:1:15",
                                      "nodeType": "YulLiteral",
                                      "src": "12349:1:15",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "12340:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "12340:5:15"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "12351:5:15",
                                    "nodeType": "YulLeave",
                                    "src": "12351:5:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "12328:8:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "12328:8:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "12321:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "12321:6:15"
                                },
                                "nativeSrc": "12321:16:15",
                                "nodeType": "YulFunctionCall",
                                "src": "12321:16:15"
                              },
                              "nativeSrc": "12318:40:15",
                              "nodeType": "YulIf",
                              "src": "12318:40:15"
                            },
                            {
                              "body": {
                                "nativeSrc": "12383:20:15",
                                "nodeType": "YulBlock",
                                "src": "12383:20:15",
                                "statements": [
                                  {
                                    "nativeSrc": "12385:10:15",
                                    "nodeType": "YulAssignment",
                                    "src": "12385:10:15",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "12394:1:15",
                                      "nodeType": "YulLiteral",
                                      "src": "12394:1:15",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "12385:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "12385:5:15"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "12396:5:15",
                                    "nodeType": "YulLeave",
                                    "src": "12396:5:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "12377:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "12377:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "12370:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "12370:6:15"
                                },
                                "nativeSrc": "12370:12:15",
                                "nodeType": "YulFunctionCall",
                                "src": "12370:12:15"
                              },
                              "nativeSrc": "12367:36:15",
                              "nodeType": "YulIf",
                              "src": "12367:36:15"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "12513:20:15",
                                    "nodeType": "YulBlock",
                                    "src": "12513:20:15",
                                    "statements": [
                                      {
                                        "nativeSrc": "12515:10:15",
                                        "nodeType": "YulAssignment",
                                        "src": "12515:10:15",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "12524:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "12524:1:15",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "12515:5:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "12515:5:15"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "12526:5:15",
                                        "nodeType": "YulLeave",
                                        "src": "12526:5:15"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "12506:27:15",
                                  "nodeType": "YulCase",
                                  "src": "12506:27:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "12511:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "12511:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "12557:176:15",
                                    "nodeType": "YulBlock",
                                    "src": "12557:176:15",
                                    "statements": [
                                      {
                                        "body": {
                                          "nativeSrc": "12592:22:15",
                                          "nodeType": "YulBlock",
                                          "src": "12592:22:15",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nativeSrc": "12594:16:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12594:16:15"
                                                },
                                                "nativeSrc": "12594:18:15",
                                                "nodeType": "YulFunctionCall",
                                                "src": "12594:18:15"
                                              },
                                              "nativeSrc": "12594:18:15",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12594:18:15"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "12577:8:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "12577:8:15"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "12587:3:15",
                                              "nodeType": "YulLiteral",
                                              "src": "12587:3:15",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nativeSrc": "12574:2:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "12574:2:15"
                                          },
                                          "nativeSrc": "12574:17:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "12574:17:15"
                                        },
                                        "nativeSrc": "12571:43:15",
                                        "nodeType": "YulIf",
                                        "src": "12571:43:15"
                                      },
                                      {
                                        "nativeSrc": "12627:25:15",
                                        "nodeType": "YulAssignment",
                                        "src": "12627:25:15",
                                        "value": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "12640:1:15",
                                              "nodeType": "YulLiteral",
                                              "src": "12640:1:15",
                                              "type": "",
                                              "value": "2"
                                            },
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "12643:8:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "12643:8:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "exp",
                                            "nativeSrc": "12636:3:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "12636:3:15"
                                          },
                                          "nativeSrc": "12636:16:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "12636:16:15"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "12627:5:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "12627:5:15"
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "12683:22:15",
                                          "nodeType": "YulBlock",
                                          "src": "12683:22:15",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nativeSrc": "12685:16:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12685:16:15"
                                                },
                                                "nativeSrc": "12685:18:15",
                                                "nodeType": "YulFunctionCall",
                                                "src": "12685:18:15"
                                              },
                                              "nativeSrc": "12685:18:15",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12685:18:15"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "power",
                                              "nativeSrc": "12671:5:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "12671:5:15"
                                            },
                                            {
                                              "name": "max",
                                              "nativeSrc": "12678:3:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "12678:3:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nativeSrc": "12668:2:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "12668:2:15"
                                          },
                                          "nativeSrc": "12668:14:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "12668:14:15"
                                        },
                                        "nativeSrc": "12665:40:15",
                                        "nodeType": "YulIf",
                                        "src": "12665:40:15"
                                      },
                                      {
                                        "nativeSrc": "12718:5:15",
                                        "nodeType": "YulLeave",
                                        "src": "12718:5:15"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "12542:191:15",
                                  "nodeType": "YulCase",
                                  "src": "12542:191:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "12547:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "12547:1:15",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nativeSrc": "12463:4:15",
                                "nodeType": "YulIdentifier",
                                "src": "12463:4:15"
                              },
                              "nativeSrc": "12456:277:15",
                              "nodeType": "YulSwitch",
                              "src": "12456:277:15"
                            },
                            {
                              "body": {
                                "nativeSrc": "12865:123:15",
                                "nodeType": "YulBlock",
                                "src": "12865:123:15",
                                "statements": [
                                  {
                                    "nativeSrc": "12879:28:15",
                                    "nodeType": "YulAssignment",
                                    "src": "12879:28:15",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "12892:4:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "12892:4:15"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "12898:8:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "12898:8:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nativeSrc": "12888:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "12888:3:15"
                                      },
                                      "nativeSrc": "12888:19:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12888:19:15"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "12879:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "12879:5:15"
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "12938:22:15",
                                      "nodeType": "YulBlock",
                                      "src": "12938:22:15",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nativeSrc": "12940:16:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "12940:16:15"
                                            },
                                            "nativeSrc": "12940:18:15",
                                            "nodeType": "YulFunctionCall",
                                            "src": "12940:18:15"
                                          },
                                          "nativeSrc": "12940:18:15",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "12940:18:15"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "power",
                                          "nativeSrc": "12926:5:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "12926:5:15"
                                        },
                                        {
                                          "name": "max",
                                          "nativeSrc": "12933:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "12933:3:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nativeSrc": "12923:2:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "12923:2:15"
                                      },
                                      "nativeSrc": "12923:14:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "12923:14:15"
                                    },
                                    "nativeSrc": "12920:40:15",
                                    "nodeType": "YulIf",
                                    "src": "12920:40:15"
                                  },
                                  {
                                    "nativeSrc": "12973:5:15",
                                    "nodeType": "YulLeave",
                                    "src": "12973:5:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "12768:4:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "12768:4:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "12774:2:15",
                                            "nodeType": "YulLiteral",
                                            "src": "12774:2:15",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "12765:2:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "12765:2:15"
                                        },
                                        "nativeSrc": "12765:12:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "12765:12:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "12782:8:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "12782:8:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "12792:2:15",
                                            "nodeType": "YulLiteral",
                                            "src": "12792:2:15",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "12779:2:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "12779:2:15"
                                        },
                                        "nativeSrc": "12779:16:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "12779:16:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "12761:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "12761:3:15"
                                    },
                                    "nativeSrc": "12761:35:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12761:35:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "12817:4:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "12817:4:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "12823:3:15",
                                            "nodeType": "YulLiteral",
                                            "src": "12823:3:15",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "12814:2:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "12814:2:15"
                                        },
                                        "nativeSrc": "12814:13:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "12814:13:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "12832:8:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "12832:8:15"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "12842:2:15",
                                            "nodeType": "YulLiteral",
                                            "src": "12842:2:15",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "12829:2:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "12829:2:15"
                                        },
                                        "nativeSrc": "12829:16:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "12829:16:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "12810:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "12810:3:15"
                                    },
                                    "nativeSrc": "12810:36:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12810:36:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "12745:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "12745:2:15"
                                },
                                "nativeSrc": "12745:111:15",
                                "nodeType": "YulFunctionCall",
                                "src": "12745:111:15"
                              },
                              "nativeSrc": "12742:246:15",
                              "nodeType": "YulIf",
                              "src": "12742:246:15"
                            },
                            {
                              "nativeSrc": "12998:57:15",
                              "nodeType": "YulAssignment",
                              "src": "12998:57:15",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13032:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "13032:1:15",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "base",
                                    "nativeSrc": "13035:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13035:4:15"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "13041:8:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13041:8:15"
                                  },
                                  {
                                    "name": "max",
                                    "nativeSrc": "13051:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13051:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nativeSrc": "13013:18:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13013:18:15"
                                },
                                "nativeSrc": "13013:42:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13013:42:15"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "12998:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "12998:5:15"
                                },
                                {
                                  "name": "base",
                                  "nativeSrc": "13005:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13005:4:15"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "13094:22:15",
                                "nodeType": "YulBlock",
                                "src": "13094:22:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "13096:16:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "13096:16:15"
                                      },
                                      "nativeSrc": "13096:18:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13096:18:15"
                                    },
                                    "nativeSrc": "13096:18:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13096:18:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nativeSrc": "13071:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13071:5:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "max",
                                        "nativeSrc": "13082:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "13082:3:15"
                                      },
                                      {
                                        "name": "base",
                                        "nativeSrc": "13087:4:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "13087:4:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nativeSrc": "13078:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "13078:3:15"
                                    },
                                    "nativeSrc": "13078:14:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "13078:14:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "13068:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13068:2:15"
                                },
                                "nativeSrc": "13068:25:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13068:25:15"
                              },
                              "nativeSrc": "13065:51:15",
                              "nodeType": "YulIf",
                              "src": "13065:51:15"
                            },
                            {
                              "nativeSrc": "13125:25:15",
                              "nodeType": "YulAssignment",
                              "src": "13125:25:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nativeSrc": "13138:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13138:5:15"
                                  },
                                  {
                                    "name": "base",
                                    "nativeSrc": "13145:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13145:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "13134:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13134:3:15"
                                },
                                "nativeSrc": "13134:16:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13134:16:15"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "13125:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13125:5:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nativeSrc": "12083:1073:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "12113:4:15",
                            "nodeType": "YulTypedName",
                            "src": "12113:4:15",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "12119:8:15",
                            "nodeType": "YulTypedName",
                            "src": "12119:8:15",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nativeSrc": "12129:3:15",
                            "nodeType": "YulTypedName",
                            "src": "12129:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "12137:5:15",
                            "nodeType": "YulTypedName",
                            "src": "12137:5:15",
                            "type": ""
                          }
                        ],
                        "src": "12083:1073:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "13226:217:15",
                          "nodeType": "YulBlock",
                          "src": "13226:217:15",
                          "statements": [
                            {
                              "nativeSrc": "13236:31:15",
                              "nodeType": "YulAssignment",
                              "src": "13236:31:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "13262:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13262:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nativeSrc": "13244:17:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13244:17:15"
                                },
                                "nativeSrc": "13244:23:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13244:23:15"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nativeSrc": "13236:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13236:4:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "13276:37:15",
                              "nodeType": "YulAssignment",
                              "src": "13276:37:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "13304:8:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13304:8:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint8",
                                  "nativeSrc": "13288:15:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13288:15:15"
                                },
                                "nativeSrc": "13288:25:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13288:25:15"
                              },
                              "variableNames": [
                                {
                                  "name": "exponent",
                                  "nativeSrc": "13276:8:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13276:8:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "13323:113:15",
                              "nodeType": "YulAssignment",
                              "src": "13323:113:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "13353:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13353:4:15"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "13359:8:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13359:8:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "13369:66:15",
                                    "nodeType": "YulLiteral",
                                    "src": "13369:66:15",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nativeSrc": "13332:20:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13332:20:15"
                                },
                                "nativeSrc": "13332:104:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13332:104:15"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "13323:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13323:5:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint8",
                        "nativeSrc": "13162:281:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "13201:4:15",
                            "nodeType": "YulTypedName",
                            "src": "13201:4:15",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "13207:8:15",
                            "nodeType": "YulTypedName",
                            "src": "13207:8:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "13220:5:15",
                            "nodeType": "YulTypedName",
                            "src": "13220:5:15",
                            "type": ""
                          }
                        ],
                        "src": "13162:281:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "13497:362:15",
                          "nodeType": "YulBlock",
                          "src": "13497:362:15",
                          "statements": [
                            {
                              "nativeSrc": "13507:25:15",
                              "nodeType": "YulAssignment",
                              "src": "13507:25:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "13530:1:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13530:1:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nativeSrc": "13512:17:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13512:17:15"
                                },
                                "nativeSrc": "13512:20:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13512:20:15"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nativeSrc": "13507:1:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13507:1:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "13541:25:15",
                              "nodeType": "YulAssignment",
                              "src": "13541:25:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "13564:1:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13564:1:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nativeSrc": "13546:17:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13546:17:15"
                                },
                                "nativeSrc": "13546:20:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13546:20:15"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nativeSrc": "13541:1:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13541:1:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "13575:28:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "13575:28:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "13598:1:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13598:1:15"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "13601:1:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13601:1:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "13594:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13594:3:15"
                                },
                                "nativeSrc": "13594:9:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13594:9:15"
                              },
                              "variables": [
                                {
                                  "name": "product_raw",
                                  "nativeSrc": "13579:11:15",
                                  "nodeType": "YulTypedName",
                                  "src": "13579:11:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "13612:41:15",
                              "nodeType": "YulAssignment",
                              "src": "13612:41:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "product_raw",
                                    "nativeSrc": "13641:11:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "13641:11:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nativeSrc": "13623:17:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13623:17:15"
                                },
                                "nativeSrc": "13623:30:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13623:30:15"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "13612:7:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13612:7:15"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "13830:22:15",
                                "nodeType": "YulBlock",
                                "src": "13830:22:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "13832:16:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "13832:16:15"
                                      },
                                      "nativeSrc": "13832:18:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "13832:18:15"
                                    },
                                    "nativeSrc": "13832:18:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13832:18:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "13763:1:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "13763:1:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "13756:6:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "13756:6:15"
                                        },
                                        "nativeSrc": "13756:9:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "13756:9:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "13786:1:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "13786:1:15"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "13793:7:15",
                                                "nodeType": "YulIdentifier",
                                                "src": "13793:7:15"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "13802:1:15",
                                                "nodeType": "YulIdentifier",
                                                "src": "13802:1:15"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "13789:3:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "13789:3:15"
                                            },
                                            "nativeSrc": "13789:15:15",
                                            "nodeType": "YulFunctionCall",
                                            "src": "13789:15:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "13783:2:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "13783:2:15"
                                        },
                                        "nativeSrc": "13783:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "13783:22:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "13736:2:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "13736:2:15"
                                    },
                                    "nativeSrc": "13736:83:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "13736:83:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "13716:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13716:6:15"
                                },
                                "nativeSrc": "13716:113:15",
                                "nodeType": "YulFunctionCall",
                                "src": "13716:113:15"
                              },
                              "nativeSrc": "13713:139:15",
                              "nodeType": "YulIf",
                              "src": "13713:139:15"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "13449:410:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "13480:1:15",
                            "nodeType": "YulTypedName",
                            "src": "13480:1:15",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "13483:1:15",
                            "nodeType": "YulTypedName",
                            "src": "13483:1:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "13489:7:15",
                            "nodeType": "YulTypedName",
                            "src": "13489:7:15",
                            "type": ""
                          }
                        ],
                        "src": "13449:410:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "13918:32:15",
                          "nodeType": "YulBlock",
                          "src": "13918:32:15",
                          "statements": [
                            {
                              "nativeSrc": "13928:16:15",
                              "nodeType": "YulAssignment",
                              "src": "13928:16:15",
                              "value": {
                                "name": "value",
                                "nativeSrc": "13939:5:15",
                                "nodeType": "YulIdentifier",
                                "src": "13939:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nativeSrc": "13928:7:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "13928:7:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_rational_1_by_1",
                        "nativeSrc": "13865:85:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "13900:5:15",
                            "nodeType": "YulTypedName",
                            "src": "13900:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nativeSrc": "13910:7:15",
                            "nodeType": "YulTypedName",
                            "src": "13910:7:15",
                            "type": ""
                          }
                        ],
                        "src": "13865:85:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "14000:57:15",
                          "nodeType": "YulBlock",
                          "src": "14000:57:15",
                          "statements": [
                            {
                              "nativeSrc": "14010:41:15",
                              "nodeType": "YulAssignment",
                              "src": "14010:41:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "14025:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "14025:5:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "14032:18:15",
                                    "nodeType": "YulLiteral",
                                    "src": "14032:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "14021:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14021:3:15"
                                },
                                "nativeSrc": "14021:30:15",
                                "nodeType": "YulFunctionCall",
                                "src": "14021:30:15"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nativeSrc": "14010:7:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14010:7:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint64",
                        "nativeSrc": "13956:101:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "13982:5:15",
                            "nodeType": "YulTypedName",
                            "src": "13982:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nativeSrc": "13992:7:15",
                            "nodeType": "YulTypedName",
                            "src": "13992:7:15",
                            "type": ""
                          }
                        ],
                        "src": "13956:101:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "14095:28:15",
                          "nodeType": "YulBlock",
                          "src": "14095:28:15",
                          "statements": [
                            {
                              "nativeSrc": "14105:12:15",
                              "nodeType": "YulAssignment",
                              "src": "14105:12:15",
                              "value": {
                                "name": "value",
                                "nativeSrc": "14112:5:15",
                                "nodeType": "YulIdentifier",
                                "src": "14112:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nativeSrc": "14105:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14105:3:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "identity",
                        "nativeSrc": "14063:60:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "14081:5:15",
                            "nodeType": "YulTypedName",
                            "src": "14081:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nativeSrc": "14091:3:15",
                            "nodeType": "YulTypedName",
                            "src": "14091:3:15",
                            "type": ""
                          }
                        ],
                        "src": "14063:60:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "14196:89:15",
                          "nodeType": "YulBlock",
                          "src": "14196:89:15",
                          "statements": [
                            {
                              "nativeSrc": "14206:73:15",
                              "nodeType": "YulAssignment",
                              "src": "14206:73:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "14271:5:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "14271:5:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_rational_1_by_1",
                                          "nativeSrc": "14245:25:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "14245:25:15"
                                        },
                                        "nativeSrc": "14245:32:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "14245:32:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "identity",
                                      "nativeSrc": "14236:8:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "14236:8:15"
                                    },
                                    "nativeSrc": "14236:42:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14236:42:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint64",
                                  "nativeSrc": "14219:16:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14219:16:15"
                                },
                                "nativeSrc": "14219:60:15",
                                "nodeType": "YulFunctionCall",
                                "src": "14219:60:15"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nativeSrc": "14206:9:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14206:9:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_rational_1_by_1_to_t_uint64",
                        "nativeSrc": "14129:156:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "14176:5:15",
                            "nodeType": "YulTypedName",
                            "src": "14176:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nativeSrc": "14186:9:15",
                            "nodeType": "YulTypedName",
                            "src": "14186:9:15",
                            "type": ""
                          }
                        ],
                        "src": "14129:156:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "14363:73:15",
                          "nodeType": "YulBlock",
                          "src": "14363:73:15",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "14380:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "14380:3:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "14423:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "14423:5:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_rational_1_by_1_to_t_uint64",
                                      "nativeSrc": "14385:37:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "14385:37:15"
                                    },
                                    "nativeSrc": "14385:44:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14385:44:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "14373:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14373:6:15"
                                },
                                "nativeSrc": "14373:57:15",
                                "nodeType": "YulFunctionCall",
                                "src": "14373:57:15"
                              },
                              "nativeSrc": "14373:57:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "14373:57:15"
                            }
                          ]
                        },
                        "name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
                        "nativeSrc": "14291:145:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "14351:5:15",
                            "nodeType": "YulTypedName",
                            "src": "14351:5:15",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nativeSrc": "14358:3:15",
                            "nodeType": "YulTypedName",
                            "src": "14358:3:15",
                            "type": ""
                          }
                        ],
                        "src": "14291:145:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "14547:131:15",
                          "nodeType": "YulBlock",
                          "src": "14547:131:15",
                          "statements": [
                            {
                              "nativeSrc": "14557:26:15",
                              "nodeType": "YulAssignment",
                              "src": "14557:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "14569:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "14569:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "14580:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "14580:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "14565:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14565:3:15"
                                },
                                "nativeSrc": "14565:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "14565:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "14557:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14557:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "14644:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "14644:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "14657:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "14657:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "14668:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "14668:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "14653:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "14653:3:15"
                                    },
                                    "nativeSrc": "14653:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14653:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
                                  "nativeSrc": "14593:50:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14593:50:15"
                                },
                                "nativeSrc": "14593:78:15",
                                "nodeType": "YulFunctionCall",
                                "src": "14593:78:15"
                              },
                              "nativeSrc": "14593:78:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "14593:78:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
                        "nativeSrc": "14442:236:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "14519:9:15",
                            "nodeType": "YulTypedName",
                            "src": "14519:9:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "14531:6:15",
                            "nodeType": "YulTypedName",
                            "src": "14531:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "14542:4:15",
                            "nodeType": "YulTypedName",
                            "src": "14542:4:15",
                            "type": ""
                          }
                        ],
                        "src": "14442:236:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "14727:79:15",
                          "nodeType": "YulBlock",
                          "src": "14727:79:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "14784:16:15",
                                "nodeType": "YulBlock",
                                "src": "14784:16:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "14793:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "14793:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "14796:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "14796:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "14786:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "14786:6:15"
                                      },
                                      "nativeSrc": "14786:12:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "14786:12:15"
                                    },
                                    "nativeSrc": "14786:12:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14786:12:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "14750:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "14750:5:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "14775:5:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "14775:5:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bytes32",
                                          "nativeSrc": "14757:17:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "14757:17:15"
                                        },
                                        "nativeSrc": "14757:24:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "14757:24:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "14747:2:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "14747:2:15"
                                    },
                                    "nativeSrc": "14747:35:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "14747:35:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "14740:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14740:6:15"
                                },
                                "nativeSrc": "14740:43:15",
                                "nodeType": "YulFunctionCall",
                                "src": "14740:43:15"
                              },
                              "nativeSrc": "14737:63:15",
                              "nodeType": "YulIf",
                              "src": "14737:63:15"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bytes32",
                        "nativeSrc": "14684:122:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "14720:5:15",
                            "nodeType": "YulTypedName",
                            "src": "14720:5:15",
                            "type": ""
                          }
                        ],
                        "src": "14684:122:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "14875:80:15",
                          "nodeType": "YulBlock",
                          "src": "14875:80:15",
                          "statements": [
                            {
                              "nativeSrc": "14885:22:15",
                              "nodeType": "YulAssignment",
                              "src": "14885:22:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "14900:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "14900:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "14894:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14894:5:15"
                                },
                                "nativeSrc": "14894:13:15",
                                "nodeType": "YulFunctionCall",
                                "src": "14894:13:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "14885:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14885:5:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "14943:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "14943:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bytes32",
                                  "nativeSrc": "14916:26:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "14916:26:15"
                                },
                                "nativeSrc": "14916:33:15",
                                "nodeType": "YulFunctionCall",
                                "src": "14916:33:15"
                              },
                              "nativeSrc": "14916:33:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "14916:33:15"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes32_fromMemory",
                        "nativeSrc": "14812:143:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "14853:6:15",
                            "nodeType": "YulTypedName",
                            "src": "14853:6:15",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "14861:3:15",
                            "nodeType": "YulTypedName",
                            "src": "14861:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "14869:5:15",
                            "nodeType": "YulTypedName",
                            "src": "14869:5:15",
                            "type": ""
                          }
                        ],
                        "src": "14812:143:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "15038:274:15",
                          "nodeType": "YulBlock",
                          "src": "15038:274:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "15084:83:15",
                                "nodeType": "YulBlock",
                                "src": "15084:83:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nativeSrc": "15086:77:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "15086:77:15"
                                      },
                                      "nativeSrc": "15086:79:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "15086:79:15"
                                    },
                                    "nativeSrc": "15086:79:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15086:79:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "15059:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "15059:7:15"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "15068:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "15068:9:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "15055:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "15055:3:15"
                                    },
                                    "nativeSrc": "15055:23:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "15055:23:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "15080:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "15080:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "15051:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15051:3:15"
                                },
                                "nativeSrc": "15051:32:15",
                                "nodeType": "YulFunctionCall",
                                "src": "15051:32:15"
                              },
                              "nativeSrc": "15048:119:15",
                              "nodeType": "YulIf",
                              "src": "15048:119:15"
                            },
                            {
                              "nativeSrc": "15177:128:15",
                              "nodeType": "YulBlock",
                              "src": "15177:128:15",
                              "statements": [
                                {
                                  "nativeSrc": "15192:15:15",
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "15192:15:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "15206:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "15206:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nativeSrc": "15196:6:15",
                                      "nodeType": "YulTypedName",
                                      "src": "15196:6:15",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nativeSrc": "15221:74:15",
                                  "nodeType": "YulAssignment",
                                  "src": "15221:74:15",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "15267:9:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "15267:9:15"
                                          },
                                          {
                                            "name": "offset",
                                            "nativeSrc": "15278:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "15278:6:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "15263:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "15263:3:15"
                                        },
                                        "nativeSrc": "15263:22:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "15263:22:15"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "15287:7:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "15287:7:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes32_fromMemory",
                                      "nativeSrc": "15231:31:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "15231:31:15"
                                    },
                                    "nativeSrc": "15231:64:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "15231:64:15"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nativeSrc": "15221:6:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "15221:6:15"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32_fromMemory",
                        "nativeSrc": "14961:351:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "15008:9:15",
                            "nodeType": "YulTypedName",
                            "src": "15008:9:15",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "15019:7:15",
                            "nodeType": "YulTypedName",
                            "src": "15019:7:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "15031:6:15",
                            "nodeType": "YulTypedName",
                            "src": "15031:6:15",
                            "type": ""
                          }
                        ],
                        "src": "14961:351:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "15472:288:15",
                          "nodeType": "YulBlock",
                          "src": "15472:288:15",
                          "statements": [
                            {
                              "nativeSrc": "15482:26:15",
                              "nodeType": "YulAssignment",
                              "src": "15482:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "15494:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "15494:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "15505:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "15505:2:15",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "15490:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15490:3:15"
                                },
                                "nativeSrc": "15490:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "15490:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "15482:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15482:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "15562:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "15562:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "15575:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "15575:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "15586:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "15586:1:15",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "15571:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "15571:3:15"
                                    },
                                    "nativeSrc": "15571:17:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "15571:17:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nativeSrc": "15518:43:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15518:43:15"
                                },
                                "nativeSrc": "15518:71:15",
                                "nodeType": "YulFunctionCall",
                                "src": "15518:71:15"
                              },
                              "nativeSrc": "15518:71:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "15518:71:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nativeSrc": "15643:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "15643:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "15656:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "15656:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "15667:2:15",
                                        "nodeType": "YulLiteral",
                                        "src": "15667:2:15",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "15652:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "15652:3:15"
                                    },
                                    "nativeSrc": "15652:18:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "15652:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nativeSrc": "15599:43:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15599:43:15"
                                },
                                "nativeSrc": "15599:72:15",
                                "nodeType": "YulFunctionCall",
                                "src": "15599:72:15"
                              },
                              "nativeSrc": "15599:72:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "15599:72:15"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nativeSrc": "15725:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "15725:6:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "15738:9:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "15738:9:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "15749:2:15",
                                        "nodeType": "YulLiteral",
                                        "src": "15749:2:15",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "15734:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "15734:3:15"
                                    },
                                    "nativeSrc": "15734:18:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "15734:18:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nativeSrc": "15681:43:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15681:43:15"
                                },
                                "nativeSrc": "15681:72:15",
                                "nodeType": "YulFunctionCall",
                                "src": "15681:72:15"
                              },
                              "nativeSrc": "15681:72:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "15681:72:15"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "15318:442:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "15428:9:15",
                            "nodeType": "YulTypedName",
                            "src": "15428:9:15",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "15440:6:15",
                            "nodeType": "YulTypedName",
                            "src": "15440:6:15",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "15448:6:15",
                            "nodeType": "YulTypedName",
                            "src": "15448:6:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "15456:6:15",
                            "nodeType": "YulTypedName",
                            "src": "15456:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "15467:4:15",
                            "nodeType": "YulTypedName",
                            "src": "15467:4:15",
                            "type": ""
                          }
                        ],
                        "src": "15318:442:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "15810:147:15",
                          "nodeType": "YulBlock",
                          "src": "15810:147:15",
                          "statements": [
                            {
                              "nativeSrc": "15820:25:15",
                              "nodeType": "YulAssignment",
                              "src": "15820:25:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "15843:1:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "15843:1:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nativeSrc": "15825:17:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15825:17:15"
                                },
                                "nativeSrc": "15825:20:15",
                                "nodeType": "YulFunctionCall",
                                "src": "15825:20:15"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nativeSrc": "15820:1:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15820:1:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "15854:25:15",
                              "nodeType": "YulAssignment",
                              "src": "15854:25:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "15877:1:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "15877:1:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nativeSrc": "15859:17:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15859:17:15"
                                },
                                "nativeSrc": "15859:20:15",
                                "nodeType": "YulFunctionCall",
                                "src": "15859:20:15"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nativeSrc": "15854:1:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15854:1:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "15888:16:15",
                              "nodeType": "YulAssignment",
                              "src": "15888:16:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "15899:1:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "15899:1:15"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "15902:1:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "15902:1:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "15895:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15895:3:15"
                                },
                                "nativeSrc": "15895:9:15",
                                "nodeType": "YulFunctionCall",
                                "src": "15895:9:15"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "15888:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15888:3:15"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "15928:22:15",
                                "nodeType": "YulBlock",
                                "src": "15928:22:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "15930:16:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "15930:16:15"
                                      },
                                      "nativeSrc": "15930:18:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "15930:18:15"
                                    },
                                    "nativeSrc": "15930:18:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15930:18:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "15920:1:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "15920:1:15"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "15923:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "15923:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "15917:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "15917:2:15"
                                },
                                "nativeSrc": "15917:10:15",
                                "nodeType": "YulFunctionCall",
                                "src": "15917:10:15"
                              },
                              "nativeSrc": "15914:36:15",
                              "nodeType": "YulIf",
                              "src": "15914:36:15"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "15766:191:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "15797:1:15",
                            "nodeType": "YulTypedName",
                            "src": "15797:1:15",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "15800:1:15",
                            "nodeType": "YulTypedName",
                            "src": "15800:1:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "15806:3:15",
                            "nodeType": "YulTypedName",
                            "src": "15806:3:15",
                            "type": ""
                          }
                        ],
                        "src": "15766:191:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "16017:87:15",
                          "nodeType": "YulBlock",
                          "src": "16017:87:15",
                          "statements": [
                            {
                              "nativeSrc": "16027:11:15",
                              "nodeType": "YulAssignment",
                              "src": "16027:11:15",
                              "value": {
                                "name": "ptr",
                                "nativeSrc": "16035:3:15",
                                "nodeType": "YulIdentifier",
                                "src": "16035:3:15"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "16027:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16027:4:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16055:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "16055:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nativeSrc": "16058:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "16058:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "16048:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16048:6:15"
                                },
                                "nativeSrc": "16048:14:15",
                                "nodeType": "YulFunctionCall",
                                "src": "16048:14:15"
                              },
                              "nativeSrc": "16048:14:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "16048:14:15"
                            },
                            {
                              "nativeSrc": "16071:26:15",
                              "nodeType": "YulAssignment",
                              "src": "16071:26:15",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16089:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "16089:1:15",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16092:4:15",
                                    "nodeType": "YulLiteral",
                                    "src": "16092:4:15",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nativeSrc": "16079:9:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16079:9:15"
                                },
                                "nativeSrc": "16079:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "16079:18:15"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "16071:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16071:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_string_storage",
                        "nativeSrc": "15963:141:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nativeSrc": "16004:3:15",
                            "nodeType": "YulTypedName",
                            "src": "16004:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nativeSrc": "16012:4:15",
                            "nodeType": "YulTypedName",
                            "src": "16012:4:15",
                            "type": ""
                          }
                        ],
                        "src": "15963:141:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "16154:49:15",
                          "nodeType": "YulBlock",
                          "src": "16154:49:15",
                          "statements": [
                            {
                              "nativeSrc": "16164:33:15",
                              "nodeType": "YulAssignment",
                              "src": "16164:33:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "16182:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "16182:5:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "16189:2:15",
                                        "nodeType": "YulLiteral",
                                        "src": "16189:2:15",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "16178:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "16178:3:15"
                                    },
                                    "nativeSrc": "16178:14:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16178:14:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16194:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "16194:2:15",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nativeSrc": "16174:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16174:3:15"
                                },
                                "nativeSrc": "16174:23:15",
                                "nodeType": "YulFunctionCall",
                                "src": "16174:23:15"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nativeSrc": "16164:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16164:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "divide_by_32_ceil",
                        "nativeSrc": "16110:93:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "16137:5:15",
                            "nodeType": "YulTypedName",
                            "src": "16137:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nativeSrc": "16147:6:15",
                            "nodeType": "YulTypedName",
                            "src": "16147:6:15",
                            "type": ""
                          }
                        ],
                        "src": "16110:93:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "16262:54:15",
                          "nodeType": "YulBlock",
                          "src": "16262:54:15",
                          "statements": [
                            {
                              "nativeSrc": "16272:37:15",
                              "nodeType": "YulAssignment",
                              "src": "16272:37:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "bits",
                                    "nativeSrc": "16297:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "16297:4:15"
                                  },
                                  {
                                    "name": "value",
                                    "nativeSrc": "16303:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "16303:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nativeSrc": "16293:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16293:3:15"
                                },
                                "nativeSrc": "16293:16:15",
                                "nodeType": "YulFunctionCall",
                                "src": "16293:16:15"
                              },
                              "variableNames": [
                                {
                                  "name": "newValue",
                                  "nativeSrc": "16272:8:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16272:8:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "shift_left_dynamic",
                        "nativeSrc": "16209:107:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "bits",
                            "nativeSrc": "16237:4:15",
                            "nodeType": "YulTypedName",
                            "src": "16237:4:15",
                            "type": ""
                          },
                          {
                            "name": "value",
                            "nativeSrc": "16243:5:15",
                            "nodeType": "YulTypedName",
                            "src": "16243:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "newValue",
                            "nativeSrc": "16253:8:15",
                            "nodeType": "YulTypedName",
                            "src": "16253:8:15",
                            "type": ""
                          }
                        ],
                        "src": "16209:107:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "16398:317:15",
                          "nodeType": "YulBlock",
                          "src": "16398:317:15",
                          "statements": [
                            {
                              "nativeSrc": "16408:35:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "16408:35:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "shiftBytes",
                                    "nativeSrc": "16429:10:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "16429:10:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16441:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "16441:1:15",
                                    "type": "",
                                    "value": "8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "16425:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16425:3:15"
                                },
                                "nativeSrc": "16425:18:15",
                                "nodeType": "YulFunctionCall",
                                "src": "16425:18:15"
                              },
                              "variables": [
                                {
                                  "name": "shiftBits",
                                  "nativeSrc": "16412:9:15",
                                  "nodeType": "YulTypedName",
                                  "src": "16412:9:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "16452:109:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "16452:109:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "shiftBits",
                                    "nativeSrc": "16483:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "16483:9:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "16494:66:15",
                                    "nodeType": "YulLiteral",
                                    "src": "16494:66:15",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "shift_left_dynamic",
                                  "nativeSrc": "16464:18:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16464:18:15"
                                },
                                "nativeSrc": "16464:97:15",
                                "nodeType": "YulFunctionCall",
                                "src": "16464:97:15"
                              },
                              "variables": [
                                {
                                  "name": "mask",
                                  "nativeSrc": "16456:4:15",
                                  "nodeType": "YulTypedName",
                                  "src": "16456:4:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "16570:51:15",
                              "nodeType": "YulAssignment",
                              "src": "16570:51:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "shiftBits",
                                    "nativeSrc": "16601:9:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "16601:9:15"
                                  },
                                  {
                                    "name": "toInsert",
                                    "nativeSrc": "16612:8:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "16612:8:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "shift_left_dynamic",
                                  "nativeSrc": "16582:18:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16582:18:15"
                                },
                                "nativeSrc": "16582:39:15",
                                "nodeType": "YulFunctionCall",
                                "src": "16582:39:15"
                              },
                              "variableNames": [
                                {
                                  "name": "toInsert",
                                  "nativeSrc": "16570:8:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16570:8:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "16630:30:15",
                              "nodeType": "YulAssignment",
                              "src": "16630:30:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "16643:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "16643:5:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "mask",
                                        "nativeSrc": "16654:4:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "16654:4:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "16650:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "16650:3:15"
                                    },
                                    "nativeSrc": "16650:9:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16650:9:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "16639:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16639:3:15"
                                },
                                "nativeSrc": "16639:21:15",
                                "nodeType": "YulFunctionCall",
                                "src": "16639:21:15"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "16630:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16630:5:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "16669:40:15",
                              "nodeType": "YulAssignment",
                              "src": "16669:40:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "16682:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "16682:5:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "toInsert",
                                        "nativeSrc": "16693:8:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "16693:8:15"
                                      },
                                      {
                                        "name": "mask",
                                        "nativeSrc": "16703:4:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "16703:4:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "16689:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "16689:3:15"
                                    },
                                    "nativeSrc": "16689:19:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16689:19:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "16679:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16679:2:15"
                                },
                                "nativeSrc": "16679:30:15",
                                "nodeType": "YulFunctionCall",
                                "src": "16679:30:15"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nativeSrc": "16669:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16669:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "update_byte_slice_dynamic32",
                        "nativeSrc": "16322:393:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "16359:5:15",
                            "nodeType": "YulTypedName",
                            "src": "16359:5:15",
                            "type": ""
                          },
                          {
                            "name": "shiftBytes",
                            "nativeSrc": "16366:10:15",
                            "nodeType": "YulTypedName",
                            "src": "16366:10:15",
                            "type": ""
                          },
                          {
                            "name": "toInsert",
                            "nativeSrc": "16378:8:15",
                            "nodeType": "YulTypedName",
                            "src": "16378:8:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nativeSrc": "16391:6:15",
                            "nodeType": "YulTypedName",
                            "src": "16391:6:15",
                            "type": ""
                          }
                        ],
                        "src": "16322:393:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "16781:82:15",
                          "nodeType": "YulBlock",
                          "src": "16781:82:15",
                          "statements": [
                            {
                              "nativeSrc": "16791:66:15",
                              "nodeType": "YulAssignment",
                              "src": "16791:66:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "16849:5:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "16849:5:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nativeSrc": "16831:17:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "16831:17:15"
                                        },
                                        "nativeSrc": "16831:24:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "16831:24:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "identity",
                                      "nativeSrc": "16822:8:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "16822:8:15"
                                    },
                                    "nativeSrc": "16822:34:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "16822:34:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nativeSrc": "16804:17:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16804:17:15"
                                },
                                "nativeSrc": "16804:53:15",
                                "nodeType": "YulFunctionCall",
                                "src": "16804:53:15"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nativeSrc": "16791:9:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16791:9:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint256_to_t_uint256",
                        "nativeSrc": "16721:142:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "16761:5:15",
                            "nodeType": "YulTypedName",
                            "src": "16761:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nativeSrc": "16771:9:15",
                            "nodeType": "YulTypedName",
                            "src": "16771:9:15",
                            "type": ""
                          }
                        ],
                        "src": "16721:142:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "16916:28:15",
                          "nodeType": "YulBlock",
                          "src": "16916:28:15",
                          "statements": [
                            {
                              "nativeSrc": "16926:12:15",
                              "nodeType": "YulAssignment",
                              "src": "16926:12:15",
                              "value": {
                                "name": "value",
                                "nativeSrc": "16933:5:15",
                                "nodeType": "YulIdentifier",
                                "src": "16933:5:15"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nativeSrc": "16926:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "16926:3:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "prepare_store_t_uint256",
                        "nativeSrc": "16869:75:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "16902:5:15",
                            "nodeType": "YulTypedName",
                            "src": "16902:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nativeSrc": "16912:3:15",
                            "nodeType": "YulTypedName",
                            "src": "16912:3:15",
                            "type": ""
                          }
                        ],
                        "src": "16869:75:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "17026:193:15",
                          "nodeType": "YulBlock",
                          "src": "17026:193:15",
                          "statements": [
                            {
                              "nativeSrc": "17036:63:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "17036:63:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value_0",
                                    "nativeSrc": "17091:7:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "17091:7:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint256_to_t_uint256",
                                  "nativeSrc": "17060:30:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "17060:30:15"
                                },
                                "nativeSrc": "17060:39:15",
                                "nodeType": "YulFunctionCall",
                                "src": "17060:39:15"
                              },
                              "variables": [
                                {
                                  "name": "convertedValue_0",
                                  "nativeSrc": "17040:16:15",
                                  "nodeType": "YulTypedName",
                                  "src": "17040:16:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "17115:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "17115:4:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "17155:4:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "17155:4:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nativeSrc": "17149:5:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "17149:5:15"
                                        },
                                        "nativeSrc": "17149:11:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "17149:11:15"
                                      },
                                      {
                                        "name": "offset",
                                        "nativeSrc": "17162:6:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "17162:6:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "convertedValue_0",
                                            "nativeSrc": "17194:16:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "17194:16:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "prepare_store_t_uint256",
                                          "nativeSrc": "17170:23:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "17170:23:15"
                                        },
                                        "nativeSrc": "17170:41:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "17170:41:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "update_byte_slice_dynamic32",
                                      "nativeSrc": "17121:27:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "17121:27:15"
                                    },
                                    "nativeSrc": "17121:91:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "17121:91:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nativeSrc": "17108:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "17108:6:15"
                                },
                                "nativeSrc": "17108:105:15",
                                "nodeType": "YulFunctionCall",
                                "src": "17108:105:15"
                              },
                              "nativeSrc": "17108:105:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "17108:105:15"
                            }
                          ]
                        },
                        "name": "update_storage_value_t_uint256_to_t_uint256",
                        "nativeSrc": "16950:269:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "17003:4:15",
                            "nodeType": "YulTypedName",
                            "src": "17003:4:15",
                            "type": ""
                          },
                          {
                            "name": "offset",
                            "nativeSrc": "17009:6:15",
                            "nodeType": "YulTypedName",
                            "src": "17009:6:15",
                            "type": ""
                          },
                          {
                            "name": "value_0",
                            "nativeSrc": "17017:7:15",
                            "nodeType": "YulTypedName",
                            "src": "17017:7:15",
                            "type": ""
                          }
                        ],
                        "src": "16950:269:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "17274:24:15",
                          "nodeType": "YulBlock",
                          "src": "17274:24:15",
                          "statements": [
                            {
                              "nativeSrc": "17284:8:15",
                              "nodeType": "YulAssignment",
                              "src": "17284:8:15",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "17291:1:15",
                                "nodeType": "YulLiteral",
                                "src": "17291:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nativeSrc": "17284:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "17284:3:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "zero_value_for_split_t_uint256",
                        "nativeSrc": "17225:73:15",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nativeSrc": "17270:3:15",
                            "nodeType": "YulTypedName",
                            "src": "17270:3:15",
                            "type": ""
                          }
                        ],
                        "src": "17225:73:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "17357:136:15",
                          "nodeType": "YulBlock",
                          "src": "17357:136:15",
                          "statements": [
                            {
                              "nativeSrc": "17367:46:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "17367:46:15",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "zero_value_for_split_t_uint256",
                                  "nativeSrc": "17381:30:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "17381:30:15"
                                },
                                "nativeSrc": "17381:32:15",
                                "nodeType": "YulFunctionCall",
                                "src": "17381:32:15"
                              },
                              "variables": [
                                {
                                  "name": "zero_0",
                                  "nativeSrc": "17371:6:15",
                                  "nodeType": "YulTypedName",
                                  "src": "17371:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "17466:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "17466:4:15"
                                  },
                                  {
                                    "name": "offset",
                                    "nativeSrc": "17472:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "17472:6:15"
                                  },
                                  {
                                    "name": "zero_0",
                                    "nativeSrc": "17480:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "17480:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "update_storage_value_t_uint256_to_t_uint256",
                                  "nativeSrc": "17422:43:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "17422:43:15"
                                },
                                "nativeSrc": "17422:65:15",
                                "nodeType": "YulFunctionCall",
                                "src": "17422:65:15"
                              },
                              "nativeSrc": "17422:65:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "17422:65:15"
                            }
                          ]
                        },
                        "name": "storage_set_to_zero_t_uint256",
                        "nativeSrc": "17304:189:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "17343:4:15",
                            "nodeType": "YulTypedName",
                            "src": "17343:4:15",
                            "type": ""
                          },
                          {
                            "name": "offset",
                            "nativeSrc": "17349:6:15",
                            "nodeType": "YulTypedName",
                            "src": "17349:6:15",
                            "type": ""
                          }
                        ],
                        "src": "17304:189:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "17549:136:15",
                          "nodeType": "YulBlock",
                          "src": "17549:136:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "17616:63:15",
                                "nodeType": "YulBlock",
                                "src": "17616:63:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "17660:5:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "17660:5:15"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "17667:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "17667:1:15",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "storage_set_to_zero_t_uint256",
                                        "nativeSrc": "17630:29:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "17630:29:15"
                                      },
                                      "nativeSrc": "17630:39:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "17630:39:15"
                                    },
                                    "nativeSrc": "17630:39:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17630:39:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nativeSrc": "17569:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "17569:5:15"
                                  },
                                  {
                                    "name": "end",
                                    "nativeSrc": "17576:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "17576:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "17566:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "17566:2:15"
                                },
                                "nativeSrc": "17566:14:15",
                                "nodeType": "YulFunctionCall",
                                "src": "17566:14:15"
                              },
                              "nativeSrc": "17559:120:15",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "17581:26:15",
                                "nodeType": "YulBlock",
                                "src": "17581:26:15",
                                "statements": [
                                  {
                                    "nativeSrc": "17583:22:15",
                                    "nodeType": "YulAssignment",
                                    "src": "17583:22:15",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "17596:5:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "17596:5:15"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "17603:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "17603:1:15",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "17592:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "17592:3:15"
                                      },
                                      "nativeSrc": "17592:13:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "17592:13:15"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "17583:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "17583:5:15"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "17563:2:15",
                                "nodeType": "YulBlock",
                                "src": "17563:2:15",
                                "statements": []
                              },
                              "src": "17559:120:15"
                            }
                          ]
                        },
                        "name": "clear_storage_range_t_bytes1",
                        "nativeSrc": "17499:186:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "start",
                            "nativeSrc": "17537:5:15",
                            "nodeType": "YulTypedName",
                            "src": "17537:5:15",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nativeSrc": "17544:3:15",
                            "nodeType": "YulTypedName",
                            "src": "17544:3:15",
                            "type": ""
                          }
                        ],
                        "src": "17499:186:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "17770:464:15",
                          "nodeType": "YulBlock",
                          "src": "17770:464:15",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "17796:431:15",
                                "nodeType": "YulBlock",
                                "src": "17796:431:15",
                                "statements": [
                                  {
                                    "nativeSrc": "17810:54:15",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "17810:54:15",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nativeSrc": "17858:5:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "17858:5:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_dataslot_t_string_storage",
                                        "nativeSrc": "17826:31:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "17826:31:15"
                                      },
                                      "nativeSrc": "17826:38:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "17826:38:15"
                                    },
                                    "variables": [
                                      {
                                        "name": "dataArea",
                                        "nativeSrc": "17814:8:15",
                                        "nodeType": "YulTypedName",
                                        "src": "17814:8:15",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "17877:63:15",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "17877:63:15",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dataArea",
                                          "nativeSrc": "17900:8:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "17900:8:15"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "startIndex",
                                              "nativeSrc": "17928:10:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "17928:10:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "divide_by_32_ceil",
                                            "nativeSrc": "17910:17:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "17910:17:15"
                                          },
                                          "nativeSrc": "17910:29:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "17910:29:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "17896:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "17896:3:15"
                                      },
                                      "nativeSrc": "17896:44:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "17896:44:15"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "17881:11:15",
                                        "nodeType": "YulTypedName",
                                        "src": "17881:11:15",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "18097:27:15",
                                      "nodeType": "YulBlock",
                                      "src": "18097:27:15",
                                      "statements": [
                                        {
                                          "nativeSrc": "18099:23:15",
                                          "nodeType": "YulAssignment",
                                          "src": "18099:23:15",
                                          "value": {
                                            "name": "dataArea",
                                            "nativeSrc": "18114:8:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "18114:8:15"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nativeSrc": "18099:11:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "18099:11:15"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "18081:10:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "18081:10:15"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "18093:2:15",
                                          "nodeType": "YulLiteral",
                                          "src": "18093:2:15",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "18078:2:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "18078:2:15"
                                      },
                                      "nativeSrc": "18078:18:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "18078:18:15"
                                    },
                                    "nativeSrc": "18075:49:15",
                                    "nodeType": "YulIf",
                                    "src": "18075:49:15"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "deleteStart",
                                          "nativeSrc": "18166:11:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "18166:11:15"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "dataArea",
                                              "nativeSrc": "18183:8:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "18183:8:15"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nativeSrc": "18211:3:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "18211:3:15"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "divide_by_32_ceil",
                                                "nativeSrc": "18193:17:15",
                                                "nodeType": "YulIdentifier",
                                                "src": "18193:17:15"
                                              },
                                              "nativeSrc": "18193:22:15",
                                              "nodeType": "YulFunctionCall",
                                              "src": "18193:22:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "18179:3:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "18179:3:15"
                                          },
                                          "nativeSrc": "18179:37:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "18179:37:15"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "clear_storage_range_t_bytes1",
                                        "nativeSrc": "18137:28:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "18137:28:15"
                                      },
                                      "nativeSrc": "18137:80:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "18137:80:15"
                                    },
                                    "nativeSrc": "18137:80:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "18137:80:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nativeSrc": "17787:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "17787:3:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "17792:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "17792:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "17784:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "17784:2:15"
                                },
                                "nativeSrc": "17784:11:15",
                                "nodeType": "YulFunctionCall",
                                "src": "17784:11:15"
                              },
                              "nativeSrc": "17781:446:15",
                              "nodeType": "YulIf",
                              "src": "17781:446:15"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_t_string_storage",
                        "nativeSrc": "17691:543:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nativeSrc": "17746:5:15",
                            "nodeType": "YulTypedName",
                            "src": "17746:5:15",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "17753:3:15",
                            "nodeType": "YulTypedName",
                            "src": "17753:3:15",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nativeSrc": "17758:10:15",
                            "nodeType": "YulTypedName",
                            "src": "17758:10:15",
                            "type": ""
                          }
                        ],
                        "src": "17691:543:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "18303:54:15",
                          "nodeType": "YulBlock",
                          "src": "18303:54:15",
                          "statements": [
                            {
                              "nativeSrc": "18313:37:15",
                              "nodeType": "YulAssignment",
                              "src": "18313:37:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "bits",
                                    "nativeSrc": "18338:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "18338:4:15"
                                  },
                                  {
                                    "name": "value",
                                    "nativeSrc": "18344:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "18344:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "18334:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "18334:3:15"
                                },
                                "nativeSrc": "18334:16:15",
                                "nodeType": "YulFunctionCall",
                                "src": "18334:16:15"
                              },
                              "variableNames": [
                                {
                                  "name": "newValue",
                                  "nativeSrc": "18313:8:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "18313:8:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "shift_right_unsigned_dynamic",
                        "nativeSrc": "18240:117:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "bits",
                            "nativeSrc": "18278:4:15",
                            "nodeType": "YulTypedName",
                            "src": "18278:4:15",
                            "type": ""
                          },
                          {
                            "name": "value",
                            "nativeSrc": "18284:5:15",
                            "nodeType": "YulTypedName",
                            "src": "18284:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "newValue",
                            "nativeSrc": "18294:8:15",
                            "nodeType": "YulTypedName",
                            "src": "18294:8:15",
                            "type": ""
                          }
                        ],
                        "src": "18240:117:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "18414:118:15",
                          "nodeType": "YulBlock",
                          "src": "18414:118:15",
                          "statements": [
                            {
                              "nativeSrc": "18424:68:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "18424:68:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "18473:1:15",
                                            "nodeType": "YulLiteral",
                                            "src": "18473:1:15",
                                            "type": "",
                                            "value": "8"
                                          },
                                          {
                                            "name": "bytes",
                                            "nativeSrc": "18476:5:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "18476:5:15"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mul",
                                          "nativeSrc": "18469:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "18469:3:15"
                                        },
                                        "nativeSrc": "18469:13:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "18469:13:15"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "18488:1:15",
                                            "nodeType": "YulLiteral",
                                            "src": "18488:1:15",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "18484:3:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "18484:3:15"
                                        },
                                        "nativeSrc": "18484:6:15",
                                        "nodeType": "YulFunctionCall",
                                        "src": "18484:6:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shift_right_unsigned_dynamic",
                                      "nativeSrc": "18440:28:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "18440:28:15"
                                    },
                                    "nativeSrc": "18440:51:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "18440:51:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nativeSrc": "18436:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "18436:3:15"
                                },
                                "nativeSrc": "18436:56:15",
                                "nodeType": "YulFunctionCall",
                                "src": "18436:56:15"
                              },
                              "variables": [
                                {
                                  "name": "mask",
                                  "nativeSrc": "18428:4:15",
                                  "nodeType": "YulTypedName",
                                  "src": "18428:4:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "18501:25:15",
                              "nodeType": "YulAssignment",
                              "src": "18501:25:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "18515:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "18515:4:15"
                                  },
                                  {
                                    "name": "mask",
                                    "nativeSrc": "18521:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "18521:4:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "18511:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "18511:3:15"
                                },
                                "nativeSrc": "18511:15:15",
                                "nodeType": "YulFunctionCall",
                                "src": "18511:15:15"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nativeSrc": "18501:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "18501:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mask_bytes_dynamic",
                        "nativeSrc": "18363:169:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "18391:4:15",
                            "nodeType": "YulTypedName",
                            "src": "18391:4:15",
                            "type": ""
                          },
                          {
                            "name": "bytes",
                            "nativeSrc": "18397:5:15",
                            "nodeType": "YulTypedName",
                            "src": "18397:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nativeSrc": "18407:6:15",
                            "nodeType": "YulTypedName",
                            "src": "18407:6:15",
                            "type": ""
                          }
                        ],
                        "src": "18363:169:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "18618:214:15",
                          "nodeType": "YulBlock",
                          "src": "18618:214:15",
                          "statements": [
                            {
                              "nativeSrc": "18751:37:15",
                              "nodeType": "YulAssignment",
                              "src": "18751:37:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "18778:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "18778:4:15"
                                  },
                                  {
                                    "name": "len",
                                    "nativeSrc": "18784:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "18784:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mask_bytes_dynamic",
                                  "nativeSrc": "18759:18:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "18759:18:15"
                                },
                                "nativeSrc": "18759:29:15",
                                "nodeType": "YulFunctionCall",
                                "src": "18759:29:15"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "18751:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "18751:4:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "18797:29:15",
                              "nodeType": "YulAssignment",
                              "src": "18797:29:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "18808:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "18808:4:15"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "18818:1:15",
                                        "nodeType": "YulLiteral",
                                        "src": "18818:1:15",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "name": "len",
                                        "nativeSrc": "18821:3:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "18821:3:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nativeSrc": "18814:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "18814:3:15"
                                    },
                                    "nativeSrc": "18814:11:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "18814:11:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "18805:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "18805:2:15"
                                },
                                "nativeSrc": "18805:21:15",
                                "nodeType": "YulFunctionCall",
                                "src": "18805:21:15"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nativeSrc": "18797:4:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "18797:4:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nativeSrc": "18537:295:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "18599:4:15",
                            "nodeType": "YulTypedName",
                            "src": "18599:4:15",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "18605:3:15",
                            "nodeType": "YulTypedName",
                            "src": "18605:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nativeSrc": "18613:4:15",
                            "nodeType": "YulTypedName",
                            "src": "18613:4:15",
                            "type": ""
                          }
                        ],
                        "src": "18537:295:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "18929:1303:15",
                          "nodeType": "YulBlock",
                          "src": "18929:1303:15",
                          "statements": [
                            {
                              "nativeSrc": "18940:51:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "18940:51:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "18987:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "18987:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_string_memory_ptr",
                                  "nativeSrc": "18954:32:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "18954:32:15"
                                },
                                "nativeSrc": "18954:37:15",
                                "nodeType": "YulFunctionCall",
                                "src": "18954:37:15"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "18944:6:15",
                                  "nodeType": "YulTypedName",
                                  "src": "18944:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "19076:22:15",
                                "nodeType": "YulBlock",
                                "src": "19076:22:15",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "19078:16:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "19078:16:15"
                                      },
                                      "nativeSrc": "19078:18:15",
                                      "nodeType": "YulFunctionCall",
                                      "src": "19078:18:15"
                                    },
                                    "nativeSrc": "19078:18:15",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "19078:18:15"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "19048:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "19048:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "19056:18:15",
                                    "nodeType": "YulLiteral",
                                    "src": "19056:18:15",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "19045:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "19045:2:15"
                                },
                                "nativeSrc": "19045:30:15",
                                "nodeType": "YulFunctionCall",
                                "src": "19045:30:15"
                              },
                              "nativeSrc": "19042:56:15",
                              "nodeType": "YulIf",
                              "src": "19042:56:15"
                            },
                            {
                              "nativeSrc": "19108:52:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "19108:52:15",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "slot",
                                        "nativeSrc": "19154:4:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "19154:4:15"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nativeSrc": "19148:5:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "19148:5:15"
                                    },
                                    "nativeSrc": "19148:11:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "19148:11:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "extract_byte_array_length",
                                  "nativeSrc": "19122:25:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "19122:25:15"
                                },
                                "nativeSrc": "19122:38:15",
                                "nodeType": "YulFunctionCall",
                                "src": "19122:38:15"
                              },
                              "variables": [
                                {
                                  "name": "oldLen",
                                  "nativeSrc": "19112:6:15",
                                  "nodeType": "YulTypedName",
                                  "src": "19112:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "19253:4:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "19253:4:15"
                                  },
                                  {
                                    "name": "oldLen",
                                    "nativeSrc": "19259:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "19259:6:15"
                                  },
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "19267:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "19267:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_t_string_storage",
                                  "nativeSrc": "19207:45:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "19207:45:15"
                                },
                                "nativeSrc": "19207:67:15",
                                "nodeType": "YulFunctionCall",
                                "src": "19207:67:15"
                              },
                              "nativeSrc": "19207:67:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "19207:67:15"
                            },
                            {
                              "nativeSrc": "19284:18:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "19284:18:15",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "19301:1:15",
                                "nodeType": "YulLiteral",
                                "src": "19301:1:15",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "19288:9:15",
                                  "nodeType": "YulTypedName",
                                  "src": "19288:9:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "19312:17:15",
                              "nodeType": "YulAssignment",
                              "src": "19312:17:15",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "19325:4:15",
                                "nodeType": "YulLiteral",
                                "src": "19325:4:15",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "19312:9:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "19312:9:15"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "19376:611:15",
                                    "nodeType": "YulBlock",
                                    "src": "19376:611:15",
                                    "statements": [
                                      {
                                        "nativeSrc": "19390:37:15",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "19390:37:15",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "19409:6:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "19409:6:15"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "19421:4:15",
                                                  "nodeType": "YulLiteral",
                                                  "src": "19421:4:15",
                                                  "type": "",
                                                  "value": "0x1f"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "19417:3:15",
                                                "nodeType": "YulIdentifier",
                                                "src": "19417:3:15"
                                              },
                                              "nativeSrc": "19417:9:15",
                                              "nodeType": "YulFunctionCall",
                                              "src": "19417:9:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "19405:3:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "19405:3:15"
                                          },
                                          "nativeSrc": "19405:22:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "19405:22:15"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "19394:7:15",
                                            "nodeType": "YulTypedName",
                                            "src": "19394:7:15",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "19441:51:15",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "19441:51:15",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "19487:4:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "19487:4:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_t_string_storage",
                                            "nativeSrc": "19455:31:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "19455:31:15"
                                          },
                                          "nativeSrc": "19455:37:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "19455:37:15"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nativeSrc": "19445:6:15",
                                            "nodeType": "YulTypedName",
                                            "src": "19445:6:15",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "19505:10:15",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "19505:10:15",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "19514:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "19514:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "19509:1:15",
                                            "nodeType": "YulTypedName",
                                            "src": "19509:1:15",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "19573:163:15",
                                          "nodeType": "YulBlock",
                                          "src": "19573:163:15",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "19598:6:15",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19598:6:15"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nativeSrc": "19616:3:15",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "19616:3:15"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nativeSrc": "19621:9:15",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "19621:9:15"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nativeSrc": "19612:3:15",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "19612:3:15"
                                                        },
                                                        "nativeSrc": "19612:19:15",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "19612:19:15"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "19606:5:15",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "19606:5:15"
                                                    },
                                                    "nativeSrc": "19606:26:15",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "19606:26:15"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "19591:6:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19591:6:15"
                                                },
                                                "nativeSrc": "19591:42:15",
                                                "nodeType": "YulFunctionCall",
                                                "src": "19591:42:15"
                                              },
                                              "nativeSrc": "19591:42:15",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "19591:42:15"
                                            },
                                            {
                                              "nativeSrc": "19650:24:15",
                                              "nodeType": "YulAssignment",
                                              "src": "19650:24:15",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "19664:6:15",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19664:6:15"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "19672:1:15",
                                                    "nodeType": "YulLiteral",
                                                    "src": "19672:1:15",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "19660:3:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19660:3:15"
                                                },
                                                "nativeSrc": "19660:14:15",
                                                "nodeType": "YulFunctionCall",
                                                "src": "19660:14:15"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "19650:6:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19650:6:15"
                                                }
                                              ]
                                            },
                                            {
                                              "nativeSrc": "19691:31:15",
                                              "nodeType": "YulAssignment",
                                              "src": "19691:31:15",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "19708:9:15",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19708:9:15"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "19719:2:15",
                                                    "nodeType": "YulLiteral",
                                                    "src": "19719:2:15",
                                                    "type": "",
                                                    "value": "32"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "19704:3:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19704:3:15"
                                                },
                                                "nativeSrc": "19704:18:15",
                                                "nodeType": "YulFunctionCall",
                                                "src": "19704:18:15"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "19691:9:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19691:9:15"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "19539:1:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "19539:1:15"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "19542:7:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "19542:7:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "19536:2:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "19536:2:15"
                                          },
                                          "nativeSrc": "19536:14:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "19536:14:15"
                                        },
                                        "nativeSrc": "19528:208:15",
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nativeSrc": "19551:21:15",
                                          "nodeType": "YulBlock",
                                          "src": "19551:21:15",
                                          "statements": [
                                            {
                                              "nativeSrc": "19553:17:15",
                                              "nodeType": "YulAssignment",
                                              "src": "19553:17:15",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nativeSrc": "19562:1:15",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19562:1:15"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "19565:4:15",
                                                    "nodeType": "YulLiteral",
                                                    "src": "19565:4:15",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "19558:3:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19558:3:15"
                                                },
                                                "nativeSrc": "19558:12:15",
                                                "nodeType": "YulFunctionCall",
                                                "src": "19558:12:15"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "19553:1:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19553:1:15"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nativeSrc": "19532:3:15",
                                          "nodeType": "YulBlock",
                                          "src": "19532:3:15",
                                          "statements": []
                                        },
                                        "src": "19528:208:15"
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "19772:156:15",
                                          "nodeType": "YulBlock",
                                          "src": "19772:156:15",
                                          "statements": [
                                            {
                                              "nativeSrc": "19790:43:15",
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "19790:43:15",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "19817:3:15",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "19817:3:15"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "19822:9:15",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "19822:9:15"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "19813:3:15",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "19813:3:15"
                                                    },
                                                    "nativeSrc": "19813:19:15",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "19813:19:15"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "19807:5:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19807:5:15"
                                                },
                                                "nativeSrc": "19807:26:15",
                                                "nodeType": "YulFunctionCall",
                                                "src": "19807:26:15"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nativeSrc": "19794:9:15",
                                                  "nodeType": "YulTypedName",
                                                  "src": "19794:9:15",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "19857:6:15",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19857:6:15"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nativeSrc": "19884:9:15",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "19884:9:15"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "newLen",
                                                            "nativeSrc": "19899:6:15",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "19899:6:15"
                                                          },
                                                          {
                                                            "kind": "number",
                                                            "nativeSrc": "19907:4:15",
                                                            "nodeType": "YulLiteral",
                                                            "src": "19907:4:15",
                                                            "type": "",
                                                            "value": "0x1f"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "and",
                                                          "nativeSrc": "19895:3:15",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "19895:3:15"
                                                        },
                                                        "nativeSrc": "19895:17:15",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "19895:17:15"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mask_bytes_dynamic",
                                                      "nativeSrc": "19865:18:15",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "19865:18:15"
                                                    },
                                                    "nativeSrc": "19865:48:15",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "19865:48:15"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "19850:6:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19850:6:15"
                                                },
                                                "nativeSrc": "19850:64:15",
                                                "nodeType": "YulFunctionCall",
                                                "src": "19850:64:15"
                                              },
                                              "nativeSrc": "19850:64:15",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "19850:64:15"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "19755:7:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "19755:7:15"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "19764:6:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "19764:6:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "19752:2:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "19752:2:15"
                                          },
                                          "nativeSrc": "19752:19:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "19752:19:15"
                                        },
                                        "nativeSrc": "19749:179:15",
                                        "nodeType": "YulIf",
                                        "src": "19749:179:15"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "19948:4:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "19948:4:15"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "newLen",
                                                      "nativeSrc": "19962:6:15",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "19962:6:15"
                                                    },
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "19970:1:15",
                                                      "nodeType": "YulLiteral",
                                                      "src": "19970:1:15",
                                                      "type": "",
                                                      "value": "2"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "mul",
                                                    "nativeSrc": "19958:3:15",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19958:3:15"
                                                  },
                                                  "nativeSrc": "19958:14:15",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "19958:14:15"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "19974:1:15",
                                                  "nodeType": "YulLiteral",
                                                  "src": "19974:1:15",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "19954:3:15",
                                                "nodeType": "YulIdentifier",
                                                "src": "19954:3:15"
                                              },
                                              "nativeSrc": "19954:22:15",
                                              "nodeType": "YulFunctionCall",
                                              "src": "19954:22:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "19941:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "19941:6:15"
                                          },
                                          "nativeSrc": "19941:36:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "19941:36:15"
                                        },
                                        "nativeSrc": "19941:36:15",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "19941:36:15"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "19369:618:15",
                                  "nodeType": "YulCase",
                                  "src": "19369:618:15",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "19374:1:15",
                                    "nodeType": "YulLiteral",
                                    "src": "19374:1:15",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "20004:222:15",
                                    "nodeType": "YulBlock",
                                    "src": "20004:222:15",
                                    "statements": [
                                      {
                                        "nativeSrc": "20018:14:15",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "20018:14:15",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "20031:1:15",
                                          "nodeType": "YulLiteral",
                                          "src": "20031:1:15",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "20022:5:15",
                                            "nodeType": "YulTypedName",
                                            "src": "20022:5:15",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "20055:67:15",
                                          "nodeType": "YulBlock",
                                          "src": "20055:67:15",
                                          "statements": [
                                            {
                                              "nativeSrc": "20073:35:15",
                                              "nodeType": "YulAssignment",
                                              "src": "20073:35:15",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "20092:3:15",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "20092:3:15"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "20097:9:15",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "20097:9:15"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "20088:3:15",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "20088:3:15"
                                                    },
                                                    "nativeSrc": "20088:19:15",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "20088:19:15"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "20082:5:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20082:5:15"
                                                },
                                                "nativeSrc": "20082:26:15",
                                                "nodeType": "YulFunctionCall",
                                                "src": "20082:26:15"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "20073:5:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20073:5:15"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nativeSrc": "20048:6:15",
                                          "nodeType": "YulIdentifier",
                                          "src": "20048:6:15"
                                        },
                                        "nativeSrc": "20045:77:15",
                                        "nodeType": "YulIf",
                                        "src": "20045:77:15"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "20142:4:15",
                                              "nodeType": "YulIdentifier",
                                              "src": "20142:4:15"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "20201:5:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20201:5:15"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "20208:6:15",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20208:6:15"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nativeSrc": "20148:52:15",
                                                "nodeType": "YulIdentifier",
                                                "src": "20148:52:15"
                                              },
                                              "nativeSrc": "20148:67:15",
                                              "nodeType": "YulFunctionCall",
                                              "src": "20148:67:15"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "20135:6:15",
                                            "nodeType": "YulIdentifier",
                                            "src": "20135:6:15"
                                          },
                                          "nativeSrc": "20135:81:15",
                                          "nodeType": "YulFunctionCall",
                                          "src": "20135:81:15"
                                        },
                                        "nativeSrc": "20135:81:15",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "20135:81:15"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "19996:230:15",
                                  "nodeType": "YulCase",
                                  "src": "19996:230:15",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "19349:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "19349:6:15"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "19357:2:15",
                                    "nodeType": "YulLiteral",
                                    "src": "19357:2:15",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "19346:2:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "19346:2:15"
                                },
                                "nativeSrc": "19346:14:15",
                                "nodeType": "YulFunctionCall",
                                "src": "19346:14:15"
                              },
                              "nativeSrc": "19339:887:15",
                              "nodeType": "YulSwitch",
                              "src": "19339:887:15"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nativeSrc": "18837:1395:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "18918:4:15",
                            "nodeType": "YulTypedName",
                            "src": "18918:4:15",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nativeSrc": "18924:3:15",
                            "nodeType": "YulTypedName",
                            "src": "18924:3:15",
                            "type": ""
                          }
                        ],
                        "src": "18837:1395:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "20296:40:15",
                          "nodeType": "YulBlock",
                          "src": "20296:40:15",
                          "statements": [
                            {
                              "nativeSrc": "20307:22:15",
                              "nodeType": "YulAssignment",
                              "src": "20307:22:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "20323:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "20323:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "20317:5:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "20317:5:15"
                                },
                                "nativeSrc": "20317:12:15",
                                "nodeType": "YulFunctionCall",
                                "src": "20317:12:15"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "20307:6:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "20307:6:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nativeSrc": "20238:98:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "20279:5:15",
                            "nodeType": "YulTypedName",
                            "src": "20279:5:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "20289:6:15",
                            "nodeType": "YulTypedName",
                            "src": "20289:6:15",
                            "type": ""
                          }
                        ],
                        "src": "20238:98:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "20455:34:15",
                          "nodeType": "YulBlock",
                          "src": "20455:34:15",
                          "statements": [
                            {
                              "nativeSrc": "20465:18:15",
                              "nodeType": "YulAssignment",
                              "src": "20465:18:15",
                              "value": {
                                "name": "pos",
                                "nativeSrc": "20480:3:15",
                                "nodeType": "YulIdentifier",
                                "src": "20480:3:15"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nativeSrc": "20465:11:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "20465:11:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nativeSrc": "20342:147:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "20427:3:15",
                            "nodeType": "YulTypedName",
                            "src": "20427:3:15",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nativeSrc": "20432:6:15",
                            "nodeType": "YulTypedName",
                            "src": "20432:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nativeSrc": "20443:11:15",
                            "nodeType": "YulTypedName",
                            "src": "20443:11:15",
                            "type": ""
                          }
                        ],
                        "src": "20342:147:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "20603:278:15",
                          "nodeType": "YulBlock",
                          "src": "20603:278:15",
                          "statements": [
                            {
                              "nativeSrc": "20613:52:15",
                              "nodeType": "YulVariableDeclaration",
                              "src": "20613:52:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "20659:5:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "20659:5:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nativeSrc": "20627:31:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "20627:31:15"
                                },
                                "nativeSrc": "20627:38:15",
                                "nodeType": "YulFunctionCall",
                                "src": "20627:38:15"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "20617:6:15",
                                  "nodeType": "YulTypedName",
                                  "src": "20617:6:15",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "20674:95:15",
                              "nodeType": "YulAssignment",
                              "src": "20674:95:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "20757:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "20757:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "20762:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "20762:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nativeSrc": "20681:75:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "20681:75:15"
                                },
                                "nativeSrc": "20681:88:15",
                                "nodeType": "YulFunctionCall",
                                "src": "20681:88:15"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "20674:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "20674:3:15"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "20817:5:15",
                                        "nodeType": "YulIdentifier",
                                        "src": "20817:5:15"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "20824:4:15",
                                        "nodeType": "YulLiteral",
                                        "src": "20824:4:15",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "20813:3:15",
                                      "nodeType": "YulIdentifier",
                                      "src": "20813:3:15"
                                    },
                                    "nativeSrc": "20813:16:15",
                                    "nodeType": "YulFunctionCall",
                                    "src": "20813:16:15"
                                  },
                                  {
                                    "name": "pos",
                                    "nativeSrc": "20831:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "20831:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "20836:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "20836:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nativeSrc": "20778:34:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "20778:34:15"
                                },
                                "nativeSrc": "20778:65:15",
                                "nodeType": "YulFunctionCall",
                                "src": "20778:65:15"
                              },
                              "nativeSrc": "20778:65:15",
                              "nodeType": "YulExpressionStatement",
                              "src": "20778:65:15"
                            },
                            {
                              "nativeSrc": "20852:23:15",
                              "nodeType": "YulAssignment",
                              "src": "20852:23:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nativeSrc": "20863:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "20863:3:15"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "20868:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "20868:6:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "20859:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "20859:3:15"
                                },
                                "nativeSrc": "20859:16:15",
                                "nodeType": "YulFunctionCall",
                                "src": "20859:16:15"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "20852:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "20852:3:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                        "nativeSrc": "20495:386:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "20584:5:15",
                            "nodeType": "YulTypedName",
                            "src": "20584:5:15",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nativeSrc": "20591:3:15",
                            "nodeType": "YulTypedName",
                            "src": "20591:3:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "20599:3:15",
                            "nodeType": "YulTypedName",
                            "src": "20599:3:15",
                            "type": ""
                          }
                        ],
                        "src": "20495:386:15"
                      },
                      {
                        "body": {
                          "nativeSrc": "21021:137:15",
                          "nodeType": "YulBlock",
                          "src": "21021:137:15",
                          "statements": [
                            {
                              "nativeSrc": "21032:100:15",
                              "nodeType": "YulAssignment",
                              "src": "21032:100:15",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "21119:6:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "21119:6:15"
                                  },
                                  {
                                    "name": "pos",
                                    "nativeSrc": "21128:3:15",
                                    "nodeType": "YulIdentifier",
                                    "src": "21128:3:15"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                                  "nativeSrc": "21039:79:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "21039:79:15"
                                },
                                "nativeSrc": "21039:93:15",
                                "nodeType": "YulFunctionCall",
                                "src": "21039:93:15"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "21032:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "21032:3:15"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "21142:10:15",
                              "nodeType": "YulAssignment",
                              "src": "21142:10:15",
                              "value": {
                                "name": "pos",
                                "nativeSrc": "21149:3:15",
                                "nodeType": "YulIdentifier",
                                "src": "21149:3:15"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "21142:3:15",
                                  "nodeType": "YulIdentifier",
                                  "src": "21142:3:15"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nativeSrc": "20887:271:15",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "21000:3:15",
                            "nodeType": "YulTypedName",
                            "src": "21000:3:15",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "21006:6:15",
                            "nodeType": "YulTypedName",
                            "src": "21006:6:15",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "21017:3:15",
                            "nodeType": "YulTypedName",
                            "src": "21017:3:15",
                            "type": ""
                          }
                        ],
                        "src": "20887:271:15"
                      }
                    ]
                  },
                  "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfers are disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
                  "id": 15,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "468": [
                  {
                    "length": 32,
                    "start": 4247
                  },
                  {
                    "length": 32,
                    "start": 4332
                  },
                  {
                    "length": 32,
                    "start": 4774
                  }
                ]
              },
              "linkReferences": {},
              "object": "60806040526004361061019b575f3560e01c80636a6940cc116100eb578063a9059cbb11610089578063dd62ed3e11610063578063dd62ed3e1461057d578063e4b8c4d4146105b9578063f2fde38b146105e1578063fe5a45d0146106095761019b565b8063a9059cbb146104ef578063ad3cb1cc1461052b578063c4d66de8146105555761019b565b806379cc6790116100c557806379cc67901461044b5780637fae588d146104735780638da5cb5b1461049b57806395d89b41146104c55761019b565b80636a6940cc146103cf57806370a08231146103f9578063715018a6146104355761019b565b8063313ce5671161015857806342966c681161013257806342966c68146103375780634f1ef2861461035f57806352d1902d1461037b57806355ccbff7146103a55761019b565b8063313ce567146102bb57806340c10f19146102e5578063423b1ca31461030d5761019b565b806306fdde031461019f578063095ea7b3146101c95780630db6dff71461020557806318160ddd1461022d578063210984611461025757806323b872dd1461027f575b5f80fd5b3480156101aa575f80fd5b506101b3610633565b6040516101c09190611dd8565b60405180910390f35b3480156101d4575f80fd5b506101ef60048036038101906101ea9190611e96565b6106d1565b6040516101fc9190611eee565b60405180910390f35b348015610210575f80fd5b5061022b60048036038101906102269190611f07565b6106f3565b005b348015610238575f80fd5b5061024161073e565b60405161024e9190611f41565b60405180910390f35b348015610262575f80fd5b5061027d60048036038101906102789190611f07565b610755565b005b34801561028a575f80fd5b506102a560048036038101906102a09190611f5a565b6107a0565b6040516102b29190611eee565b60405180910390f35b3480156102c6575f80fd5b506102cf6107dc565b6040516102dc9190611fc5565b60405180910390f35b3480156102f0575f80fd5b5061030b60048036038101906103069190611e96565b6107e4565b005b348015610318575f80fd5b5061032161085e565b60405161032e9190611fed565b60405180910390f35b348015610342575f80fd5b5061035d60048036038101906103589190612006565b610883565b005b6103796004803603810190610374919061215d565b610897565b005b348015610386575f80fd5b5061038f6108b6565b60405161039c91906121cf565b60405180910390f35b3480156103b0575f80fd5b506103b96108e7565b6040516103c69190611fed565b60405180910390f35b3480156103da575f80fd5b506103e361090c565b6040516103f09190611fed565b60405180910390f35b348015610404575f80fd5b5061041f600480360381019061041a9190611f07565b61092f565b60405161042c9190611f41565b60405180910390f35b348015610440575f80fd5b50610449610982565b005b348015610456575f80fd5b50610471600480360381019061046c9190611e96565b610995565b005b34801561047e575f80fd5b5061049960048036038101906104949190611f07565b6109b5565b005b3480156104a6575f80fd5b506104af6109ff565b6040516104bc9190611fed565b60405180910390f35b3480156104d0575f80fd5b506104d9610a34565b6040516104e69190611dd8565b60405180910390f35b3480156104fa575f80fd5b5061051560048036038101906105109190611e96565b610ad2565b6040516105229190611eee565b60405180910390f35b348015610536575f80fd5b5061053f610b0e565b60405161054c9190611dd8565b60405180910390f35b348015610560575f80fd5b5061057b60048036038101906105769190611f07565b610b47565b005b348015610588575f80fd5b506105a3600480360381019061059e91906121e8565b610d4c565b6040516105b09190611f41565b60405180910390f35b3480156105c4575f80fd5b506105df60048036038101906105da9190611f07565b610ddc565b005b3480156105ec575f80fd5b5061060760048036038101906106029190611f07565b610e27565b005b348015610614575f80fd5b5061061d610eab565b60405161062a9190611fed565b60405180910390f35b60605f61063e610ed0565b905080600301805461064f90612253565b80601f016020809104026020016040519081016040528092919081815260200182805461067b90612253565b80156106c65780601f1061069d576101008083540402835291602001916106c6565b820191905f5260205f20905b8154815290600101906020018083116106a957829003601f168201915b505050505091505090565b5f806106db610ef7565b90506106e8818585610efe565b600191505092915050565b6106fb610f10565b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f80610748610ed0565b9050806002015491505090565b61075d610f10565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d3906122cd565b60405180910390fd5b5f6012905090565b61080c826107f06107dc565b600a6107fc9190612447565b836108079190612491565b610f97565b8173ffffffffffffffffffffffffffffffffffffffff167f7b47457f3af09e5f794b020fd74160963a808f5985883496a096d403d380c343826040516108529190611f41565b60405180910390a25050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61089461088e610ef7565b82611016565b50565b61089f611095565b6108a88261117b565b6108b28282611186565b5050565b5f6108bf6112a4565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610939610ed0565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b61098a610f10565b6109935f61132b565b565b6109a7826109a1610ef7565b836113fc565b6109b18282611016565b5050565b6109bd610f10565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f80610a0961148e565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610a3f610ed0565b9050806004018054610a5090612253565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7c90612253565b8015610ac75780601f10610a9e57610100808354040283529160200191610ac7565b820191905f5260205f20905b815481529060010190602001808311610aaa57829003601f168201915b505050505091505090565b5f6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b05906122cd565b60405180910390fd5b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f610b506114b5565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610b985750825b90505f60018367ffffffffffffffff16148015610bcb57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610bd9575080155b15610c10576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610c5d576001855f0160086101000a81548160ff0219169083151502179055505b610cd16040518060400160405280600b81526020017f447261676f6e4472696e6b0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f44444b00000000000000000000000000000000000000000000000000000000008152506114dc565b610cd96114f2565b610ce2866114fc565b610cea611510565b8315610d44575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610d3b9190612527565b60405180910390a15b505050505050565b5f80610d56610ed0565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b610de4610f10565b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610e2f610f10565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e9f575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e969190611fed565b60405180910390fd5b610ea88161132b565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b610f0b838383600161151a565b505050565b610f18610ef7565b73ffffffffffffffffffffffffffffffffffffffff16610f366109ff565b73ffffffffffffffffffffffffffffffffffffffff1614610f9557610f59610ef7565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f8c9190611fed565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611007575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ffe9190611fed565b60405180910390fd5b6110125f83836116f7565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611086575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161107d9190611fed565b60405180910390fd5b611091825f836116f7565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061114257507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611129611926565b73ffffffffffffffffffffffffffffffffffffffff1614155b15611179576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611183610f10565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156111ee57506040513d601f19601f820116820180604052508101906111eb919061256a565b60015b61122f57816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016112269190611fed565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461129557806040517faa1d49a400000000000000000000000000000000000000000000000000000000815260040161128c91906121cf565b60405180910390fd5b61129f8383611979565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614611329576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61133461148e565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f6114078484610d4c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146114885781811015611479578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161147093929190612595565b60405180910390fd5b61148784848484035f61151a565b5b50505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6114e46119eb565b6114ee8282611a2b565b5050565b6114fa6119eb565b565b6115046119eb565b61150d81611a67565b50565b6115186119eb565b565b5f611523610ed0565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611595575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161158c9190611fed565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611605575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016115fc9190611fed565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555081156116f0578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516116e79190611f41565b60405180910390a35b5050505050565b5f611700610ed0565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117545781816002015f82825461174891906125ca565b92505081905550611826565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156117df578481846040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016117d693929190612595565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361186f5781816002015f82825403925050819055506118bb565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516119189190611f41565b60405180910390a350505050565b5f6119527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611aeb565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61198282611af4565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156119de576119d88282611bbd565b506119e7565b6119e6611c3d565b5b5050565b6119f3611c79565b611a29576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611a336119eb565b5f611a3c610ed0565b905082816003019081611a4f9190612791565b5081816004019081611a619190612791565b50505050565b611a6f6119eb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611adf575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611ad69190611fed565b60405180910390fd5b611ae88161132b565b50565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b03611b4f57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401611b469190611fed565b60405180910390fd5b80611b7b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611aeb565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff1684604051611be691906128a4565b5f60405180830381855af49150503d805f8114611c1e576040519150601f19603f3d011682016040523d82523d5f602084013e611c23565b606091505b5091509150611c33858383611c97565b9250505092915050565b5f341115611c77576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611c826114b5565b5f0160089054906101000a900460ff16905090565b606082611cac57611ca782611d24565b611d1c565b5f8251148015611cd257505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611d1457836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611d0b9190611fed565b60405180910390fd5b819050611d1d565b5b9392505050565b5f81511115611d365780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611daa82611d68565b611db48185611d72565b9350611dc4818560208601611d82565b611dcd81611d90565b840191505092915050565b5f6020820190508181035f830152611df08184611da0565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e3282611e09565b9050919050565b611e4281611e28565b8114611e4c575f80fd5b50565b5f81359050611e5d81611e39565b92915050565b5f819050919050565b611e7581611e63565b8114611e7f575f80fd5b50565b5f81359050611e9081611e6c565b92915050565b5f8060408385031215611eac57611eab611e01565b5b5f611eb985828601611e4f565b9250506020611eca85828601611e82565b9150509250929050565b5f8115159050919050565b611ee881611ed4565b82525050565b5f602082019050611f015f830184611edf565b92915050565b5f60208284031215611f1c57611f1b611e01565b5b5f611f2984828501611e4f565b91505092915050565b611f3b81611e63565b82525050565b5f602082019050611f545f830184611f32565b92915050565b5f805f60608486031215611f7157611f70611e01565b5b5f611f7e86828701611e4f565b9350506020611f8f86828701611e4f565b9250506040611fa086828701611e82565b9150509250925092565b5f60ff82169050919050565b611fbf81611faa565b82525050565b5f602082019050611fd85f830184611fb6565b92915050565b611fe781611e28565b82525050565b5f6020820190506120005f830184611fde565b92915050565b5f6020828403121561201b5761201a611e01565b5b5f61202884828501611e82565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61206f82611d90565b810181811067ffffffffffffffff8211171561208e5761208d612039565b5b80604052505050565b5f6120a0611df8565b90506120ac8282612066565b919050565b5f67ffffffffffffffff8211156120cb576120ca612039565b5b6120d482611d90565b9050602081019050919050565b828183375f83830152505050565b5f6121016120fc846120b1565b612097565b90508281526020810184848401111561211d5761211c612035565b5b6121288482856120e1565b509392505050565b5f82601f83011261214457612143612031565b5b81356121548482602086016120ef565b91505092915050565b5f806040838503121561217357612172611e01565b5b5f61218085828601611e4f565b925050602083013567ffffffffffffffff8111156121a1576121a0611e05565b5b6121ad85828601612130565b9150509250929050565b5f819050919050565b6121c9816121b7565b82525050565b5f6020820190506121e25f8301846121c0565b92915050565b5f80604083850312156121fe576121fd611e01565b5b5f61220b85828601611e4f565b925050602061221c85828601611e4f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061226a57607f821691505b60208210810361227d5761227c612226565b5b50919050565b7f5472616e7366657273206172652064697361626c6564000000000000000000005f82015250565b5f6122b7601683611d72565b91506122c282612283565b602082019050919050565b5f6020820190508181035f8301526122e4816122ab565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111561236d57808604811115612349576123486122eb565b5b60018516156123585780820291505b808102905061236685612318565b945061232d565b94509492505050565b5f826123855760019050612440565b81612392575f9050612440565b81600181146123a857600281146123b2576123e1565b6001915050612440565b60ff8411156123c4576123c36122eb565b5b8360020a9150848211156123db576123da6122eb565b5b50612440565b5060208310610133831016604e8410600b84101617156124165782820a905083811115612411576124106122eb565b5b612440565b6124238484846001612324565b9250905081840481111561243a576124396122eb565b5b81810290505b9392505050565b5f61245182611e63565b915061245c83611faa565b92506124897fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612376565b905092915050565b5f61249b82611e63565b91506124a683611e63565b92508282026124b481611e63565b915082820484148315176124cb576124ca6122eb565b5b5092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61251161250c612507846124d2565b6124ee565b6124db565b9050919050565b612521816124f7565b82525050565b5f60208201905061253a5f830184612518565b92915050565b612549816121b7565b8114612553575f80fd5b50565b5f8151905061256481612540565b92915050565b5f6020828403121561257f5761257e611e01565b5b5f61258c84828501612556565b91505092915050565b5f6060820190506125a85f830186611fde565b6125b56020830185611f32565b6125c26040830184611f32565b949350505050565b5f6125d482611e63565b91506125df83611e63565b92508282019050808211156125f7576125f66122eb565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026126597fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261261e565b612663868361261e565b95508019841693508086168417925050509392505050565b5f61269561269061268b84611e63565b6124ee565b611e63565b9050919050565b5f819050919050565b6126ae8361267b565b6126c26126ba8261269c565b84845461262a565b825550505050565b5f90565b6126d66126ca565b6126e18184846126a5565b505050565b5b81811015612704576126f95f826126ce565b6001810190506126e7565b5050565b601f8211156127495761271a816125fd565b6127238461260f565b81016020851015612732578190505b61274661273e8561260f565b8301826126e6565b50505b505050565b5f82821c905092915050565b5f6127695f198460080261274e565b1980831691505092915050565b5f612781838361275a565b9150826002028217905092915050565b61279a82611d68565b67ffffffffffffffff8111156127b3576127b2612039565b5b6127bd8254612253565b6127c8828285612708565b5f60209050601f8311600181146127f9575f84156127e7578287015190505b6127f18582612776565b865550612858565b601f198416612807866125fd565b5f5b8281101561282e57848901518255600182019150602085019450602081019050612809565b8683101561284b5784890151612847601f89168261275a565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f61287e82612860565b612888818561286a565b9350612898818560208601611d82565b80840191505092915050565b5f6128af8284612874565b91508190509291505056fea26469706673582212204f36abd7b7c07fba378ec97a0783c549e997caaa8f0db082c82613fc84813a1664736f6c634300081a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A6940CC GT PUSH2 0xEB JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xE4B8C4D4 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xFE5A45D0 EQ PUSH2 0x609 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x555 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x7FAE588D EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C5 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x6A6940CC EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x435 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x158 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x132 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x55CCBFF7 EQ PUSH2 0x3A5 JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x423B1CA3 EQ PUSH2 0x30D JUMPI PUSH2 0x19B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xDB6DFF7 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x21098461 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1F5A JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1FC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x321 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH2 0x883 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x379 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x38F PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E3 PUSH2 0x90C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41A SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x449 PUSH2 0x982 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x471 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x499 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x494 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4AF PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D9 PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E6 SWAP2 SWAP1 PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x515 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x1EEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x536 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x53F PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x588 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x21E8 JUMP JUMPDEST PUSH2 0xD4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0xDDC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x607 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0xE27 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x614 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x61D PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62A SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x63E PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x64F SWAP1 PUSH2 0x2253 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x67B SWAP1 PUSH2 0x2253 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x69D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6DB PUSH2 0xEF7 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E8 DUP2 DUP6 DUP6 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6FB PUSH2 0xF10 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x748 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x75D PUSH2 0xF10 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D3 SWAP1 PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x80C DUP3 PUSH2 0x7F0 PUSH2 0x7DC JUMP JUMPDEST PUSH1 0xA PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0x2447 JUMP JUMPDEST DUP4 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x2491 JUMP JUMPDEST PUSH2 0xF97 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7B47457F3AF09E5F794B020FD74160963A808F5985883496A096D403D380C343 DUP3 PUSH1 0x40 MLOAD PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x894 PUSH2 0x88E PUSH2 0xEF7 JUMP JUMPDEST DUP3 PUSH2 0x1016 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x89F PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x8A8 DUP3 PUSH2 0x117B JUMP JUMPDEST PUSH2 0x8B2 DUP3 DUP3 PUSH2 0x1186 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8BF PUSH2 0x12A4 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x939 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x98A PUSH2 0xF10 JUMP JUMPDEST PUSH2 0x993 PUSH0 PUSH2 0x132B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9A7 DUP3 PUSH2 0x9A1 PUSH2 0xEF7 JUMP JUMPDEST DUP4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x9B1 DUP3 DUP3 PUSH2 0x1016 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9BD PUSH2 0xF10 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xA09 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA3F PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xA50 SWAP1 PUSH2 0x2253 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA7C SWAP1 PUSH2 0x2253 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAC7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA9E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAC7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAAA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB05 SWAP1 PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xB50 PUSH2 0x14B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB98 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xBCB JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xBD9 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC5D JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xCD1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x447261676F6E4472696E6B000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44444B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x14DC JUMP JUMPDEST PUSH2 0xCD9 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0xCE2 DUP7 PUSH2 0x14FC JUMP JUMPDEST PUSH2 0xCEA PUSH2 0x1510 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xD44 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD3B SWAP2 SWAP1 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD56 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDE4 PUSH2 0xF10 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xE2F PUSH2 0xF10 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE96 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA8 DUP2 PUSH2 0x132B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF0B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x151A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF18 PUSH2 0xEF7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF36 PUSH2 0x9FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF95 JUMPI PUSH2 0xF59 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1007 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1012 PUSH0 DUP4 DUP4 PUSH2 0x16F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1086 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1091 DUP3 PUSH0 DUP4 PUSH2 0x16F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1142 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1129 PUSH2 0x1926 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1179 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1183 PUSH2 0xF10 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11EE JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EB SWAP2 SWAP1 PUSH2 0x256A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x122F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x1295 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129F DUP4 DUP4 PUSH2 0x1979 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1329 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1334 PUSH2 0x148E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1407 DUP5 DUP5 PUSH2 0xD4C JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1488 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1479 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1470 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1487 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x151A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14E4 PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x14EE DUP3 DUP3 PUSH2 0x1A2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14FA PUSH2 0x19EB JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1504 PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x150D DUP2 PUSH2 0x1A67 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1518 PUSH2 0x19EB JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1523 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1595 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x158C SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1605 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x16F0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x16E7 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1700 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1754 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1748 SWAP2 SWAP1 PUSH2 0x25CA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1826 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x17DF JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x186F JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x18BB JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1918 SWAP2 SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1952 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1AEB JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1982 DUP3 PUSH2 0x1AF4 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x19DE JUMPI PUSH2 0x19D8 DUP3 DUP3 PUSH2 0x1BBD JUMP JUMPDEST POP PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0x19E6 PUSH2 0x1C3D JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x19F3 PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x1A29 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1A33 PUSH2 0x19EB JUMP JUMPDEST PUSH0 PUSH2 0x1A3C PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1A4F SWAP2 SWAP1 PUSH2 0x2791 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1A61 SWAP2 SWAP1 PUSH2 0x2791 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1A6F PUSH2 0x19EB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ADF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD6 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AE8 DUP2 PUSH2 0x132B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1B4F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B46 SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1B7B PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1AEB JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BE6 SWAP2 SWAP1 PUSH2 0x28A4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1C1E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1C33 DUP6 DUP4 DUP4 PUSH2 0x1C97 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1C82 PUSH2 0x14B5 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1CAC JUMPI PUSH2 0x1CA7 DUP3 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x1D1C JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1CD2 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1D14 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0B SWAP2 SWAP1 PUSH2 0x1FED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1D36 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DAA DUP3 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x1DB4 DUP2 DUP6 PUSH2 0x1D72 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DC4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D82 JUMP JUMPDEST PUSH2 0x1DCD DUP2 PUSH2 0x1D90 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DF0 DUP2 DUP5 PUSH2 0x1DA0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E32 DUP3 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E42 DUP2 PUSH2 0x1E28 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E5D DUP2 PUSH2 0x1E39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E75 DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E7F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E90 DUP2 PUSH2 0x1E6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAC JUMPI PUSH2 0x1EAB PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EB9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1ECA DUP6 DUP3 DUP7 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE8 DUP2 PUSH2 0x1ED4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F01 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1B PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F29 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F3B DUP2 PUSH2 0x1E63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F54 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F71 JUMPI PUSH2 0x1F70 PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F7E DUP7 DUP3 DUP8 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F8F DUP7 DUP3 DUP8 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1FA0 DUP7 DUP3 DUP8 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBF DUP2 PUSH2 0x1FAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FE7 DUP2 PUSH2 0x1E28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2000 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FDE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x201B JUMPI PUSH2 0x201A PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2028 DUP5 DUP3 DUP6 ADD PUSH2 0x1E82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x206F DUP3 PUSH2 0x1D90 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x208E JUMPI PUSH2 0x208D PUSH2 0x2039 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20A0 PUSH2 0x1DF8 JUMP JUMPDEST SWAP1 POP PUSH2 0x20AC DUP3 DUP3 PUSH2 0x2066 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x2039 JUMP JUMPDEST JUMPDEST PUSH2 0x20D4 DUP3 PUSH2 0x1D90 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2101 PUSH2 0x20FC DUP5 PUSH2 0x20B1 JUMP JUMPDEST PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x211D JUMPI PUSH2 0x211C PUSH2 0x2035 JUMP JUMPDEST JUMPDEST PUSH2 0x2128 DUP5 DUP3 DUP6 PUSH2 0x20E1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2144 JUMPI PUSH2 0x2143 PUSH2 0x2031 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2154 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2173 JUMPI PUSH2 0x2172 PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2180 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A1 JUMPI PUSH2 0x21A0 PUSH2 0x1E05 JUMP JUMPDEST JUMPDEST PUSH2 0x21AD DUP6 DUP3 DUP7 ADD PUSH2 0x2130 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21C9 DUP2 PUSH2 0x21B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x21C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21FE JUMPI PUSH2 0x21FD PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x220B DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x221C DUP6 DUP3 DUP7 ADD PUSH2 0x1E4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x226A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x227D JUMPI PUSH2 0x227C PUSH2 0x2226 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657273206172652064697361626C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22B7 PUSH1 0x16 DUP4 PUSH2 0x1D72 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C2 DUP3 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22E4 DUP2 PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x236D JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x2349 JUMPI PUSH2 0x2348 PUSH2 0x22EB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x2358 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x2366 DUP6 PUSH2 0x2318 JUMP JUMPDEST SWAP5 POP PUSH2 0x232D JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2385 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2440 JUMP JUMPDEST DUP2 PUSH2 0x2392 JUMPI PUSH0 SWAP1 POP PUSH2 0x2440 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x23A8 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x23B2 JUMPI PUSH2 0x23E1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2440 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x23C4 JUMPI PUSH2 0x23C3 PUSH2 0x22EB JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x23DB JUMPI PUSH2 0x23DA PUSH2 0x22EB JUMP JUMPDEST JUMPDEST POP PUSH2 0x2440 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2416 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2411 JUMPI PUSH2 0x2410 PUSH2 0x22EB JUMP JUMPDEST JUMPDEST PUSH2 0x2440 JUMP JUMPDEST PUSH2 0x2423 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x2324 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x243A JUMPI PUSH2 0x2439 PUSH2 0x22EB JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2451 DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP2 POP PUSH2 0x245C DUP4 PUSH2 0x1FAA JUMP JUMPDEST SWAP3 POP PUSH2 0x2489 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2376 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x249B DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP2 POP PUSH2 0x24A6 DUP4 PUSH2 0x1E63 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x24B4 DUP2 PUSH2 0x1E63 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x24CB JUMPI PUSH2 0x24CA PUSH2 0x22EB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2511 PUSH2 0x250C PUSH2 0x2507 DUP5 PUSH2 0x24D2 JUMP JUMPDEST PUSH2 0x24EE JUMP JUMPDEST PUSH2 0x24DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2521 DUP2 PUSH2 0x24F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x253A PUSH0 DUP4 ADD DUP5 PUSH2 0x2518 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2549 DUP2 PUSH2 0x21B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2553 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2564 DUP2 PUSH2 0x2540 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x257F JUMPI PUSH2 0x257E PUSH2 0x1E01 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x258C DUP5 DUP3 DUP6 ADD PUSH2 0x2556 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25A8 PUSH0 DUP4 ADD DUP7 PUSH2 0x1FDE JUMP JUMPDEST PUSH2 0x25B5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F32 JUMP JUMPDEST PUSH2 0x25C2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1F32 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25D4 DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP2 POP PUSH2 0x25DF DUP4 PUSH2 0x1E63 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25F7 JUMPI PUSH2 0x25F6 PUSH2 0x22EB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2659 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x261E JUMP JUMPDEST PUSH2 0x2663 DUP7 DUP4 PUSH2 0x261E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2695 PUSH2 0x2690 PUSH2 0x268B DUP5 PUSH2 0x1E63 JUMP JUMPDEST PUSH2 0x24EE JUMP JUMPDEST PUSH2 0x1E63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26AE DUP4 PUSH2 0x267B JUMP JUMPDEST PUSH2 0x26C2 PUSH2 0x26BA DUP3 PUSH2 0x269C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x262A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x26D6 PUSH2 0x26CA JUMP JUMPDEST PUSH2 0x26E1 DUP2 DUP5 DUP5 PUSH2 0x26A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2704 JUMPI PUSH2 0x26F9 PUSH0 DUP3 PUSH2 0x26CE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x26E7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2749 JUMPI PUSH2 0x271A DUP2 PUSH2 0x25FD JUMP JUMPDEST PUSH2 0x2723 DUP5 PUSH2 0x260F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2732 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2746 PUSH2 0x273E DUP6 PUSH2 0x260F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x26E6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2769 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x274E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2781 DUP4 DUP4 PUSH2 0x275A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x279A DUP3 PUSH2 0x1D68 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27B3 JUMPI PUSH2 0x27B2 PUSH2 0x2039 JUMP JUMPDEST JUMPDEST PUSH2 0x27BD DUP3 SLOAD PUSH2 0x2253 JUMP JUMPDEST PUSH2 0x27C8 DUP3 DUP3 DUP6 PUSH2 0x2708 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x27F9 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x27E7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x27F1 DUP6 DUP3 PUSH2 0x2776 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2858 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2807 DUP7 PUSH2 0x25FD JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x282E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2809 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x284B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2847 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x275A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x287E DUP3 PUSH2 0x2860 JUMP JUMPDEST PUSH2 0x2888 DUP2 DUP6 PUSH2 0x286A JUMP JUMPDEST SWAP4 POP PUSH2 0x2898 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D82 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28AF DUP3 DUP5 PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F CALLDATASIZE 0xAB 0xD7 0xB7 0xC0 PUSH32 0xBA378EC97A0783C549E997CAAA8F0DB082C82613FC84813A1664736F6C634300 ADDMOD BYTE STOP CALLER ",
              "sourceMap": "475:1997:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1374:122:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4191:152:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1228:138:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2314:155;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4049:82:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1639:339:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;676:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;931:87:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4158:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;712:30:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;601:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4401:171:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;1334:158:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1102:118:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3268:148:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2171:135:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;873:221:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5003:195:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1504:126:14;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;636:33:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3011:144:3;3056:13;3081:22;3106:18;:16;:18::i;:::-;3081:43;;3141:1;:7;;3134:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;5594:13;5610:12;:10;:12::i;:::-;5594:28;;5632:31;5641:5;5648:7;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;:::o;1374:122:14:-;2334:13:0;:11;:13::i;:::-;1473:15:14::1;1456:14;;:32;;;;;;;;;;;;;;;;;;1374:122:::0;:::o;4191:152:3:-;4243:7;4262:22;4287:18;:16;:18::i;:::-;4262:43;;4322:1;:14;;;4315:21;;;4191:152;:::o;1228:138:14:-;2334:13:0;:11;:13::i;:::-;1339:19:14::1;1318:18;;:40;;;;;;;;;;;;;;;;;;1228:138:::0;:::o;2314:155::-;2412:4;2429:32;;;;;;;;;;:::i;:::-;;;;;;;;4049:82:3;4098:5;4122:2;4115:9;;4049:82;:::o;1639:339:14:-;1894:36;1900:2;1918:10;:8;:10::i;:::-;1914:2;:14;;;;:::i;:::-;1904:6;:25;;;;:::i;:::-;1894:5;:36::i;:::-;1959:2;1948:22;;;1963:6;1948:22;;;;;;:::i;:::-;;;;;;;;1639:339;;:::o;676:29::-;;;;;;;;;;;;;:::o;931:87:4:-;985:26;991:12;:10;:12::i;:::-;1005:5;985;:26::i;:::-;931:87;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;1327:66:8::1;3800:32:2;;3793:39;;3705:134:::0;:::o;712:30:14:-;;;;;;;;;;;;;:::o;601:28::-;;;;;;;;;;;;:::o;4401:171:3:-;4466:7;4485:22;4510:18;:16;:18::i;:::-;4485:43;;4545:1;:11;;:20;4557:7;4545:20;;;;;;;;;;;;;;;;4538:27;;;4401:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1334:158:4:-;1409:45;1425:7;1434:12;:10;:12::i;:::-;1448:5;1409:15;:45::i;:::-;1464:21;1470:7;1479:5;1464;:21::i;:::-;1334:158;;:::o;1102:118:14:-;2334:13:0;:11;:13::i;:::-;1198:14:14::1;1182:13;::::0;:30:::1;;;;;;;;;;;;;;;;;;1102:118:::0;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;3268:148:3:-;3315:13;3340:22;3365:18;:16;:18::i;:::-;3340:43;;3400:1;:9;;3393:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:148;:::o;2171:135:14:-;2249:4;2266:32;;;;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;;;;;;;:::o;873:221:14:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;945:34:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:34::i;:::-;990:22;:20;:22::i;:::-;1023:28;1038:12;1023:14;:28::i;:::-;1062:24;:22;:24::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;873:221:14;:::o;5003:195:3:-;5083:7;5102:22;5127:18;:16;:18::i;:::-;5102:43;;5162:1;:13;;:20;5176:5;5162:20;;;;;;;;;;;;;;;:29;5183:7;5162:29;;;;;;;;;;;;;;;;5155:36;;;5003:195;;;;:::o;1504:126:14:-;2334:13:0;:11;:13::i;:::-;1606:16:14::1;1588:15;;:34;;;;;;;;;;;;;;;;;;1504:126:::0;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;636:33:14:-;;;;;;;;;;;;;:::o;2242:153:3:-;2292:22;2359:20;2349:30;;2242:153;:::o;887:96:5:-;940:7;966:10;959:17;;887:96;:::o;10264:128:3:-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;8996:208:3:-;9085:1;9066:21;;:7;:21;;;9062:91;;9139:1;9110:32;;;;;;;;;;;:::i;:::-;;;;;;;;9062:91;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;:::-;8996:208;;:::o;9522:206::-;9611:1;9592:21;;:7;:21;;;9588:89;;9663:1;9636:30;;;;;;;;;;;:::i;:::-;;;;;;;;9588:89;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;:::-;9522:206;;:::o;4599:312:2:-;4688:6;4671:23;;4679:4;4671:23;;;:120;;;;4785:6;4749:42;;:32;:30;:32::i;:::-;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4654:251;4599:312::o;1986:116:14:-;2334:13:0;:11;:13::i;:::-;1986:116:14;:::o;6052:538:2:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6555:17;6513:60;;;;;;;;;;;:::i;:::-;;;;;;;;6147:437;1327:66:8;6253:32:2;;6245:4;:40;6241:120;;6341:4;6312:34;;;;;;;;;;;:::i;:::-;;;;;;;;6241:120;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5111:6;5094:23;;5102:4;5094:23;;;5090:145;;5195:29;;;;;;;;;;;;;;5090:145;5028:213::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;11993:477:3:-;12092:24;12119:25;12129:5;12136:7;12119:9;:25::i;:::-;12092:52;;12178:17;12158:16;:37;12154:310;;12234:5;12215:16;:24;12211:130;;;12293:7;12302:16;12320:5;12266:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;12211:130;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12154:310;12082:388;11993:477;;;:::o;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2577:147:3:-;6931:20:1;:18;:20::i;:::-;2679:38:3::1;2702:5;2709:7;2679:22;:38::i;:::-;2577:147:::0;;:::o;666:65:4:-;6931:20:1;:18;:20::i;:::-;666:65:4:o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2968:67:2:-;6931:20:1;:18;:20::i;:::-;2968:67:2:o;11224:487:3:-;11332:22;11357:18;:16;:18::i;:::-;11332:43;;11406:1;11389:19;;:5;:19;;;11385:89;;11460:1;11431:32;;;;;;;;;;;:::i;:::-;;;;;;;;11385:89;11506:1;11487:21;;:7;:21;;;11483:90;;11559:1;11531:31;;;;;;;;;;;:::i;:::-;;;;;;;;11483:90;11614:5;11582:1;:13;;:20;11596:5;11582:20;;;;;;;;;;;;;;;:29;11603:7;11582:29;;;;;;;;;;;;;;;:37;;;;11633:9;11629:76;;;11679:7;11663:31;;11672:5;11663:31;;;11688:5;11663:31;;;;;;:::i;:::-;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;7483:1170::-;7568:22;7593:18;:16;:18::i;:::-;7568:43;;7641:1;7625:18;;:4;:18;;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7621:546;;;7815:19;7837:1;:11;;:17;7849:4;7837:17;;;;;;;;;;;;;;;;7815:39;;7886:5;7872:11;:19;7868:115;;;7943:4;7949:11;7962:5;7918:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7868:115;8137:5;8123:11;:19;8103:1;:11;;:17;8115:4;8103:17;;;;;;;;;;;;;;;:39;;;;7801:366;7621:546;8195:1;8181:16;;:2;:16;;;8177:429;;8362:5;8344:1;:14;;;:23;;;;;;;;;;;8177:429;;;8576:5;8557:1;:11;;:15;8569:2;8557:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;8177:429;8636:2;8621:25;;8630:4;8621:25;;;8640:5;8621:25;;;;;;:::i;:::-;;;;;;;;7558:1095;7483:1170;;;:::o;1957:138:8:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2730:216:3:-;6931:20:1;:18;:20::i;:::-;2842:22:3::1;2867:18;:16;:18::i;:::-;2842:43;;2905:5;2895:1;:7;;:15;;;;;;:::i;:::-;;2932:7;2920:1;:9;;:19;;;;;;:::i;:::-;;2832:114;2730:216:::0;;:::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1684:190:13:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:8:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:12:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:8:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4625:582:12:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:99:15;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:117::-;5877:1;5874;5867:12;5891:117;6000:1;5997;5990:12;6014:180;6062:77;6059:1;6052:88;6159:4;6156:1;6149:15;6183:4;6180:1;6173:15;6200:281;6283:27;6305:4;6283:27;:::i;:::-;6275:6;6271:40;6413:6;6401:10;6398:22;6377:18;6365:10;6362:34;6359:62;6356:88;;;6424:18;;:::i;:::-;6356:88;6464:10;6460:2;6453:22;6243:238;6200:281;;:::o;6487:129::-;6521:6;6548:20;;:::i;:::-;6538:30;;6577:33;6605:4;6597:6;6577:33;:::i;:::-;6487:129;;;:::o;6622:307::-;6683:4;6773:18;6765:6;6762:30;6759:56;;;6795:18;;:::i;:::-;6759:56;6833:29;6855:6;6833:29;:::i;:::-;6825:37;;6917:4;6911;6907:15;6899:23;;6622:307;;;:::o;6935:148::-;7033:6;7028:3;7023;7010:30;7074:1;7065:6;7060:3;7056:16;7049:27;6935:148;;;:::o;7089:423::-;7166:5;7191:65;7207:48;7248:6;7207:48;:::i;:::-;7191:65;:::i;:::-;7182:74;;7279:6;7272:5;7265:21;7317:4;7310:5;7306:16;7355:3;7346:6;7341:3;7337:16;7334:25;7331:112;;;7362:79;;:::i;:::-;7331:112;7452:54;7499:6;7494:3;7489;7452:54;:::i;:::-;7172:340;7089:423;;;;;:::o;7531:338::-;7586:5;7635:3;7628:4;7620:6;7616:17;7612:27;7602:122;;7643:79;;:::i;:::-;7602:122;7760:6;7747:20;7785:78;7859:3;7851:6;7844:4;7836:6;7832:17;7785:78;:::i;:::-;7776:87;;7592:277;7531:338;;;;:::o;7875:652::-;7952:6;7960;8009:2;7997:9;7988:7;7984:23;7980:32;7977:119;;;8015:79;;:::i;:::-;7977:119;8135:1;8160:53;8205:7;8196:6;8185:9;8181:22;8160:53;:::i;:::-;8150:63;;8106:117;8290:2;8279:9;8275:18;8262:32;8321:18;8313:6;8310:30;8307:117;;;8343:79;;:::i;:::-;8307:117;8448:62;8502:7;8493:6;8482:9;8478:22;8448:62;:::i;:::-;8438:72;;8233:287;7875:652;;;;;:::o;8533:77::-;8570:7;8599:5;8588:16;;8533:77;;;:::o;8616:118::-;8703:24;8721:5;8703:24;:::i;:::-;8698:3;8691:37;8616:118;;:::o;8740:222::-;8833:4;8871:2;8860:9;8856:18;8848:26;;8884:71;8952:1;8941:9;8937:17;8928:6;8884:71;:::i;:::-;8740:222;;;;:::o;8968:474::-;9036:6;9044;9093:2;9081:9;9072:7;9068:23;9064:32;9061:119;;;9099:79;;:::i;:::-;9061:119;9219:1;9244:53;9289:7;9280:6;9269:9;9265:22;9244:53;:::i;:::-;9234:63;;9190:117;9346:2;9372:53;9417:7;9408:6;9397:9;9393:22;9372:53;:::i;:::-;9362:63;;9317:118;8968:474;;;;;:::o;9448:180::-;9496:77;9493:1;9486:88;9593:4;9590:1;9583:15;9617:4;9614:1;9607:15;9634:320;9678:6;9715:1;9709:4;9705:12;9695:22;;9762:1;9756:4;9752:12;9783:18;9773:81;;9839:4;9831:6;9827:17;9817:27;;9773:81;9901:2;9893:6;9890:14;9870:18;9867:38;9864:84;;9920:18;;:::i;:::-;9864:84;9685:269;9634:320;;;:::o;9960:172::-;10100:24;10096:1;10088:6;10084:14;10077:48;9960:172;:::o;10138:366::-;10280:3;10301:67;10365:2;10360:3;10301:67;:::i;:::-;10294:74;;10377:93;10466:3;10377:93;:::i;:::-;10495:2;10490:3;10486:12;10479:19;;10138:366;;;:::o;10510:419::-;10676:4;10714:2;10703:9;10699:18;10691:26;;10763:9;10757:4;10753:20;10749:1;10738:9;10734:17;10727:47;10791:131;10917:4;10791:131;:::i;:::-;10783:139;;10510:419;;;:::o;10935:180::-;10983:77;10980:1;10973:88;11080:4;11077:1;11070:15;11104:4;11101:1;11094:15;11121:102;11163:8;11210:5;11207:1;11203:13;11182:34;;11121:102;;;:::o;11229:848::-;11290:5;11297:4;11321:6;11312:15;;11345:5;11336:14;;11359:712;11380:1;11370:8;11367:15;11359:712;;;11475:4;11470:3;11466:14;11460:4;11457:24;11454:50;;;11484:18;;:::i;:::-;11454:50;11534:1;11524:8;11520:16;11517:451;;;11949:4;11942:5;11938:16;11929:25;;11517:451;11999:4;11993;11989:15;11981:23;;12029:32;12052:8;12029:32;:::i;:::-;12017:44;;11359:712;;;11229:848;;;;;;;:::o;12083:1073::-;12137:5;12328:8;12318:40;;12349:1;12340:10;;12351:5;;12318:40;12377:4;12367:36;;12394:1;12385:10;;12396:5;;12367:36;12463:4;12511:1;12506:27;;;;12547:1;12542:191;;;;12456:277;;12506:27;12524:1;12515:10;;12526:5;;;12542:191;12587:3;12577:8;12574:17;12571:43;;;12594:18;;:::i;:::-;12571:43;12643:8;12640:1;12636:16;12627:25;;12678:3;12671:5;12668:14;12665:40;;;12685:18;;:::i;:::-;12665:40;12718:5;;;12456:277;;12842:2;12832:8;12829:16;12823:3;12817:4;12814:13;12810:36;12792:2;12782:8;12779:16;12774:2;12768:4;12765:12;12761:35;12745:111;12742:246;;;12898:8;12892:4;12888:19;12879:28;;12933:3;12926:5;12923:14;12920:40;;;12940:18;;:::i;:::-;12920:40;12973:5;;12742:246;13013:42;13051:3;13041:8;13035:4;13032:1;13013:42;:::i;:::-;12998:57;;;;13087:4;13082:3;13078:14;13071:5;13068:25;13065:51;;;13096:18;;:::i;:::-;13065:51;13145:4;13138:5;13134:16;13125:25;;12083:1073;;;;;;:::o;13162:281::-;13220:5;13244:23;13262:4;13244:23;:::i;:::-;13236:31;;13288:25;13304:8;13288:25;:::i;:::-;13276:37;;13332:104;13369:66;13359:8;13353:4;13332:104;:::i;:::-;13323:113;;13162:281;;;;:::o;13449:410::-;13489:7;13512:20;13530:1;13512:20;:::i;:::-;13507:25;;13546:20;13564:1;13546:20;:::i;:::-;13541:25;;13601:1;13598;13594:9;13623:30;13641:11;13623:30;:::i;:::-;13612:41;;13802:1;13793:7;13789:15;13786:1;13783:22;13763:1;13756:9;13736:83;13713:139;;13832:18;;:::i;:::-;13713:139;13497:362;13449:410;;;;:::o;13865:85::-;13910:7;13939:5;13928:16;;13865:85;;;:::o;13956:101::-;13992:7;14032:18;14025:5;14021:30;14010:41;;13956:101;;;:::o;14063:60::-;14091:3;14112:5;14105:12;;14063:60;;;:::o;14129:156::-;14186:9;14219:60;14236:42;14245:32;14271:5;14245:32;:::i;:::-;14236:42;:::i;:::-;14219:60;:::i;:::-;14206:73;;14129:156;;;:::o;14291:145::-;14385:44;14423:5;14385:44;:::i;:::-;14380:3;14373:57;14291:145;;:::o;14442:236::-;14542:4;14580:2;14569:9;14565:18;14557:26;;14593:78;14668:1;14657:9;14653:17;14644:6;14593:78;:::i;:::-;14442:236;;;;:::o;14684:122::-;14757:24;14775:5;14757:24;:::i;:::-;14750:5;14747:35;14737:63;;14796:1;14793;14786:12;14737:63;14684:122;:::o;14812:143::-;14869:5;14900:6;14894:13;14885:22;;14916:33;14943:5;14916:33;:::i;:::-;14812:143;;;;:::o;14961:351::-;15031:6;15080:2;15068:9;15059:7;15055:23;15051:32;15048:119;;;15086:79;;:::i;:::-;15048:119;15206:1;15231:64;15287:7;15278:6;15267:9;15263:22;15231:64;:::i;:::-;15221:74;;15177:128;14961:351;;;;:::o;15318:442::-;15467:4;15505:2;15494:9;15490:18;15482:26;;15518:71;15586:1;15575:9;15571:17;15562:6;15518:71;:::i;:::-;15599:72;15667:2;15656:9;15652:18;15643:6;15599:72;:::i;:::-;15681;15749:2;15738:9;15734:18;15725:6;15681:72;:::i;:::-;15318:442;;;;;;:::o;15766:191::-;15806:3;15825:20;15843:1;15825:20;:::i;:::-;15820:25;;15859:20;15877:1;15859:20;:::i;:::-;15854:25;;15902:1;15899;15895:9;15888:16;;15923:3;15920:1;15917:10;15914:36;;;15930:18;;:::i;:::-;15914:36;15766:191;;;;:::o;15963:141::-;16012:4;16035:3;16027:11;;16058:3;16055:1;16048:14;16092:4;16089:1;16079:18;16071:26;;15963:141;;;:::o;16110:93::-;16147:6;16194:2;16189;16182:5;16178:14;16174:23;16164:33;;16110:93;;;:::o;16209:107::-;16253:8;16303:5;16297:4;16293:16;16272:37;;16209:107;;;;:::o;16322:393::-;16391:6;16441:1;16429:10;16425:18;16464:97;16494:66;16483:9;16464:97;:::i;:::-;16582:39;16612:8;16601:9;16582:39;:::i;:::-;16570:51;;16654:4;16650:9;16643:5;16639:21;16630:30;;16703:4;16693:8;16689:19;16682:5;16679:30;16669:40;;16398:317;;16322:393;;;;;:::o;16721:142::-;16771:9;16804:53;16822:34;16831:24;16849:5;16831:24;:::i;:::-;16822:34;:::i;:::-;16804:53;:::i;:::-;16791:66;;16721:142;;;:::o;16869:75::-;16912:3;16933:5;16926:12;;16869:75;;;:::o;16950:269::-;17060:39;17091:7;17060:39;:::i;:::-;17121:91;17170:41;17194:16;17170:41;:::i;:::-;17162:6;17155:4;17149:11;17121:91;:::i;:::-;17115:4;17108:105;17026:193;16950:269;;;:::o;17225:73::-;17270:3;17225:73;:::o;17304:189::-;17381:32;;:::i;:::-;17422:65;17480:6;17472;17466:4;17422:65;:::i;:::-;17357:136;17304:189;;:::o;17499:186::-;17559:120;17576:3;17569:5;17566:14;17559:120;;;17630:39;17667:1;17660:5;17630:39;:::i;:::-;17603:1;17596:5;17592:13;17583:22;;17559:120;;;17499:186;;:::o;17691:543::-;17792:2;17787:3;17784:11;17781:446;;;17826:38;17858:5;17826:38;:::i;:::-;17910:29;17928:10;17910:29;:::i;:::-;17900:8;17896:44;18093:2;18081:10;18078:18;18075:49;;;18114:8;18099:23;;18075:49;18137:80;18193:22;18211:3;18193:22;:::i;:::-;18183:8;18179:37;18166:11;18137:80;:::i;:::-;17796:431;;17781:446;17691:543;;;:::o;18240:117::-;18294:8;18344:5;18338:4;18334:16;18313:37;;18240:117;;;;:::o;18363:169::-;18407:6;18440:51;18488:1;18484:6;18476:5;18473:1;18469:13;18440:51;:::i;:::-;18436:56;18521:4;18515;18511:15;18501:25;;18414:118;18363:169;;;;:::o;18537:295::-;18613:4;18759:29;18784:3;18778:4;18759:29;:::i;:::-;18751:37;;18821:3;18818:1;18814:11;18808:4;18805:21;18797:29;;18537:295;;;;:::o;18837:1395::-;18954:37;18987:3;18954:37;:::i;:::-;19056:18;19048:6;19045:30;19042:56;;;19078:18;;:::i;:::-;19042:56;19122:38;19154:4;19148:11;19122:38;:::i;:::-;19207:67;19267:6;19259;19253:4;19207:67;:::i;:::-;19301:1;19325:4;19312:17;;19357:2;19349:6;19346:14;19374:1;19369:618;;;;20031:1;20048:6;20045:77;;;20097:9;20092:3;20088:19;20082:26;20073:35;;20045:77;20148:67;20208:6;20201:5;20148:67;:::i;:::-;20142:4;20135:81;20004:222;19339:887;;19369:618;19421:4;19417:9;19409:6;19405:22;19455:37;19487:4;19455:37;:::i;:::-;19514:1;19528:208;19542:7;19539:1;19536:14;19528:208;;;19621:9;19616:3;19612:19;19606:26;19598:6;19591:42;19672:1;19664:6;19660:14;19650:24;;19719:2;19708:9;19704:18;19691:31;;19565:4;19562:1;19558:12;19553:17;;19528:208;;;19764:6;19755:7;19752:19;19749:179;;;19822:9;19817:3;19813:19;19807:26;19865:48;19907:4;19899:6;19895:17;19884:9;19865:48;:::i;:::-;19857:6;19850:64;19772:156;19749:179;19974:1;19970;19962:6;19958:14;19954:22;19948:4;19941:36;19376:611;;;19339:887;;18929:1303;;;18837:1395;;:::o;20238:98::-;20289:6;20323:5;20317:12;20307:22;;20238:98;;;:::o;20342:147::-;20443:11;20480:3;20465:18;;20342:147;;;;:::o;20495:386::-;20599:3;20627:38;20659:5;20627:38;:::i;:::-;20681:88;20762:6;20757:3;20681:88;:::i;:::-;20674:95;;20778:65;20836:6;20831:3;20824:4;20817:5;20813:16;20778:65;:::i;:::-;20868:6;20863:3;20859:16;20852:23;;20603:278;20495:386;;;;:::o;20887:271::-;21017:3;21039:93;21128:3;21119:6;21039:93;:::i;:::-;21032:100;;21149:3;21142:10;;20887:271;;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2096000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "UPGRADE_INTERFACE_VERSION()": "infinite",
                "allowance(address,address)": "infinite",
                "approve(address,uint256)": "infinite",
                "balanceOf(address)": "2949",
                "battleContract()": "2598",
                "burn(uint256)": "infinite",
                "burnFrom(address,uint256)": "infinite",
                "dailyCheckContract()": "2618",
                "decimals()": "384",
                "exploreContract()": "2619",
                "initialize(address)": "infinite",
                "mint(address,uint256)": "infinite",
                "name()": "infinite",
                "owner()": "2656",
                "proxiableUUID()": "infinite",
                "questContract()": "2551",
                "renounceOwnership()": "infinite",
                "setBattleContract(address)": "infinite",
                "setDailyCheckContract(address)": "infinite",
                "setExploreContract(address)": "infinite",
                "setQuestContract(address)": "infinite",
                "symbol()": "infinite",
                "totalSupply()": "2575",
                "transfer(address,uint256)": "948",
                "transferFrom(address,address,uint256)": "infinite",
                "transferOwnership(address)": "infinite",
                "upgradeToAndCall(address,bytes)": "infinite"
              },
              "internal": {
                "_authorizeUpgrade(address)": "infinite"
              }
            },
            "legacyAssembly": {
              ".code": [
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "PUSH",
                  "source": 14,
                  "value": "A0"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "PUSH",
                  "source": 14,
                  "value": "40"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "MSTORE",
                  "source": 14
                },
                {
                  "begin": 1171,
                  "end": 1175,
                  "name": "ADDRESS",
                  "source": 2
                },
                {
                  "begin": 1128,
                  "end": 1176,
                  "name": "PUSH",
                  "source": 2,
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 1128,
                  "end": 1176,
                  "name": "AND",
                  "source": 2
                },
                {
                  "begin": 1128,
                  "end": 1176,
                  "name": "PUSH",
                  "source": 2,
                  "value": "80"
                },
                {
                  "begin": 1128,
                  "end": 1176,
                  "name": "SWAP1",
                  "source": 2
                },
                {
                  "begin": 1128,
                  "end": 1176,
                  "name": "PUSH",
                  "source": 2,
                  "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 1128,
                  "end": 1176,
                  "name": "AND",
                  "source": 2
                },
                {
                  "begin": 1128,
                  "end": 1176,
                  "name": "DUP2",
                  "source": 2
                },
                {
                  "begin": 1128,
                  "end": 1176,
                  "name": "MSTORE",
                  "source": 2
                },
                {
                  "begin": 1128,
                  "end": 1176,
                  "name": "POP",
                  "source": 2
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "CALLVALUE",
                  "source": 14
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "DUP1",
                  "source": 14
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "ISZERO",
                  "source": 14
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "PUSH [tag]",
                  "source": 14,
                  "value": "1"
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "JUMPI",
                  "source": 14
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "PUSH",
                  "source": 14,
                  "value": "0"
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "DUP1",
                  "source": 14
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "REVERT",
                  "source": 14
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "tag",
                  "source": 14,
                  "value": "1"
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "JUMPDEST",
                  "source": 14
                },
                {
                  "begin": 812,
                  "end": 867,
                  "name": "POP",
                  "source": 14
                },
                {
                  "begin": 837,
                  "end": 859,
                  "name": "PUSH [tag]",
                  "source": 14,
                  "value": "4"
                },
                {
                  "begin": 837,
                  "end": 857,
                  "name": "PUSH [tag]",
                  "source": 14,
                  "value": "5"
                },
                {
                  "begin": 837,
                  "end": 857,
                  "name": "PUSH",
                  "source": 14,
                  "value": "20"
                },
                {
                  "begin": 837,
                  "end": 857,
                  "name": "SHL",
                  "source": 14
                },
                {
                  "begin": 837,
                  "end": 859,
                  "name": "PUSH",
                  "source": 14,
                  "value": "20"
                },
                {
                  "begin": 837,
                  "end": 859,
                  "name": "SHR",
                  "source": 14
                },
                {
                  "begin": 837,
                  "end": 859,
                  "jumpType": "[in]",
                  "name": "JUMP",
                  "source": 14
                },
                {
                  "begin": 837,
                  "end": 859,
                  "name": "tag",
                  "source": 14,
                  "value": "4"
                },
                {
                  "begin": 837,
                  "end": 859,
                  "name": "JUMPDEST",
                  "source": 14
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "PUSH [tag]",
                  "source": 14,
                  "value": "6"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "JUMP",
                  "source": 14
                },
                {
                  "begin": 7711,
                  "end": 8133,
                  "name": "tag",
                  "source": 1,
                  "value": "5"
                },
                {
                  "begin": 7711,
                  "end": 8133,
                  "name": "JUMPDEST",
                  "source": 1
                },
                {
                  "begin": 7826,
                  "end": 7856,
                  "name": "PUSH",
                  "source": 1,
                  "value": "0"
                },
                {
                  "begin": 7859,
                  "end": 7885,
                  "name": "PUSH [tag]",
                  "source": 1,
                  "value": "8"
                },
                {
                  "begin": 7859,
                  "end": 7883,
                  "name": "PUSH [tag]",
                  "source": 1,
                  "value": "9"
                },
                {
                  "begin": 7859,
                  "end": 7883,
                  "name": "PUSH",
                  "source": 1,
                  "value": "20"
                },
                {
                  "begin": 7859,
                  "end": 7883,
                  "name": "SHL",
                  "source": 1
                },
                {
                  "begin": 7859,
                  "end": 7885,
                  "name": "PUSH",
                  "source": 1,
                  "value": "20"
                },
                {
                  "begin": 7859,
                  "end": 7885,
                  "name": "SHR",
                  "source": 1
                },
                {
                  "begin": 7859,
                  "end": 7885,
                  "jumpType": "[in]",
                  "name": "JUMP",
                  "source": 1
                },
                {
                  "begin": 7859,
                  "end": 7885,
                  "name": "tag",
                  "source": 1,
                  "value": "8"
                },
                {
                  "begin": 7859,
                  "end": 7885,
                  "name": "JUMPDEST",
                  "source": 1
                },
                {
                  "begin": 7826,
                  "end": 7885,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 7826,
                  "end": 7885,
                  "name": "POP",
                  "source": 1
                },
                {
                  "begin": 7900,
                  "end": 7901,
                  "name": "DUP1",
                  "source": 1
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "PUSH",
                  "source": 1,
                  "value": "0"
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "ADD",
                  "source": 1
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "PUSH",
                  "source": 1,
                  "value": "8"
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "SLOAD",
                  "source": 1
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "PUSH",
                  "source": 1,
                  "value": "100"
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "EXP",
                  "source": 1
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "DIV",
                  "source": 1
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "PUSH",
                  "source": 1,
                  "value": "FF"
                },
                {
                  "begin": 7900,
                  "end": 7915,
                  "name": "AND",
                  "source": 1
                },
                {
                  "begin": 7896,
                  "end": 7972,
                  "name": "ISZERO",
                  "source": 1
                },
                {
                  "begin": 7896,
                  "end": 7972,
                  "name": "PUSH [tag]",
                  "source": 1,
                  "value": "10"
                },
                {
                  "begin": 7896,
                  "end": 7972,
                  "name": "JUMPI",
                  "source": 1
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "PUSH",
                  "source": 1,
                  "value": "40"
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "MLOAD",
                  "source": 1
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "PUSH",
                  "source": 1,
                  "value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "DUP2",
                  "source": 1
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "MSTORE",
                  "source": 1
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "PUSH",
                  "source": 1,
                  "value": "4"
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "ADD",
                  "source": 1
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "PUSH",
                  "source": 1,
                  "value": "40"
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "MLOAD",
                  "source": 1
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "DUP1",
                  "source": 1
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "SWAP2",
                  "source": 1
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "SUB",
                  "source": 1
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 7938,
                  "end": 7961,
                  "name": "REVERT",
                  "source": 1
                },
                {
                  "begin": 7896,
                  "end": 7972,
                  "name": "tag",
                  "source": 1,
                  "value": "10"
                },
                {
                  "begin": 7896,
                  "end": 7972,
                  "name": "JUMPDEST",
                  "source": 1
                },
                {
                  "begin": 8003,
                  "end": 8019,
                  "name": "PUSH",
                  "source": 1,
                  "value": "FFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 7985,
                  "end": 8019,
                  "name": "DUP1",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 8019,
                  "name": "AND",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 7986,
                  "name": "DUP2",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "PUSH",
                  "source": 1,
                  "value": "0"
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "ADD",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "PUSH",
                  "source": 1,
                  "value": "0"
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "SLOAD",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "PUSH",
                  "source": 1,
                  "value": "100"
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "EXP",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "DIV",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "PUSH",
                  "source": 1,
                  "value": "FFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 7985,
                  "end": 7999,
                  "name": "AND",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 8019,
                  "name": "PUSH",
                  "source": 1,
                  "value": "FFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 7985,
                  "end": 8019,
                  "name": "AND",
                  "source": 1
                },
                {
                  "begin": 7985,
                  "end": 8019,
                  "name": "EQ",
                  "source": 1
                },
                {
                  "begin": 7981,
                  "end": 8127,
                  "name": "PUSH [tag]",
                  "source": 1,
                  "value": "11"
                },
                {
                  "begin": 7981,
                  "end": 8127,
                  "name": "JUMPI",
                  "source": 1
                },
                {
                  "begin": 8052,
                  "end": 8068,
                  "name": "PUSH",
                  "source": 1,
                  "value": "FFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 8035,
                  "end": 8036,
                  "name": "DUP2",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8049,
                  "name": "PUSH",
                  "source": 1,
                  "value": "0"
                },
                {
                  "begin": 8035,
                  "end": 8049,
                  "name": "ADD",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8049,
                  "name": "PUSH",
                  "source": 1,
                  "value": "0"
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "PUSH",
                  "source": 1,
                  "value": "100"
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "EXP",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "DUP2",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "SLOAD",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "DUP2",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "PUSH",
                  "source": 1,
                  "value": "FFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "MUL",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "NOT",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "AND",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "DUP4",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "PUSH",
                  "source": 1,
                  "value": "FFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "AND",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "MUL",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "OR",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "SSTORE",
                  "source": 1
                },
                {
                  "begin": 8035,
                  "end": 8068,
                  "name": "POP",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "PUSH",
                  "source": 1,
                  "value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
                },
                {
                  "begin": 8099,
                  "end": 8115,
                  "name": "PUSH",
                  "source": 1,
                  "value": "FFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "PUSH",
                  "source": 1,
                  "value": "40"
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "MLOAD",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "PUSH [tag]",
                  "source": 1,
                  "value": "12"
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "SWAP2",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "PUSH [tag]",
                  "source": 1,
                  "value": "13"
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "jumpType": "[in]",
                  "name": "JUMP",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "tag",
                  "source": 1,
                  "value": "12"
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "JUMPDEST",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "PUSH",
                  "source": 1,
                  "value": "40"
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "MLOAD",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "DUP1",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "SWAP2",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "SUB",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 8087,
                  "end": 8116,
                  "name": "LOG1",
                  "source": 1
                },
                {
                  "begin": 7981,
                  "end": 8127,
                  "name": "tag",
                  "source": 1,
                  "value": "11"
                },
                {
                  "begin": 7981,
                  "end": 8127,
                  "name": "JUMPDEST",
                  "source": 1
                },
                {
                  "begin": 7760,
                  "end": 8133,
                  "name": "POP",
                  "source": 1
                },
                {
                  "begin": 7711,
                  "end": 8133,
                  "jumpType": "[out]",
                  "name": "JUMP",
                  "source": 1
                },
                {
                  "begin": 8737,
                  "end": 8907,
                  "name": "tag",
                  "source": 1,
                  "value": "9"
                },
                {
                  "begin": 8737,
                  "end": 8907,
                  "name": "JUMPDEST",
                  "source": 1
                },
                {
                  "begin": 8795,
                  "end": 8825,
                  "name": "PUSH",
                  "source": 1,
                  "value": "0"
                },
                {
                  "begin": 8870,
                  "end": 8891,
                  "name": "PUSH",
                  "source": 1,
                  "value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
                },
                {
                  "begin": 8860,
                  "end": 8891,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 8860,
                  "end": 8891,
                  "name": "POP",
                  "source": 1
                },
                {
                  "begin": 8737,
                  "end": 8907,
                  "name": "SWAP1",
                  "source": 1
                },
                {
                  "begin": 8737,
                  "end": 8907,
                  "jumpType": "[out]",
                  "name": "JUMP",
                  "source": 1
                },
                {
                  "begin": 7,
                  "end": 108,
                  "name": "tag",
                  "source": 15,
                  "value": "15"
                },
                {
                  "begin": 7,
                  "end": 108,
                  "name": "JUMPDEST",
                  "source": 15
                },
                {
                  "begin": 43,
                  "end": 50,
                  "name": "PUSH",
                  "source": 15,
                  "value": "0"
                },
                {
                  "begin": 83,
                  "end": 101,
                  "name": "PUSH",
                  "source": 15,
                  "value": "FFFFFFFFFFFFFFFF"
                },
                {
                  "begin": 76,
                  "end": 81,
                  "name": "DUP3",
                  "source": 15
                },
                {
                  "begin": 72,
                  "end": 102,
                  "name": "AND",
                  "source": 15
                },
                {
                  "begin": 61,
                  "end": 102,
                  "name": "SWAP1",
                  "source": 15
                },
                {
                  "begin": 61,
                  "end": 102,
                  "name": "POP",
                  "source": 15
                },
                {
                  "begin": 7,
                  "end": 108,
                  "name": "SWAP2",
                  "source": 15
                },
                {
                  "begin": 7,
                  "end": 108,
                  "name": "SWAP1",
                  "source": 15
                },
                {
                  "begin": 7,
                  "end": 108,
                  "name": "POP",
                  "source": 15
                },
                {
                  "begin": 7,
                  "end": 108,
                  "jumpType": "[out]",
                  "name": "JUMP",
                  "source": 15
                },
                {
                  "begin": 114,
                  "end": 229,
                  "name": "tag",
                  "source": 15,
                  "value": "16"
                },
                {
                  "begin": 114,
                  "end": 229,
                  "name": "JUMPDEST",
                  "source": 15
                },
                {
                  "begin": 199,
                  "end": 222,
                  "name": "PUSH [tag]",
                  "source": 15,
                  "value": "20"
                },
                {
                  "begin": 216,
                  "end": 221,
                  "name": "DUP2",
                  "source": 15
                },
                {
                  "begin": 199,
                  "end": 222,
                  "name": "PUSH [tag]",
                  "source": 15,
                  "value": "15"
                },
                {
                  "begin": 199,
                  "end": 222,
                  "jumpType": "[in]",
                  "name": "JUMP",
                  "source": 15
                },
                {
                  "begin": 199,
                  "end": 222,
                  "name": "tag",
                  "source": 15,
                  "value": "20"
                },
                {
                  "begin": 199,
                  "end": 222,
                  "name": "JUMPDEST",
                  "source": 15
                },
                {
                  "begin": 194,
                  "end": 197,
                  "name": "DUP3",
                  "source": 15
                },
                {
                  "begin": 187,
                  "end": 223,
                  "name": "MSTORE",
                  "source": 15
                },
                {
                  "begin": 114,
                  "end": 229,
                  "name": "POP",
                  "source": 15
                },
                {
                  "begin": 114,
                  "end": 229,
                  "name": "POP",
                  "source": 15
                },
                {
                  "begin": 114,
                  "end": 229,
                  "jumpType": "[out]",
                  "name": "JUMP",
                  "source": 15
                },
                {
                  "begin": 235,
                  "end": 453,
                  "name": "tag",
                  "source": 15,
                  "value": "13"
                },
                {
                  "begin": 235,
                  "end": 453,
                  "name": "JUMPDEST",
                  "source": 15
                },
                {
                  "begin": 326,
                  "end": 330,
                  "name": "PUSH",
                  "source": 15,
                  "value": "0"
                },
                {
                  "begin": 364,
                  "end": 366,
                  "name": "PUSH",
                  "source": 15,
                  "value": "20"
                },
                {
                  "begin": 353,
                  "end": 362,
                  "name": "DUP3",
                  "source": 15
                },
                {
                  "begin": 349,
                  "end": 367,
                  "name": "ADD",
                  "source": 15
                },
                {
                  "begin": 341,
                  "end": 367,
                  "name": "SWAP1",
                  "source": 15
                },
                {
                  "begin": 341,
                  "end": 367,
                  "name": "POP",
                  "source": 15
                },
                {
                  "begin": 377,
                  "end": 446,
                  "name": "PUSH [tag]",
                  "source": 15,
                  "value": "22"
                },
                {
                  "begin": 443,
                  "end": 444,
                  "name": "PUSH",
                  "source": 15,
                  "value": "0"
                },
                {
                  "begin": 432,
                  "end": 441,
                  "name": "DUP4",
                  "source": 15
                },
                {
                  "begin": 428,
                  "end": 445,
                  "name": "ADD",
                  "source": 15
                },
                {
                  "begin": 419,
                  "end": 425,
                  "name": "DUP5",
                  "source": 15
                },
                {
                  "begin": 377,
                  "end": 446,
                  "name": "PUSH [tag]",
                  "source": 15,
                  "value": "16"
                },
                {
                  "begin": 377,
                  "end": 446,
                  "jumpType": "[in]",
                  "name": "JUMP",
                  "source": 15
                },
                {
                  "begin": 377,
                  "end": 446,
                  "name": "tag",
                  "source": 15,
                  "value": "22"
                },
                {
                  "begin": 377,
                  "end": 446,
                  "name": "JUMPDEST",
                  "source": 15
                },
                {
                  "begin": 235,
                  "end": 453,
                  "name": "SWAP3",
                  "source": 15
                },
                {
                  "begin": 235,
                  "end": 453,
                  "name": "SWAP2",
                  "source": 15
                },
                {
                  "begin": 235,
                  "end": 453,
                  "name": "POP",
                  "source": 15
                },
                {
                  "begin": 235,
                  "end": 453,
                  "name": "POP",
                  "source": 15
                },
                {
                  "begin": 235,
                  "end": 453,
                  "jumpType": "[out]",
                  "name": "JUMP",
                  "source": 15
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "tag",
                  "source": 14,
                  "value": "6"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "JUMPDEST",
                  "source": 14
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "PUSH",
                  "source": 14,
                  "value": "80"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "MLOAD",
                  "source": 14
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "PUSH #[$]",
                  "source": 14,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "PUSH [$]",
                  "source": 14,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "PUSH",
                  "source": 14,
                  "value": "0"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "CODECOPY",
                  "source": 14
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "PUSH",
                  "source": 14,
                  "value": "0"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "ASSIGNIMMUTABLE",
                  "source": 14,
                  "value": "468"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "PUSH #[$]",
                  "source": 14,
                  "value": "0000000000000000000000000000000000000000000000000000000000000000"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "PUSH",
                  "source": 14,
                  "value": "0"
                },
                {
                  "begin": 475,
                  "end": 2472,
                  "name": "RETURN",
                  "source": 14
                }
              ],
              ".data": {
                "0": {
                  ".auxdata": "a26469706673582212204f36abd7b7c07fba378ec97a0783c549e997caaa8f0db082c82613fc84813a1664736f6c634300081a0033",
                  ".code": [
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "80"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "CALLDATASIZE",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "LT",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "CALLDATALOAD",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "E0"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "SHR",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "6A6940CC"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "GT",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "29"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "A9059CBB"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "GT",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "30"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "DD62ED3E"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "GT",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "31"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "DD62ED3E"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "25"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "E4B8C4D4"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "26"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "F2FDE38B"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "27"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FE5A45D0"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "28"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "tag",
                      "source": 14,
                      "value": "31"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "A9059CBB"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "22"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "AD3CB1CC"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "23"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "C4D66DE8"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "24"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "tag",
                      "source": 14,
                      "value": "30"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "79CC6790"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "GT",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "32"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "79CC6790"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "18"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "7FAE588D"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "19"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "8DA5CB5B"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "20"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "95D89B41"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "21"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "tag",
                      "source": 14,
                      "value": "32"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "6A6940CC"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "15"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "70A08231"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "16"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "715018A6"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "17"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "tag",
                      "source": 14,
                      "value": "29"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "313CE567"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "GT",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "33"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "42966C68"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "GT",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "34"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "42966C68"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "11"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4F1EF286"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "12"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "52D1902D"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "13"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "55CCBFF7"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "14"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "tag",
                      "source": 14,
                      "value": "34"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "313CE567"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "8"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40C10F19"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "9"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "423B1CA3"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "10"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "tag",
                      "source": 14,
                      "value": "33"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "6FDDE03"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "2"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "95EA7B3"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "3"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "DB6DFF7"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "18160DDD"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "5"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "21098461"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "6"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "23B872DD"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "EQ",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "7"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "tag",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 475,
                      "end": 2472,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "tag",
                      "source": 3,
                      "value": "2"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "CALLVALUE",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "35"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "tag",
                      "source": 3,
                      "value": "35"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "36"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "37"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "tag",
                      "source": 3,
                      "value": "36"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "38"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "39"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "tag",
                      "source": 3,
                      "value": "38"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "RETURN",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "tag",
                      "source": 3,
                      "value": "3"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "CALLVALUE",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "tag",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "41"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "CALLDATASIZE",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "42"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "43"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "tag",
                      "source": 3,
                      "value": "42"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "44"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "tag",
                      "source": 3,
                      "value": "41"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "45"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "46"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "tag",
                      "source": 3,
                      "value": "45"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "RETURN",
                      "source": 3
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "tag",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "47"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "tag",
                      "source": 14,
                      "value": "47"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "48"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "CALLDATASIZE",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "49"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "50"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "tag",
                      "source": 14,
                      "value": "49"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "51"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "tag",
                      "source": 14,
                      "value": "48"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "STOP",
                      "source": 14
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "tag",
                      "source": 3,
                      "value": "5"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "CALLVALUE",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "52"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "tag",
                      "source": 3,
                      "value": "52"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "53"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "54"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "tag",
                      "source": 3,
                      "value": "53"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "55"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "56"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "tag",
                      "source": 3,
                      "value": "55"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "RETURN",
                      "source": 3
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "tag",
                      "source": 14,
                      "value": "6"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "57"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "tag",
                      "source": 14,
                      "value": "57"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "58"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "CALLDATASIZE",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "59"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "50"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "tag",
                      "source": 14,
                      "value": "59"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "60"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "tag",
                      "source": 14,
                      "value": "58"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "STOP",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "tag",
                      "source": 14,
                      "value": "7"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "61"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "tag",
                      "source": 14,
                      "value": "61"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "62"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "CALLDATASIZE",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "63"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "64"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "tag",
                      "source": 14,
                      "value": "63"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "65"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "tag",
                      "source": 14,
                      "value": "62"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "66"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "46"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "tag",
                      "source": 14,
                      "value": "66"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "RETURN",
                      "source": 14
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "tag",
                      "source": 3,
                      "value": "8"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "CALLVALUE",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "67"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "tag",
                      "source": 3,
                      "value": "67"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "68"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "69"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "tag",
                      "source": 3,
                      "value": "68"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "70"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "71"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "tag",
                      "source": 3,
                      "value": "70"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "RETURN",
                      "source": 3
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "tag",
                      "source": 14,
                      "value": "9"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "72"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "tag",
                      "source": 14,
                      "value": "72"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "73"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "CALLDATASIZE",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "74"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "43"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "tag",
                      "source": 14,
                      "value": "74"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "75"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "tag",
                      "source": 14,
                      "value": "73"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "STOP",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "tag",
                      "source": 14,
                      "value": "10"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "76"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "tag",
                      "source": 14,
                      "value": "76"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "77"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "78"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "tag",
                      "source": 14,
                      "value": "77"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "79"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "80"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "tag",
                      "source": 14,
                      "value": "79"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "RETURN",
                      "source": 14
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "tag",
                      "source": 4,
                      "value": "11"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "CALLVALUE",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "DUP1",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "ISZERO",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "81"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "JUMPI",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "PUSH",
                      "source": 4,
                      "value": "0"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "DUP1",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "REVERT",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "tag",
                      "source": 4,
                      "value": "81"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "POP",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "82"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "PUSH",
                      "source": 4,
                      "value": "4"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "DUP1",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "CALLDATASIZE",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "SUB",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "DUP2",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "ADD",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "SWAP1",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "83"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "SWAP2",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "SWAP1",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "84"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "tag",
                      "source": 4,
                      "value": "83"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "85"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "tag",
                      "source": 4,
                      "value": "82"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "STOP",
                      "source": 4
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "tag",
                      "source": 2,
                      "value": "12"
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "86"
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "PUSH",
                      "source": 2,
                      "value": "4"
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "CALLDATASIZE",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "SUB",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "87"
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "88"
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "tag",
                      "source": 2,
                      "value": "87"
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "89"
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "tag",
                      "source": 2,
                      "value": "86"
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "STOP",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "tag",
                      "source": 2,
                      "value": "13"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "CALLVALUE",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "ISZERO",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "90"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "JUMPI",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "PUSH",
                      "source": 2,
                      "value": "0"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "REVERT",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "tag",
                      "source": 2,
                      "value": "90"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "91"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "92"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "tag",
                      "source": 2,
                      "value": "91"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "93"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "94"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "tag",
                      "source": 2,
                      "value": "93"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "SUB",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "RETURN",
                      "source": 2
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "tag",
                      "source": 14,
                      "value": "14"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "95"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "tag",
                      "source": 14,
                      "value": "95"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "96"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "97"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "tag",
                      "source": 14,
                      "value": "96"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "98"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "80"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "tag",
                      "source": 14,
                      "value": "98"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "RETURN",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "tag",
                      "source": 14,
                      "value": "15"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "99"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "tag",
                      "source": 14,
                      "value": "99"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "100"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "101"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "tag",
                      "source": 14,
                      "value": "100"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "102"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "80"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "tag",
                      "source": 14,
                      "value": "102"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "RETURN",
                      "source": 14
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "tag",
                      "source": 3,
                      "value": "16"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "CALLVALUE",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "103"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "tag",
                      "source": 3,
                      "value": "103"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "104"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "CALLDATASIZE",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "105"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "50"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "tag",
                      "source": 3,
                      "value": "105"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "106"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "tag",
                      "source": 3,
                      "value": "104"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "107"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "56"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "tag",
                      "source": 3,
                      "value": "107"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "RETURN",
                      "source": 3
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "tag",
                      "source": 0,
                      "value": "17"
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "CALLVALUE",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "108"
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "tag",
                      "source": 0,
                      "value": "108"
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "109"
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "110"
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "tag",
                      "source": 0,
                      "value": "109"
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "STOP",
                      "source": 0
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "tag",
                      "source": 4,
                      "value": "18"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "CALLVALUE",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "DUP1",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "ISZERO",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "111"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "JUMPI",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "PUSH",
                      "source": 4,
                      "value": "0"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "DUP1",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "REVERT",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "tag",
                      "source": 4,
                      "value": "111"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "POP",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "112"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "PUSH",
                      "source": 4,
                      "value": "4"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "DUP1",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "CALLDATASIZE",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "SUB",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "DUP2",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "ADD",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "SWAP1",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "113"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "SWAP2",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "SWAP1",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "43"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "tag",
                      "source": 4,
                      "value": "113"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "114"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "tag",
                      "source": 4,
                      "value": "112"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "STOP",
                      "source": 4
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "tag",
                      "source": 14,
                      "value": "19"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "115"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "tag",
                      "source": 14,
                      "value": "115"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "116"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "CALLDATASIZE",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "117"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "50"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "tag",
                      "source": 14,
                      "value": "117"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "118"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "tag",
                      "source": 14,
                      "value": "116"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "STOP",
                      "source": 14
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "tag",
                      "source": 0,
                      "value": "20"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "CALLVALUE",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "119"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "tag",
                      "source": 0,
                      "value": "119"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "120"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "121"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "tag",
                      "source": 0,
                      "value": "120"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "122"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "80"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "tag",
                      "source": 0,
                      "value": "122"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "RETURN",
                      "source": 0
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "tag",
                      "source": 3,
                      "value": "21"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "CALLVALUE",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "123"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "tag",
                      "source": 3,
                      "value": "123"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "124"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "125"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "tag",
                      "source": 3,
                      "value": "124"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "126"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "39"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "tag",
                      "source": 3,
                      "value": "126"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "RETURN",
                      "source": 3
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "tag",
                      "source": 14,
                      "value": "22"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "127"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "tag",
                      "source": 14,
                      "value": "127"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "128"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "CALLDATASIZE",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "129"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "43"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "tag",
                      "source": 14,
                      "value": "129"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "130"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "tag",
                      "source": 14,
                      "value": "128"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "131"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "46"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "tag",
                      "source": 14,
                      "value": "131"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "RETURN",
                      "source": 14
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "tag",
                      "source": 2,
                      "value": "23"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "CALLVALUE",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "ISZERO",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "132"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "JUMPI",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH",
                      "source": 2,
                      "value": "0"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "REVERT",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "tag",
                      "source": 2,
                      "value": "132"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "133"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "134"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "tag",
                      "source": 2,
                      "value": "133"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "135"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "39"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "tag",
                      "source": 2,
                      "value": "135"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "SUB",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "RETURN",
                      "source": 2
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "tag",
                      "source": 14,
                      "value": "24"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "136"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "tag",
                      "source": 14,
                      "value": "136"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "137"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "CALLDATASIZE",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "138"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "50"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "tag",
                      "source": 14,
                      "value": "138"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "139"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "tag",
                      "source": 14,
                      "value": "137"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "STOP",
                      "source": 14
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "tag",
                      "source": 3,
                      "value": "25"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "CALLVALUE",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "140"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "tag",
                      "source": 3,
                      "value": "140"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "141"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "CALLDATASIZE",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "142"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "143"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "tag",
                      "source": 3,
                      "value": "142"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "144"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "tag",
                      "source": 3,
                      "value": "141"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "145"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "56"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "tag",
                      "source": 3,
                      "value": "145"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "RETURN",
                      "source": 3
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "tag",
                      "source": 14,
                      "value": "26"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "146"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "tag",
                      "source": 14,
                      "value": "146"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "147"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "CALLDATASIZE",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "148"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "50"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "tag",
                      "source": 14,
                      "value": "148"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "149"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "tag",
                      "source": 14,
                      "value": "147"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "STOP",
                      "source": 14
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "tag",
                      "source": 0,
                      "value": "27"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "CALLVALUE",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "ISZERO",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "150"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "tag",
                      "source": 0,
                      "value": "150"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "151"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "CALLDATASIZE",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "152"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "50"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "tag",
                      "source": 0,
                      "value": "152"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "153"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "tag",
                      "source": 0,
                      "value": "151"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "STOP",
                      "source": 0
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "tag",
                      "source": 14,
                      "value": "28"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "CALLVALUE",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "ISZERO",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "154"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "JUMPI",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "tag",
                      "source": 14,
                      "value": "154"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "155"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "156"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "tag",
                      "source": 14,
                      "value": "155"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "157"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "80"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "tag",
                      "source": 14,
                      "value": "157"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "RETURN",
                      "source": 14
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "tag",
                      "source": 3,
                      "value": "37"
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3056,
                      "end": 3069,
                      "name": "PUSH",
                      "source": 3,
                      "value": "60"
                    },
                    {
                      "begin": 3081,
                      "end": 3103,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 3106,
                      "end": 3124,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "159"
                    },
                    {
                      "begin": 3106,
                      "end": 3122,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "160"
                    },
                    {
                      "begin": 3106,
                      "end": 3124,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3106,
                      "end": 3124,
                      "name": "tag",
                      "source": 3,
                      "value": "159"
                    },
                    {
                      "begin": 3106,
                      "end": 3124,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3081,
                      "end": 3124,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3081,
                      "end": 3124,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3141,
                      "end": 3142,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3141,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "3"
                    },
                    {
                      "begin": 3141,
                      "end": 3148,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "161"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "162"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "tag",
                      "source": 3,
                      "value": "161"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1F"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DIV",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "MUL",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP3",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "163"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "162"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "tag",
                      "source": 3,
                      "value": "163"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "164"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1F"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "LT",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "165"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "100"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DIV",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "MUL",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "164"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "tag",
                      "source": 3,
                      "value": "165"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "KECCAK256",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "tag",
                      "source": 3,
                      "value": "166"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "GT",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "166"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1F"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "tag",
                      "source": 3,
                      "value": "164"
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3134,
                      "end": 3148,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3011,
                      "end": 3155,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "tag",
                      "source": 3,
                      "value": "44"
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5578,
                      "end": 5582,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 5594,
                      "end": 5607,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5610,
                      "end": 5622,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "168"
                    },
                    {
                      "begin": 5610,
                      "end": 5620,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "169"
                    },
                    {
                      "begin": 5610,
                      "end": 5622,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 5610,
                      "end": 5622,
                      "name": "tag",
                      "source": 3,
                      "value": "168"
                    },
                    {
                      "begin": 5610,
                      "end": 5622,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5594,
                      "end": 5622,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5594,
                      "end": 5622,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5632,
                      "end": 5663,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "170"
                    },
                    {
                      "begin": 5641,
                      "end": 5646,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 5648,
                      "end": 5655,
                      "name": "DUP6",
                      "source": 3
                    },
                    {
                      "begin": 5657,
                      "end": 5662,
                      "name": "DUP6",
                      "source": 3
                    },
                    {
                      "begin": 5632,
                      "end": 5640,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "171"
                    },
                    {
                      "begin": 5632,
                      "end": 5663,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 5632,
                      "end": 5663,
                      "name": "tag",
                      "source": 3,
                      "value": "170"
                    },
                    {
                      "begin": 5632,
                      "end": 5663,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5680,
                      "end": 5684,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1"
                    },
                    {
                      "begin": 5673,
                      "end": 5684,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 5673,
                      "end": 5684,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5673,
                      "end": 5684,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SWAP3",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5505,
                      "end": 5691,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "tag",
                      "source": 14,
                      "value": "51"
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "173"
                    },
                    {
                      "begin": 2334,
                      "end": 2345,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "174"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "tag",
                      "source": 0,
                      "value": "173"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 1473,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1470,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "2"
                    },
                    {
                      "begin": 1456,
                      "end": 1470,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "100"
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "EXP",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "SLOAD",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "MUL",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "NOT",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "DUP4",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "MUL",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "OR",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "SSTORE",
                      "source": 14
                    },
                    {
                      "begin": 1456,
                      "end": 1488,
                      "modifierDepth": 1,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1374,
                      "end": 1496,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "tag",
                      "source": 3,
                      "value": "54"
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4243,
                      "end": 4250,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 4262,
                      "end": 4284,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4287,
                      "end": 4305,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "177"
                    },
                    {
                      "begin": 4287,
                      "end": 4303,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "160"
                    },
                    {
                      "begin": 4287,
                      "end": 4305,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 4287,
                      "end": 4305,
                      "name": "tag",
                      "source": 3,
                      "value": "177"
                    },
                    {
                      "begin": 4287,
                      "end": 4305,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4262,
                      "end": 4305,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4262,
                      "end": 4305,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4322,
                      "end": 4323,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4322,
                      "end": 4336,
                      "name": "PUSH",
                      "source": 3,
                      "value": "2"
                    },
                    {
                      "begin": 4322,
                      "end": 4336,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 4322,
                      "end": 4336,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 4315,
                      "end": 4336,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 4315,
                      "end": 4336,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4315,
                      "end": 4336,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4191,
                      "end": 4343,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "tag",
                      "source": 14,
                      "value": "60"
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "179"
                    },
                    {
                      "begin": 2334,
                      "end": 2345,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "174"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "tag",
                      "source": 0,
                      "value": "179"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 1339,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1336,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 1318,
                      "end": 1336,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "100"
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "EXP",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "SLOAD",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "MUL",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "NOT",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "DUP4",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "MUL",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "OR",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "SSTORE",
                      "source": 14
                    },
                    {
                      "begin": 1318,
                      "end": 1358,
                      "modifierDepth": 1,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1228,
                      "end": 1366,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "tag",
                      "source": 14,
                      "value": "65"
                    },
                    {
                      "begin": 2314,
                      "end": 2469,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2412,
                      "end": 2416,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "PUSH",
                      "source": 14,
                      "value": "8C379A000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "182"
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "183"
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "tag",
                      "source": 14,
                      "value": "182"
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2429,
                      "end": 2461,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "tag",
                      "source": 3,
                      "value": "69"
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4098,
                      "end": 4103,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 4122,
                      "end": 4124,
                      "name": "PUSH",
                      "source": 3,
                      "value": "12"
                    },
                    {
                      "begin": 4115,
                      "end": 4124,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4115,
                      "end": 4124,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4049,
                      "end": 4131,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "tag",
                      "source": 14,
                      "value": "75"
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1894,
                      "end": 1930,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "186"
                    },
                    {
                      "begin": 1900,
                      "end": 1902,
                      "name": "DUP3",
                      "source": 14
                    },
                    {
                      "begin": 1918,
                      "end": 1928,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "187"
                    },
                    {
                      "begin": 1918,
                      "end": 1926,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "69"
                    },
                    {
                      "begin": 1918,
                      "end": 1928,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1918,
                      "end": 1928,
                      "name": "tag",
                      "source": 14,
                      "value": "187"
                    },
                    {
                      "begin": 1918,
                      "end": 1928,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1914,
                      "end": 1916,
                      "name": "PUSH",
                      "source": 14,
                      "value": "A"
                    },
                    {
                      "begin": 1914,
                      "end": 1928,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "188"
                    },
                    {
                      "begin": 1914,
                      "end": 1928,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 1914,
                      "end": 1928,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1914,
                      "end": 1928,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "189"
                    },
                    {
                      "begin": 1914,
                      "end": 1928,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1914,
                      "end": 1928,
                      "name": "tag",
                      "source": 14,
                      "value": "188"
                    },
                    {
                      "begin": 1914,
                      "end": 1928,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1904,
                      "end": 1910,
                      "name": "DUP4",
                      "source": 14
                    },
                    {
                      "begin": 1904,
                      "end": 1929,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "190"
                    },
                    {
                      "begin": 1904,
                      "end": 1929,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 1904,
                      "end": 1929,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1904,
                      "end": 1929,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "191"
                    },
                    {
                      "begin": 1904,
                      "end": 1929,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1904,
                      "end": 1929,
                      "name": "tag",
                      "source": 14,
                      "value": "190"
                    },
                    {
                      "begin": 1904,
                      "end": 1929,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1894,
                      "end": 1899,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "192"
                    },
                    {
                      "begin": 1894,
                      "end": 1930,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1894,
                      "end": 1930,
                      "name": "tag",
                      "source": 14,
                      "value": "186"
                    },
                    {
                      "begin": 1894,
                      "end": 1930,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1959,
                      "end": 1961,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "PUSH",
                      "source": 14,
                      "value": "7B47457F3AF09E5F794B020FD74160963A808F5985883496A096D403D380C343"
                    },
                    {
                      "begin": 1963,
                      "end": 1969,
                      "name": "DUP3",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "193"
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "56"
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "tag",
                      "source": 14,
                      "value": "193"
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1948,
                      "end": 1970,
                      "name": "LOG2",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1639,
                      "end": 1978,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "tag",
                      "source": 14,
                      "value": "78"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH",
                      "source": 14,
                      "value": "2"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "SLOAD",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH",
                      "source": 14,
                      "value": "100"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "EXP",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "DIV",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 676,
                      "end": 705,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "tag",
                      "source": 4,
                      "value": "85"
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 985,
                      "end": 1011,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "195"
                    },
                    {
                      "begin": 991,
                      "end": 1003,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "196"
                    },
                    {
                      "begin": 991,
                      "end": 1001,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "169"
                    },
                    {
                      "begin": 991,
                      "end": 1003,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 991,
                      "end": 1003,
                      "name": "tag",
                      "source": 4,
                      "value": "196"
                    },
                    {
                      "begin": 991,
                      "end": 1003,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 1005,
                      "end": 1010,
                      "name": "DUP3",
                      "source": 4
                    },
                    {
                      "begin": 985,
                      "end": 990,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "197"
                    },
                    {
                      "begin": 985,
                      "end": 1011,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 985,
                      "end": 1011,
                      "name": "tag",
                      "source": 4,
                      "value": "195"
                    },
                    {
                      "begin": 985,
                      "end": 1011,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "name": "POP",
                      "source": 4
                    },
                    {
                      "begin": 931,
                      "end": 1018,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "tag",
                      "source": 2,
                      "value": "89"
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 2653,
                      "end": 2666,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "199"
                    },
                    {
                      "begin": 2653,
                      "end": 2664,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "200"
                    },
                    {
                      "begin": 2653,
                      "end": 2666,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 2653,
                      "end": 2666,
                      "name": "tag",
                      "source": 2,
                      "value": "199"
                    },
                    {
                      "begin": 2653,
                      "end": 2666,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 4273,
                      "end": 4309,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "202"
                    },
                    {
                      "begin": 4291,
                      "end": 4308,
                      "modifierDepth": 1,
                      "name": "DUP3",
                      "source": 2
                    },
                    {
                      "begin": 4273,
                      "end": 4290,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "203"
                    },
                    {
                      "begin": 4273,
                      "end": 4309,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 4273,
                      "end": 4309,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 2,
                      "value": "202"
                    },
                    {
                      "begin": 4273,
                      "end": 4309,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 4319,
                      "end": 4365,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "204"
                    },
                    {
                      "begin": 4341,
                      "end": 4358,
                      "modifierDepth": 1,
                      "name": "DUP3",
                      "source": 2
                    },
                    {
                      "begin": 4360,
                      "end": 4364,
                      "modifierDepth": 1,
                      "name": "DUP3",
                      "source": 2
                    },
                    {
                      "begin": 4319,
                      "end": 4340,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "205"
                    },
                    {
                      "begin": 4319,
                      "end": 4365,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 4319,
                      "end": 4365,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 2,
                      "value": "204"
                    },
                    {
                      "begin": 4319,
                      "end": 4365,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 4158,
                      "end": 4372,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "tag",
                      "source": 2,
                      "value": "92"
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 3774,
                      "end": 3781,
                      "name": "PUSH",
                      "source": 2,
                      "value": "0"
                    },
                    {
                      "begin": 2924,
                      "end": 2944,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "207"
                    },
                    {
                      "begin": 2924,
                      "end": 2942,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "208"
                    },
                    {
                      "begin": 2924,
                      "end": 2944,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 2924,
                      "end": 2944,
                      "name": "tag",
                      "source": 2,
                      "value": "207"
                    },
                    {
                      "begin": 2924,
                      "end": 2944,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 1327,
                      "end": 1393,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 8,
                      "value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
                    },
                    {
                      "begin": 3800,
                      "end": 3832,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 2,
                      "value": "0"
                    },
                    {
                      "begin": 3800,
                      "end": 3832,
                      "modifierDepth": 1,
                      "name": "SHL",
                      "source": 2
                    },
                    {
                      "begin": 3793,
                      "end": 3832,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 3793,
                      "end": 3832,
                      "modifierDepth": 1,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 3705,
                      "end": 3839,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "tag",
                      "source": 14,
                      "value": "97"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH",
                      "source": 14,
                      "value": "3"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "SLOAD",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH",
                      "source": 14,
                      "value": "100"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "EXP",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "DIV",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 712,
                      "end": 742,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "tag",
                      "source": 14,
                      "value": "101"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "SLOAD",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH",
                      "source": 14,
                      "value": "100"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "EXP",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "DIV",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 601,
                      "end": 629,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "tag",
                      "source": 3,
                      "value": "106"
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4466,
                      "end": 4473,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 4485,
                      "end": 4507,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4510,
                      "end": 4528,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "211"
                    },
                    {
                      "begin": 4510,
                      "end": 4526,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "160"
                    },
                    {
                      "begin": 4510,
                      "end": 4528,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 4510,
                      "end": 4528,
                      "name": "tag",
                      "source": 3,
                      "value": "211"
                    },
                    {
                      "begin": 4510,
                      "end": 4528,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 4485,
                      "end": 4528,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4485,
                      "end": 4528,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4546,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4556,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 4545,
                      "end": 4556,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 4557,
                      "end": 4564,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "KECCAK256",
                      "source": 3
                    },
                    {
                      "begin": 4545,
                      "end": 4565,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 4538,
                      "end": 4565,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 4538,
                      "end": 4565,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4538,
                      "end": 4565,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 4401,
                      "end": 4572,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "tag",
                      "source": 0,
                      "value": "110"
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "213"
                    },
                    {
                      "begin": 2334,
                      "end": 2345,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "174"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "tag",
                      "source": 0,
                      "value": "213"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3219,
                      "end": 3249,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "215"
                    },
                    {
                      "begin": 3246,
                      "end": 3247,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3219,
                      "end": 3237,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "216"
                    },
                    {
                      "begin": 3219,
                      "end": 3249,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 3219,
                      "end": 3249,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 0,
                      "value": "215"
                    },
                    {
                      "begin": 3219,
                      "end": 3249,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3155,
                      "end": 3256,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "tag",
                      "source": 4,
                      "value": "114"
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 1409,
                      "end": 1454,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "218"
                    },
                    {
                      "begin": 1425,
                      "end": 1432,
                      "name": "DUP3",
                      "source": 4
                    },
                    {
                      "begin": 1434,
                      "end": 1446,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "219"
                    },
                    {
                      "begin": 1434,
                      "end": 1444,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "169"
                    },
                    {
                      "begin": 1434,
                      "end": 1446,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 1434,
                      "end": 1446,
                      "name": "tag",
                      "source": 4,
                      "value": "219"
                    },
                    {
                      "begin": 1434,
                      "end": 1446,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 1448,
                      "end": 1453,
                      "name": "DUP4",
                      "source": 4
                    },
                    {
                      "begin": 1409,
                      "end": 1424,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "220"
                    },
                    {
                      "begin": 1409,
                      "end": 1454,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 1409,
                      "end": 1454,
                      "name": "tag",
                      "source": 4,
                      "value": "218"
                    },
                    {
                      "begin": 1409,
                      "end": 1454,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 1464,
                      "end": 1485,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "221"
                    },
                    {
                      "begin": 1470,
                      "end": 1477,
                      "name": "DUP3",
                      "source": 4
                    },
                    {
                      "begin": 1479,
                      "end": 1484,
                      "name": "DUP3",
                      "source": 4
                    },
                    {
                      "begin": 1464,
                      "end": 1469,
                      "name": "PUSH [tag]",
                      "source": 4,
                      "value": "197"
                    },
                    {
                      "begin": 1464,
                      "end": 1485,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 1464,
                      "end": 1485,
                      "name": "tag",
                      "source": 4,
                      "value": "221"
                    },
                    {
                      "begin": 1464,
                      "end": 1485,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "POP",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "name": "POP",
                      "source": 4
                    },
                    {
                      "begin": 1334,
                      "end": 1492,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "tag",
                      "source": 14,
                      "value": "118"
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "223"
                    },
                    {
                      "begin": 2334,
                      "end": 2345,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "174"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "tag",
                      "source": 0,
                      "value": "223"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 1198,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1195,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 1182,
                      "end": 1195,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "100"
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "EXP",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "SLOAD",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "MUL",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "NOT",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "DUP4",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "MUL",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "OR",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "SSTORE",
                      "source": 14
                    },
                    {
                      "begin": 1182,
                      "end": 1212,
                      "modifierDepth": 1,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1102,
                      "end": 1220,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "tag",
                      "source": 0,
                      "value": "121"
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2487,
                      "end": 2494,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 2506,
                      "end": 2530,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 2533,
                      "end": 2553,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "226"
                    },
                    {
                      "begin": 2533,
                      "end": 2551,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "227"
                    },
                    {
                      "begin": 2533,
                      "end": 2553,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2533,
                      "end": 2553,
                      "name": "tag",
                      "source": 0,
                      "value": "226"
                    },
                    {
                      "begin": 2533,
                      "end": 2553,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2506,
                      "end": 2553,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2506,
                      "end": 2553,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 2570,
                      "end": 2571,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "SLOAD",
                      "source": 0
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "PUSH",
                      "source": 0,
                      "value": "100"
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "EXP",
                      "source": 0
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "DIV",
                      "source": 0
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2570,
                      "end": 2578,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 2563,
                      "end": 2578,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 2563,
                      "end": 2578,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 2563,
                      "end": 2578,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2441,
                      "end": 2585,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "tag",
                      "source": 3,
                      "value": "125"
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3315,
                      "end": 3328,
                      "name": "PUSH",
                      "source": 3,
                      "value": "60"
                    },
                    {
                      "begin": 3340,
                      "end": 3362,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 3365,
                      "end": 3383,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "229"
                    },
                    {
                      "begin": 3365,
                      "end": 3381,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "160"
                    },
                    {
                      "begin": 3365,
                      "end": 3383,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3365,
                      "end": 3383,
                      "name": "tag",
                      "source": 3,
                      "value": "229"
                    },
                    {
                      "begin": 3365,
                      "end": 3383,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3340,
                      "end": 3383,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3340,
                      "end": 3383,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3400,
                      "end": 3401,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3400,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 3400,
                      "end": 3409,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "230"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "162"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "tag",
                      "source": 3,
                      "value": "230"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1F"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DIV",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "MUL",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP3",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "231"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "162"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "tag",
                      "source": 3,
                      "value": "231"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "232"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1F"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "LT",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "233"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "100"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DIV",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "MUL",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "232"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "tag",
                      "source": 3,
                      "value": "233"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "KECCAK256",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "tag",
                      "source": 3,
                      "value": "234"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "GT",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "234"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1F"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "tag",
                      "source": 3,
                      "value": "232"
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3393,
                      "end": 3409,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 3268,
                      "end": 3416,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "tag",
                      "source": 14,
                      "value": "130"
                    },
                    {
                      "begin": 2171,
                      "end": 2306,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2249,
                      "end": 2253,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "PUSH",
                      "source": 14,
                      "value": "8C379A000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "PUSH",
                      "source": 14,
                      "value": "4"
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "236"
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "183"
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "tag",
                      "source": 14,
                      "value": "236"
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "SWAP2",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "SUB",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 2266,
                      "end": 2298,
                      "name": "REVERT",
                      "source": 14
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "tag",
                      "source": 2,
                      "value": "134"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "MSTORE",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH",
                      "source": 2,
                      "value": "5"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "MSTORE",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH",
                      "source": 2,
                      "value": "20"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "PUSH",
                      "source": 2,
                      "value": "352E302E30000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "MSTORE",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 1819,
                      "end": 1877,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "tag",
                      "source": 14,
                      "value": "139"
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 4158,
                      "end": 4188,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4191,
                      "end": 4217,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "238"
                    },
                    {
                      "begin": 4191,
                      "end": 4215,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "239"
                    },
                    {
                      "begin": 4191,
                      "end": 4217,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4191,
                      "end": 4217,
                      "name": "tag",
                      "source": 1,
                      "value": "238"
                    },
                    {
                      "begin": 4191,
                      "end": 4217,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4158,
                      "end": 4217,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4158,
                      "end": 4217,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4279,
                      "end": 4298,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4302,
                      "end": 4303,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "PUSH",
                      "source": 1,
                      "value": "8"
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "SLOAD",
                      "source": 1
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "PUSH",
                      "source": 1,
                      "value": "100"
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "EXP",
                      "source": 1
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "DIV",
                      "source": 1
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FF"
                    },
                    {
                      "begin": 4302,
                      "end": 4317,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 4301,
                      "end": 4317,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 4279,
                      "end": 4317,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4279,
                      "end": 4317,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4327,
                      "end": 4345,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4348,
                      "end": 4349,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "SLOAD",
                      "source": 1
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "PUSH",
                      "source": 1,
                      "value": "100"
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "EXP",
                      "source": 1
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "DIV",
                      "source": 1
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4348,
                      "end": 4362,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 4327,
                      "end": 4362,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4327,
                      "end": 4362,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4706,
                      "end": 4723,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4741,
                      "end": 4742,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 4726,
                      "end": 4737,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4726,
                      "end": 4742,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4726,
                      "end": 4742,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 4726,
                      "end": 4742,
                      "name": "EQ",
                      "source": 1
                    },
                    {
                      "begin": 4726,
                      "end": 4760,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 4726,
                      "end": 4760,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 4726,
                      "end": 4760,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "240"
                    },
                    {
                      "begin": 4726,
                      "end": 4760,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 4726,
                      "end": 4760,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4746,
                      "end": 4760,
                      "name": "DUP3",
                      "source": 1
                    },
                    {
                      "begin": 4726,
                      "end": 4760,
                      "name": "tag",
                      "source": 1,
                      "value": "240"
                    },
                    {
                      "begin": 4726,
                      "end": 4760,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4706,
                      "end": 4760,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4706,
                      "end": 4760,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4770,
                      "end": 4787,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4805,
                      "end": 4806,
                      "name": "PUSH",
                      "source": 1,
                      "value": "1"
                    },
                    {
                      "begin": 4790,
                      "end": 4801,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 4790,
                      "end": 4806,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4790,
                      "end": 4806,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 4790,
                      "end": 4806,
                      "name": "EQ",
                      "source": 1
                    },
                    {
                      "begin": 4790,
                      "end": 4840,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 4790,
                      "end": 4840,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 4790,
                      "end": 4840,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "241"
                    },
                    {
                      "begin": 4790,
                      "end": 4840,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 4790,
                      "end": 4840,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4839,
                      "end": 4840,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4818,
                      "end": 4822,
                      "name": "ADDRESS",
                      "source": 1
                    },
                    {
                      "begin": 4810,
                      "end": 4835,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4810,
                      "end": 4835,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 4810,
                      "end": 4835,
                      "name": "EXTCODESIZE",
                      "source": 1
                    },
                    {
                      "begin": 4810,
                      "end": 4840,
                      "name": "EQ",
                      "source": 1
                    },
                    {
                      "begin": 4790,
                      "end": 4840,
                      "name": "tag",
                      "source": 1,
                      "value": "241"
                    },
                    {
                      "begin": 4790,
                      "end": 4840,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4770,
                      "end": 4840,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4770,
                      "end": 4840,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4856,
                      "end": 4868,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 4855,
                      "end": 4868,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 4855,
                      "end": 4885,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 4855,
                      "end": 4885,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 4855,
                      "end": 4885,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "242"
                    },
                    {
                      "begin": 4855,
                      "end": 4885,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 4855,
                      "end": 4885,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4873,
                      "end": 4885,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 4872,
                      "end": 4885,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 4855,
                      "end": 4885,
                      "name": "tag",
                      "source": 1,
                      "value": "242"
                    },
                    {
                      "begin": 4855,
                      "end": 4885,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4851,
                      "end": 4942,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 4851,
                      "end": 4942,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "243"
                    },
                    {
                      "begin": 4851,
                      "end": 4942,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "PUSH",
                      "source": 1,
                      "value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4"
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "SUB",
                      "source": 1
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4908,
                      "end": 4931,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 4851,
                      "end": 4942,
                      "name": "tag",
                      "source": 1,
                      "value": "243"
                    },
                    {
                      "begin": 4851,
                      "end": 4942,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4968,
                      "end": 4969,
                      "name": "PUSH",
                      "source": 1,
                      "value": "1"
                    },
                    {
                      "begin": 4951,
                      "end": 4952,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4965,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4951,
                      "end": 4965,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4965,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "PUSH",
                      "source": 1,
                      "value": "100"
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "EXP",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "SLOAD",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "MUL",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "NOT",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "MUL",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "OR",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "SSTORE",
                      "source": 1
                    },
                    {
                      "begin": 4951,
                      "end": 4969,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4983,
                      "end": 4997,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 4979,
                      "end": 5046,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 4979,
                      "end": 5046,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "244"
                    },
                    {
                      "begin": 4979,
                      "end": 5046,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 5031,
                      "end": 5035,
                      "name": "PUSH",
                      "source": 1,
                      "value": "1"
                    },
                    {
                      "begin": 5013,
                      "end": 5014,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5028,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 5013,
                      "end": 5028,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5028,
                      "name": "PUSH",
                      "source": 1,
                      "value": "8"
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "PUSH",
                      "source": 1,
                      "value": "100"
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "EXP",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "SLOAD",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FF"
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "MUL",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "NOT",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "MUL",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "OR",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "SSTORE",
                      "source": 1
                    },
                    {
                      "begin": 5013,
                      "end": 5035,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4979,
                      "end": 5046,
                      "name": "tag",
                      "source": 1,
                      "value": "244"
                    },
                    {
                      "begin": 4979,
                      "end": 5046,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "246"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "B"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "20"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "447261676F6E4472696E6B000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "MLOAD",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "40"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "3"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "20"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "ADD",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "44444B0000000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "MSTORE",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 957,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "247"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 14,
                      "value": "246"
                    },
                    {
                      "begin": 945,
                      "end": 979,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 990,
                      "end": 1012,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "248"
                    },
                    {
                      "begin": 990,
                      "end": 1010,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "249"
                    },
                    {
                      "begin": 990,
                      "end": 1012,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 990,
                      "end": 1012,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 14,
                      "value": "248"
                    },
                    {
                      "begin": 990,
                      "end": 1012,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1023,
                      "end": 1051,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "250"
                    },
                    {
                      "begin": 1038,
                      "end": 1050,
                      "modifierDepth": 1,
                      "name": "DUP7",
                      "source": 14
                    },
                    {
                      "begin": 1023,
                      "end": 1037,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "251"
                    },
                    {
                      "begin": 1023,
                      "end": 1051,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1023,
                      "end": 1051,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 14,
                      "value": "250"
                    },
                    {
                      "begin": 1023,
                      "end": 1051,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 1062,
                      "end": 1086,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "252"
                    },
                    {
                      "begin": 1062,
                      "end": 1084,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 14,
                      "value": "253"
                    },
                    {
                      "begin": 1062,
                      "end": 1086,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 1062,
                      "end": 1086,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 14,
                      "value": "252"
                    },
                    {
                      "begin": 1062,
                      "end": 1086,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 5070,
                      "end": 5084,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 5066,
                      "end": 5167,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 5066,
                      "end": 5167,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "254"
                    },
                    {
                      "begin": 5066,
                      "end": 5167,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 5118,
                      "end": 5123,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 5100,
                      "end": 5101,
                      "name": "DUP6",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5115,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 5100,
                      "end": 5115,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5115,
                      "name": "PUSH",
                      "source": 1,
                      "value": "8"
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "PUSH",
                      "source": 1,
                      "value": "100"
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "EXP",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "SLOAD",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FF"
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "MUL",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "NOT",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "DUP4",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "ISZERO",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "MUL",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "OR",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "SSTORE",
                      "source": 1
                    },
                    {
                      "begin": 5100,
                      "end": 5123,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "PUSH",
                      "source": 1,
                      "value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
                    },
                    {
                      "begin": 5154,
                      "end": 5155,
                      "name": "PUSH",
                      "source": 1,
                      "value": "1"
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "255"
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "256"
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "tag",
                      "source": 1,
                      "value": "255"
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "SUB",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 5142,
                      "end": 5156,
                      "name": "LOG1",
                      "source": 1
                    },
                    {
                      "begin": 5066,
                      "end": 5167,
                      "name": "tag",
                      "source": 1,
                      "value": "254"
                    },
                    {
                      "begin": 5066,
                      "end": 5167,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 4092,
                      "end": 5173,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4092,
                      "end": 5173,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4092,
                      "end": 5173,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4092,
                      "end": 5173,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 4092,
                      "end": 5173,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 873,
                      "end": 1094,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "tag",
                      "source": 3,
                      "value": "144"
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5083,
                      "end": 5090,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 5102,
                      "end": 5124,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5127,
                      "end": 5145,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "258"
                    },
                    {
                      "begin": 5127,
                      "end": 5143,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "160"
                    },
                    {
                      "begin": 5127,
                      "end": 5145,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 5127,
                      "end": 5145,
                      "name": "tag",
                      "source": 3,
                      "value": "258"
                    },
                    {
                      "begin": 5127,
                      "end": 5145,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 5102,
                      "end": 5145,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5102,
                      "end": 5145,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5163,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5175,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1"
                    },
                    {
                      "begin": 5162,
                      "end": 5175,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 5176,
                      "end": 5181,
                      "name": "DUP6",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 5162,
                      "end": 5182,
                      "name": "KECCAK256",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 5183,
                      "end": 5190,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "KECCAK256",
                      "source": 3
                    },
                    {
                      "begin": 5162,
                      "end": 5191,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 5155,
                      "end": 5191,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 5155,
                      "end": 5191,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5155,
                      "end": 5191,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SWAP3",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 5003,
                      "end": 5198,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "tag",
                      "source": 14,
                      "value": "149"
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "260"
                    },
                    {
                      "begin": 2334,
                      "end": 2345,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "174"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "tag",
                      "source": 0,
                      "value": "260"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 1606,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "DUP1",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1603,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "3"
                    },
                    {
                      "begin": 1588,
                      "end": 1603,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "100"
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "EXP",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "SLOAD",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "MUL",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "NOT",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "DUP4",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "MUL",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "OR",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "SSTORE",
                      "source": 14
                    },
                    {
                      "begin": 1588,
                      "end": 1622,
                      "modifierDepth": 1,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1504,
                      "end": 1630,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "tag",
                      "source": 0,
                      "value": "153"
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "263"
                    },
                    {
                      "begin": 2334,
                      "end": 2345,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "174"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "tag",
                      "source": 0,
                      "value": "263"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3509,
                      "end": 3510,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3489,
                      "end": 3511,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3489,
                      "end": 3511,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 3489,
                      "end": 3497,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 3489,
                      "end": 3511,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3489,
                      "end": 3511,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 3489,
                      "end": 3511,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 3485,
                      "end": 3576,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "265"
                    },
                    {
                      "begin": 3485,
                      "end": 3576,
                      "modifierDepth": 1,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 3562,
                      "end": 3563,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "266"
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "80"
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 0,
                      "value": "266"
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3534,
                      "end": 3565,
                      "modifierDepth": 1,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 3485,
                      "end": 3576,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 0,
                      "value": "265"
                    },
                    {
                      "begin": 3485,
                      "end": 3576,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3585,
                      "end": 3613,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "267"
                    },
                    {
                      "begin": 3604,
                      "end": 3612,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 3585,
                      "end": 3603,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "216"
                    },
                    {
                      "begin": 3585,
                      "end": 3613,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 3585,
                      "end": 3613,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 0,
                      "value": "267"
                    },
                    {
                      "begin": 3585,
                      "end": 3613,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 3405,
                      "end": 3620,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "tag",
                      "source": 14,
                      "value": "156"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH",
                      "source": 14,
                      "value": "1"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH",
                      "source": 14,
                      "value": "0"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "SLOAD",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH",
                      "source": 14,
                      "value": "100"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "EXP",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "SWAP1",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "DIV",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "PUSH",
                      "source": 14,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "AND",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "name": "DUP2",
                      "source": 14
                    },
                    {
                      "begin": 636,
                      "end": 669,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 2242,
                      "end": 2395,
                      "name": "tag",
                      "source": 3,
                      "value": "160"
                    },
                    {
                      "begin": 2242,
                      "end": 2395,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 2292,
                      "end": 2314,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 2359,
                      "end": 2379,
                      "name": "PUSH",
                      "source": 3,
                      "value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
                    },
                    {
                      "begin": 2349,
                      "end": 2379,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 2349,
                      "end": 2379,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 2242,
                      "end": 2395,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 2242,
                      "end": 2395,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 887,
                      "end": 983,
                      "name": "tag",
                      "source": 5,
                      "value": "169"
                    },
                    {
                      "begin": 887,
                      "end": 983,
                      "name": "JUMPDEST",
                      "source": 5
                    },
                    {
                      "begin": 940,
                      "end": 947,
                      "name": "PUSH",
                      "source": 5,
                      "value": "0"
                    },
                    {
                      "begin": 966,
                      "end": 976,
                      "name": "CALLER",
                      "source": 5
                    },
                    {
                      "begin": 959,
                      "end": 976,
                      "name": "SWAP1",
                      "source": 5
                    },
                    {
                      "begin": 959,
                      "end": 976,
                      "name": "POP",
                      "source": 5
                    },
                    {
                      "begin": 887,
                      "end": 983,
                      "name": "SWAP1",
                      "source": 5
                    },
                    {
                      "begin": 887,
                      "end": 983,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 5
                    },
                    {
                      "begin": 10264,
                      "end": 10392,
                      "name": "tag",
                      "source": 3,
                      "value": "171"
                    },
                    {
                      "begin": 10264,
                      "end": 10392,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 10348,
                      "end": 10385,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "271"
                    },
                    {
                      "begin": 10357,
                      "end": 10362,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 10364,
                      "end": 10371,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 10373,
                      "end": 10378,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 10380,
                      "end": 10384,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1"
                    },
                    {
                      "begin": 10348,
                      "end": 10356,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "272"
                    },
                    {
                      "begin": 10348,
                      "end": 10385,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 10348,
                      "end": 10385,
                      "name": "tag",
                      "source": 3,
                      "value": "271"
                    },
                    {
                      "begin": 10348,
                      "end": 10385,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 10264,
                      "end": 10392,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 10264,
                      "end": 10392,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 10264,
                      "end": 10392,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 10264,
                      "end": 10392,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 2658,
                      "end": 2820,
                      "name": "tag",
                      "source": 0,
                      "value": "174"
                    },
                    {
                      "begin": 2658,
                      "end": 2820,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2728,
                      "end": 2740,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "274"
                    },
                    {
                      "begin": 2728,
                      "end": 2738,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "169"
                    },
                    {
                      "begin": 2728,
                      "end": 2740,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2728,
                      "end": 2740,
                      "name": "tag",
                      "source": 0,
                      "value": "274"
                    },
                    {
                      "begin": 2728,
                      "end": 2740,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2717,
                      "end": 2740,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2717,
                      "end": 2740,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 2717,
                      "end": 2724,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "275"
                    },
                    {
                      "begin": 2717,
                      "end": 2722,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "121"
                    },
                    {
                      "begin": 2717,
                      "end": 2724,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2717,
                      "end": 2724,
                      "name": "tag",
                      "source": 0,
                      "value": "275"
                    },
                    {
                      "begin": 2717,
                      "end": 2724,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2717,
                      "end": 2740,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2717,
                      "end": 2740,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 2717,
                      "end": 2740,
                      "name": "EQ",
                      "source": 0
                    },
                    {
                      "begin": 2713,
                      "end": 2814,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "276"
                    },
                    {
                      "begin": 2713,
                      "end": 2814,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 2790,
                      "end": 2802,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "277"
                    },
                    {
                      "begin": 2790,
                      "end": 2800,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "169"
                    },
                    {
                      "begin": 2790,
                      "end": 2802,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2790,
                      "end": 2802,
                      "name": "tag",
                      "source": 0,
                      "value": "277"
                    },
                    {
                      "begin": 2790,
                      "end": 2802,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "PUSH",
                      "source": 0,
                      "value": "118CDAA700000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "278"
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "80"
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "tag",
                      "source": 0,
                      "value": "278"
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2763,
                      "end": 2803,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 2713,
                      "end": 2814,
                      "name": "tag",
                      "source": 0,
                      "value": "276"
                    },
                    {
                      "begin": 2713,
                      "end": 2814,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2658,
                      "end": 2820,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 8996,
                      "end": 9204,
                      "name": "tag",
                      "source": 3,
                      "value": "192"
                    },
                    {
                      "begin": 8996,
                      "end": 9204,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 9085,
                      "end": 9086,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 9066,
                      "end": 9087,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 9066,
                      "end": 9087,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 9066,
                      "end": 9073,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 9066,
                      "end": 9087,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 9066,
                      "end": 9087,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 9066,
                      "end": 9087,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 9062,
                      "end": 9153,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "280"
                    },
                    {
                      "begin": 9062,
                      "end": 9153,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 9139,
                      "end": 9140,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "PUSH",
                      "source": 3,
                      "value": "EC442F0500000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "281"
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "80"
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "tag",
                      "source": 3,
                      "value": "281"
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 9110,
                      "end": 9142,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 9062,
                      "end": 9153,
                      "name": "tag",
                      "source": 3,
                      "value": "280"
                    },
                    {
                      "begin": 9062,
                      "end": 9153,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 9162,
                      "end": 9197,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "282"
                    },
                    {
                      "begin": 9178,
                      "end": 9179,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 9182,
                      "end": 9189,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 9191,
                      "end": 9196,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 9162,
                      "end": 9169,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "283"
                    },
                    {
                      "begin": 9162,
                      "end": 9197,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 9162,
                      "end": 9197,
                      "name": "tag",
                      "source": 3,
                      "value": "282"
                    },
                    {
                      "begin": 9162,
                      "end": 9197,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 8996,
                      "end": 9204,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 8996,
                      "end": 9204,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 8996,
                      "end": 9204,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 9522,
                      "end": 9728,
                      "name": "tag",
                      "source": 3,
                      "value": "197"
                    },
                    {
                      "begin": 9522,
                      "end": 9728,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 9611,
                      "end": 9612,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 9592,
                      "end": 9613,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 9592,
                      "end": 9613,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 9592,
                      "end": 9599,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 9592,
                      "end": 9613,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 9592,
                      "end": 9613,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 9592,
                      "end": 9613,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 9588,
                      "end": 9677,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "285"
                    },
                    {
                      "begin": 9588,
                      "end": 9677,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 9663,
                      "end": 9664,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "PUSH",
                      "source": 3,
                      "value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "286"
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "80"
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "tag",
                      "source": 3,
                      "value": "286"
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 9636,
                      "end": 9666,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 9588,
                      "end": 9677,
                      "name": "tag",
                      "source": 3,
                      "value": "285"
                    },
                    {
                      "begin": 9588,
                      "end": 9677,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 9686,
                      "end": 9721,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "287"
                    },
                    {
                      "begin": 9694,
                      "end": 9701,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 9711,
                      "end": 9712,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 9715,
                      "end": 9720,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 9686,
                      "end": 9693,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "283"
                    },
                    {
                      "begin": 9686,
                      "end": 9721,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 9686,
                      "end": 9721,
                      "name": "tag",
                      "source": 3,
                      "value": "287"
                    },
                    {
                      "begin": 9686,
                      "end": 9721,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 9522,
                      "end": 9728,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 9522,
                      "end": 9728,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 9522,
                      "end": 9728,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 4599,
                      "end": 4911,
                      "name": "tag",
                      "source": 2,
                      "value": "200"
                    },
                    {
                      "begin": 4599,
                      "end": 4911,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 4688,
                      "end": 4694,
                      "name": "PUSHIMMUTABLE",
                      "source": 2,
                      "value": "468"
                    },
                    {
                      "begin": 4671,
                      "end": 4694,
                      "name": "PUSH",
                      "source": 2,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4671,
                      "end": 4694,
                      "name": "AND",
                      "source": 2
                    },
                    {
                      "begin": 4679,
                      "end": 4683,
                      "name": "ADDRESS",
                      "source": 2
                    },
                    {
                      "begin": 4671,
                      "end": 4694,
                      "name": "PUSH",
                      "source": 2,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4671,
                      "end": 4694,
                      "name": "AND",
                      "source": 2
                    },
                    {
                      "begin": 4671,
                      "end": 4694,
                      "name": "EQ",
                      "source": 2
                    },
                    {
                      "begin": 4671,
                      "end": 4791,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 4671,
                      "end": 4791,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "289"
                    },
                    {
                      "begin": 4671,
                      "end": 4791,
                      "name": "JUMPI",
                      "source": 2
                    },
                    {
                      "begin": 4671,
                      "end": 4791,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 4785,
                      "end": 4791,
                      "name": "PUSHIMMUTABLE",
                      "source": 2,
                      "value": "468"
                    },
                    {
                      "begin": 4749,
                      "end": 4791,
                      "name": "PUSH",
                      "source": 2,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4749,
                      "end": 4791,
                      "name": "AND",
                      "source": 2
                    },
                    {
                      "begin": 4749,
                      "end": 4781,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "290"
                    },
                    {
                      "begin": 4749,
                      "end": 4779,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "291"
                    },
                    {
                      "begin": 4749,
                      "end": 4781,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 4749,
                      "end": 4781,
                      "name": "tag",
                      "source": 2,
                      "value": "290"
                    },
                    {
                      "begin": 4749,
                      "end": 4781,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 4749,
                      "end": 4791,
                      "name": "PUSH",
                      "source": 2,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4749,
                      "end": 4791,
                      "name": "AND",
                      "source": 2
                    },
                    {
                      "begin": 4749,
                      "end": 4791,
                      "name": "EQ",
                      "source": 2
                    },
                    {
                      "begin": 4749,
                      "end": 4791,
                      "name": "ISZERO",
                      "source": 2
                    },
                    {
                      "begin": 4671,
                      "end": 4791,
                      "name": "tag",
                      "source": 2,
                      "value": "289"
                    },
                    {
                      "begin": 4671,
                      "end": 4791,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 4654,
                      "end": 4905,
                      "name": "ISZERO",
                      "source": 2
                    },
                    {
                      "begin": 4654,
                      "end": 4905,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "292"
                    },
                    {
                      "begin": 4654,
                      "end": 4905,
                      "name": "JUMPI",
                      "source": 2
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "PUSH",
                      "source": 2,
                      "value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "MSTORE",
                      "source": 2
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "PUSH",
                      "source": 2,
                      "value": "4"
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "SUB",
                      "source": 2
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 4865,
                      "end": 4894,
                      "name": "REVERT",
                      "source": 2
                    },
                    {
                      "begin": 4654,
                      "end": 4905,
                      "name": "tag",
                      "source": 2,
                      "value": "292"
                    },
                    {
                      "begin": 4654,
                      "end": 4905,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 4599,
                      "end": 4911,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 1986,
                      "end": 2102,
                      "name": "tag",
                      "source": 14,
                      "value": "203"
                    },
                    {
                      "begin": 1986,
                      "end": 2102,
                      "name": "JUMPDEST",
                      "source": 14
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "294"
                    },
                    {
                      "begin": 2334,
                      "end": 2345,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "174"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "tag",
                      "source": 0,
                      "value": "294"
                    },
                    {
                      "begin": 2334,
                      "end": 2347,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 1986,
                      "end": 2102,
                      "name": "POP",
                      "source": 14
                    },
                    {
                      "begin": 1986,
                      "end": 2102,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 14
                    },
                    {
                      "begin": 6052,
                      "end": 6590,
                      "name": "tag",
                      "source": 2,
                      "value": "205"
                    },
                    {
                      "begin": 6052,
                      "end": 6590,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 6169,
                      "end": 6186,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6201,
                      "name": "PUSH",
                      "source": 2,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6151,
                      "end": 6201,
                      "name": "AND",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6201,
                      "name": "PUSH",
                      "source": 2,
                      "value": "52D1902D"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "FFFFFFFF"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "AND",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "E0"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "SHL",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "MSTORE",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "4"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "20"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP4",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "SUB",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP7",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "GAS",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "STATICCALL",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "SWAP3",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "ISZERO",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "297"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "JUMPI",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "RETURNDATASIZE",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "1F"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "NOT",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "1F"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP3",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "AND",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP3",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "MSTORE",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "298"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "299"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "tag",
                      "source": 2,
                      "value": "298"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "PUSH",
                      "source": 2,
                      "value": "1"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "tag",
                      "source": 2,
                      "value": "297"
                    },
                    {
                      "begin": 6151,
                      "end": 6203,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 6147,
                      "end": 6584,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "300"
                    },
                    {
                      "begin": 6147,
                      "end": 6584,
                      "name": "JUMPI",
                      "source": 2
                    },
                    {
                      "begin": 6555,
                      "end": 6572,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "PUSH",
                      "source": 2,
                      "value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "MSTORE",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "PUSH",
                      "source": 2,
                      "value": "4"
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "304"
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "80"
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "tag",
                      "source": 2,
                      "value": "304"
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "SUB",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 6513,
                      "end": 6573,
                      "name": "REVERT",
                      "source": 2
                    },
                    {
                      "begin": 6147,
                      "end": 6584,
                      "name": "tag",
                      "source": 2,
                      "value": "300"
                    },
                    {
                      "begin": 6147,
                      "end": 6584,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 1327,
                      "end": 1393,
                      "name": "PUSH",
                      "source": 8,
                      "value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
                    },
                    {
                      "begin": 6253,
                      "end": 6285,
                      "name": "PUSH",
                      "source": 2,
                      "value": "0"
                    },
                    {
                      "begin": 6253,
                      "end": 6285,
                      "name": "SHL",
                      "source": 2
                    },
                    {
                      "begin": 6245,
                      "end": 6249,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 6245,
                      "end": 6285,
                      "name": "EQ",
                      "source": 2
                    },
                    {
                      "begin": 6241,
                      "end": 6361,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "306"
                    },
                    {
                      "begin": 6241,
                      "end": 6361,
                      "name": "JUMPI",
                      "source": 2
                    },
                    {
                      "begin": 6341,
                      "end": 6345,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "PUSH",
                      "source": 2,
                      "value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "MSTORE",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "PUSH",
                      "source": 2,
                      "value": "4"
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "307"
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "94"
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "tag",
                      "source": 2,
                      "value": "307"
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "SUB",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 6312,
                      "end": 6346,
                      "name": "REVERT",
                      "source": 2
                    },
                    {
                      "begin": 6241,
                      "end": 6361,
                      "name": "tag",
                      "source": 2,
                      "value": "306"
                    },
                    {
                      "begin": 6241,
                      "end": 6361,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 6374,
                      "end": 6428,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "308"
                    },
                    {
                      "begin": 6404,
                      "end": 6421,
                      "name": "DUP4",
                      "source": 2
                    },
                    {
                      "begin": 6423,
                      "end": 6427,
                      "name": "DUP4",
                      "source": 2
                    },
                    {
                      "begin": 6374,
                      "end": 6403,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "309"
                    },
                    {
                      "begin": 6374,
                      "end": 6428,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 6374,
                      "end": 6428,
                      "name": "tag",
                      "source": 2,
                      "value": "308"
                    },
                    {
                      "begin": 6374,
                      "end": 6428,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 6204,
                      "end": 6439,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 6052,
                      "end": 6590,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 6052,
                      "end": 6590,
                      "name": "POP",
                      "source": 2
                    },
                    {
                      "begin": 6052,
                      "end": 6590,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 5028,
                      "end": 5241,
                      "name": "tag",
                      "source": 2,
                      "value": "208"
                    },
                    {
                      "begin": 5028,
                      "end": 5241,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 5111,
                      "end": 5117,
                      "name": "PUSHIMMUTABLE",
                      "source": 2,
                      "value": "468"
                    },
                    {
                      "begin": 5094,
                      "end": 5117,
                      "name": "PUSH",
                      "source": 2,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5094,
                      "end": 5117,
                      "name": "AND",
                      "source": 2
                    },
                    {
                      "begin": 5102,
                      "end": 5106,
                      "name": "ADDRESS",
                      "source": 2
                    },
                    {
                      "begin": 5094,
                      "end": 5117,
                      "name": "PUSH",
                      "source": 2,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5094,
                      "end": 5117,
                      "name": "AND",
                      "source": 2
                    },
                    {
                      "begin": 5094,
                      "end": 5117,
                      "name": "EQ",
                      "source": 2
                    },
                    {
                      "begin": 5090,
                      "end": 5235,
                      "name": "PUSH [tag]",
                      "source": 2,
                      "value": "311"
                    },
                    {
                      "begin": 5090,
                      "end": 5235,
                      "name": "JUMPI",
                      "source": 2
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "PUSH",
                      "source": 2,
                      "value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "DUP2",
                      "source": 2
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "MSTORE",
                      "source": 2
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "PUSH",
                      "source": 2,
                      "value": "4"
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "ADD",
                      "source": 2
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "PUSH",
                      "source": 2,
                      "value": "40"
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "MLOAD",
                      "source": 2
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "DUP1",
                      "source": 2
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "SWAP2",
                      "source": 2
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "SUB",
                      "source": 2
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "SWAP1",
                      "source": 2
                    },
                    {
                      "begin": 5195,
                      "end": 5224,
                      "name": "REVERT",
                      "source": 2
                    },
                    {
                      "begin": 5090,
                      "end": 5235,
                      "name": "tag",
                      "source": 2,
                      "value": "311"
                    },
                    {
                      "begin": 5090,
                      "end": 5235,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 5028,
                      "end": 5241,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 3774,
                      "end": 4022,
                      "name": "tag",
                      "source": 0,
                      "value": "216"
                    },
                    {
                      "begin": 3774,
                      "end": 4022,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3847,
                      "end": 3871,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3874,
                      "end": 3894,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "313"
                    },
                    {
                      "begin": 3874,
                      "end": 3892,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "227"
                    },
                    {
                      "begin": 3874,
                      "end": 3894,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 3874,
                      "end": 3894,
                      "name": "tag",
                      "source": 0,
                      "value": "313"
                    },
                    {
                      "begin": 3874,
                      "end": 3894,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 3847,
                      "end": 3894,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3847,
                      "end": 3894,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 3904,
                      "end": 3920,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3923,
                      "end": 3924,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "SLOAD",
                      "source": 0
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "PUSH",
                      "source": 0,
                      "value": "100"
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "EXP",
                      "source": 0
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "DIV",
                      "source": 0
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3923,
                      "end": 3931,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 3904,
                      "end": 3931,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3904,
                      "end": 3931,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 3952,
                      "end": 3960,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3942,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3949,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3941,
                      "end": 3949,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3949,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "PUSH",
                      "source": 0,
                      "value": "100"
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "EXP",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "SLOAD",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "MUL",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "NOT",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "DUP4",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "MUL",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "OR",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "SSTORE",
                      "source": 0
                    },
                    {
                      "begin": 3941,
                      "end": 3960,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 4006,
                      "end": 4014,
                      "name": "DUP3",
                      "source": 0
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 3996,
                      "end": 4004,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "PUSH",
                      "source": 0,
                      "value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 3975,
                      "end": 4015,
                      "name": "LOG3",
                      "source": 0
                    },
                    {
                      "begin": 3837,
                      "end": 4022,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 3837,
                      "end": 4022,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 3774,
                      "end": 4022,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 3774,
                      "end": 4022,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 11993,
                      "end": 12470,
                      "name": "tag",
                      "source": 3,
                      "value": "220"
                    },
                    {
                      "begin": 11993,
                      "end": 12470,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 12092,
                      "end": 12116,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 12119,
                      "end": 12144,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "315"
                    },
                    {
                      "begin": 12129,
                      "end": 12134,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 12136,
                      "end": 12143,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 12119,
                      "end": 12128,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "144"
                    },
                    {
                      "begin": 12119,
                      "end": 12144,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 12119,
                      "end": 12144,
                      "name": "tag",
                      "source": 3,
                      "value": "315"
                    },
                    {
                      "begin": 12119,
                      "end": 12144,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 12092,
                      "end": 12144,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 12092,
                      "end": 12144,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 12178,
                      "end": 12195,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 12158,
                      "end": 12174,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 12158,
                      "end": 12195,
                      "name": "EQ",
                      "source": 3
                    },
                    {
                      "begin": 12154,
                      "end": 12464,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "316"
                    },
                    {
                      "begin": 12154,
                      "end": 12464,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 12234,
                      "end": 12239,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 12215,
                      "end": 12231,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 12215,
                      "end": 12239,
                      "name": "LT",
                      "source": 3
                    },
                    {
                      "begin": 12211,
                      "end": 12341,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 12211,
                      "end": 12341,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "317"
                    },
                    {
                      "begin": 12211,
                      "end": 12341,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 12293,
                      "end": 12300,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 12302,
                      "end": 12318,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 12320,
                      "end": 12325,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "318"
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "SWAP4",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "SWAP3",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "319"
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "tag",
                      "source": 3,
                      "value": "318"
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 12266,
                      "end": 12326,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 12211,
                      "end": 12341,
                      "name": "tag",
                      "source": 3,
                      "value": "317"
                    },
                    {
                      "begin": 12211,
                      "end": 12341,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 12382,
                      "end": 12439,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "320"
                    },
                    {
                      "begin": 12391,
                      "end": 12396,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 12398,
                      "end": 12405,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 12426,
                      "end": 12431,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 12407,
                      "end": 12423,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 12407,
                      "end": 12431,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 12433,
                      "end": 12438,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 12382,
                      "end": 12390,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "272"
                    },
                    {
                      "begin": 12382,
                      "end": 12439,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 12382,
                      "end": 12439,
                      "name": "tag",
                      "source": 3,
                      "value": "320"
                    },
                    {
                      "begin": 12382,
                      "end": 12439,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 12154,
                      "end": 12464,
                      "name": "tag",
                      "source": 3,
                      "value": "316"
                    },
                    {
                      "begin": 12154,
                      "end": 12464,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 12082,
                      "end": 12470,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11993,
                      "end": 12470,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11993,
                      "end": 12470,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11993,
                      "end": 12470,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11993,
                      "end": 12470,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 1192,
                      "end": 1351,
                      "name": "tag",
                      "source": 0,
                      "value": "227"
                    },
                    {
                      "begin": 1192,
                      "end": 1351,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 1244,
                      "end": 1268,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 1313,
                      "end": 1335,
                      "name": "PUSH",
                      "source": 0,
                      "value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
                    },
                    {
                      "begin": 1303,
                      "end": 1335,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 1303,
                      "end": 1335,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 1192,
                      "end": 1351,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 1192,
                      "end": 1351,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 8737,
                      "end": 8907,
                      "name": "tag",
                      "source": 1,
                      "value": "239"
                    },
                    {
                      "begin": 8737,
                      "end": 8907,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8795,
                      "end": 8825,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 8870,
                      "end": 8891,
                      "name": "PUSH",
                      "source": 1,
                      "value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
                    },
                    {
                      "begin": 8860,
                      "end": 8891,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8860,
                      "end": 8891,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8737,
                      "end": 8907,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8737,
                      "end": 8907,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 2577,
                      "end": 2724,
                      "name": "tag",
                      "source": 3,
                      "value": "247"
                    },
                    {
                      "begin": 2577,
                      "end": 2724,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "324"
                    },
                    {
                      "begin": 6931,
                      "end": 6949,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "325"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "tag",
                      "source": 1,
                      "value": "324"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2679,
                      "end": 2717,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "327"
                    },
                    {
                      "begin": 2702,
                      "end": 2707,
                      "modifierDepth": 1,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 2709,
                      "end": 2716,
                      "modifierDepth": 1,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 2679,
                      "end": 2701,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "328"
                    },
                    {
                      "begin": 2679,
                      "end": 2717,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 2679,
                      "end": 2717,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 3,
                      "value": "327"
                    },
                    {
                      "begin": 2679,
                      "end": 2717,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 2577,
                      "end": 2724,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 2577,
                      "end": 2724,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 2577,
                      "end": 2724,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 666,
                      "end": 731,
                      "name": "tag",
                      "source": 4,
                      "value": "249"
                    },
                    {
                      "begin": 666,
                      "end": 731,
                      "name": "JUMPDEST",
                      "source": 4
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "330"
                    },
                    {
                      "begin": 6931,
                      "end": 6949,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "325"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "tag",
                      "source": 1,
                      "value": "330"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 666,
                      "end": 731,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 4
                    },
                    {
                      "begin": 1847,
                      "end": 1974,
                      "name": "tag",
                      "source": 0,
                      "value": "251"
                    },
                    {
                      "begin": 1847,
                      "end": 1974,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "333"
                    },
                    {
                      "begin": 6931,
                      "end": 6949,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "325"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "tag",
                      "source": 1,
                      "value": "333"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 1929,
                      "end": 1967,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "335"
                    },
                    {
                      "begin": 1954,
                      "end": 1966,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 1929,
                      "end": 1953,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "336"
                    },
                    {
                      "begin": 1929,
                      "end": 1967,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 1929,
                      "end": 1967,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 0,
                      "value": "335"
                    },
                    {
                      "begin": 1929,
                      "end": 1967,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 1847,
                      "end": 1974,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 1847,
                      "end": 1974,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2968,
                      "end": 3035,
                      "name": "tag",
                      "source": 2,
                      "value": "253"
                    },
                    {
                      "begin": 2968,
                      "end": 3035,
                      "name": "JUMPDEST",
                      "source": 2
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "338"
                    },
                    {
                      "begin": 6931,
                      "end": 6949,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "325"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "tag",
                      "source": 1,
                      "value": "338"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2968,
                      "end": 3035,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 2
                    },
                    {
                      "begin": 11224,
                      "end": 11711,
                      "name": "tag",
                      "source": 3,
                      "value": "272"
                    },
                    {
                      "begin": 11224,
                      "end": 11711,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 11332,
                      "end": 11354,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 11357,
                      "end": 11375,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "341"
                    },
                    {
                      "begin": 11357,
                      "end": 11373,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "160"
                    },
                    {
                      "begin": 11357,
                      "end": 11375,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 11357,
                      "end": 11375,
                      "name": "tag",
                      "source": 3,
                      "value": "341"
                    },
                    {
                      "begin": 11357,
                      "end": 11375,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 11332,
                      "end": 11375,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 11332,
                      "end": 11375,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11406,
                      "end": 11407,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 11389,
                      "end": 11408,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11389,
                      "end": 11408,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 11389,
                      "end": 11394,
                      "name": "DUP6",
                      "source": 3
                    },
                    {
                      "begin": 11389,
                      "end": 11408,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11389,
                      "end": 11408,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 11389,
                      "end": 11408,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 11385,
                      "end": 11474,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "342"
                    },
                    {
                      "begin": 11385,
                      "end": 11474,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 11460,
                      "end": 11461,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "PUSH",
                      "source": 3,
                      "value": "E602DF0500000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "343"
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "80"
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "tag",
                      "source": 3,
                      "value": "343"
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 11431,
                      "end": 11463,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 11385,
                      "end": 11474,
                      "name": "tag",
                      "source": 3,
                      "value": "342"
                    },
                    {
                      "begin": 11385,
                      "end": 11474,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 11506,
                      "end": 11507,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 11487,
                      "end": 11508,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11487,
                      "end": 11508,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 11487,
                      "end": 11494,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 11487,
                      "end": 11508,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11487,
                      "end": 11508,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 11487,
                      "end": 11508,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 11483,
                      "end": 11573,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "344"
                    },
                    {
                      "begin": 11483,
                      "end": 11573,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 11559,
                      "end": 11560,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "PUSH",
                      "source": 3,
                      "value": "94280D6200000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "345"
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "80"
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "tag",
                      "source": 3,
                      "value": "345"
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 11531,
                      "end": 11562,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 11483,
                      "end": 11573,
                      "name": "tag",
                      "source": 3,
                      "value": "344"
                    },
                    {
                      "begin": 11483,
                      "end": 11573,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 11614,
                      "end": 11619,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11583,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11595,
                      "name": "PUSH",
                      "source": 3,
                      "value": "1"
                    },
                    {
                      "begin": 11582,
                      "end": 11595,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 11596,
                      "end": 11601,
                      "name": "DUP8",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 11582,
                      "end": 11602,
                      "name": "KECCAK256",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 11603,
                      "end": 11610,
                      "name": "DUP7",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 11582,
                      "end": 11611,
                      "name": "KECCAK256",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11619,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11619,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11619,
                      "name": "SSTORE",
                      "source": 3
                    },
                    {
                      "begin": 11582,
                      "end": 11619,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11633,
                      "end": 11642,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 11629,
                      "end": 11705,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 11629,
                      "end": 11705,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "346"
                    },
                    {
                      "begin": 11629,
                      "end": 11705,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 11679,
                      "end": 11686,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 11672,
                      "end": 11677,
                      "name": "DUP6",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "PUSH",
                      "source": 3,
                      "value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
                    },
                    {
                      "begin": 11688,
                      "end": 11693,
                      "name": "DUP6",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "347"
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "56"
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "tag",
                      "source": 3,
                      "value": "347"
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 11663,
                      "end": 11694,
                      "name": "LOG3",
                      "source": 3
                    },
                    {
                      "begin": 11629,
                      "end": 11705,
                      "name": "tag",
                      "source": 3,
                      "value": "346"
                    },
                    {
                      "begin": 11629,
                      "end": 11705,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 11322,
                      "end": 11711,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11224,
                      "end": 11711,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11224,
                      "end": 11711,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11224,
                      "end": 11711,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11224,
                      "end": 11711,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 11224,
                      "end": 11711,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 7483,
                      "end": 8653,
                      "name": "tag",
                      "source": 3,
                      "value": "283"
                    },
                    {
                      "begin": 7483,
                      "end": 8653,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 7568,
                      "end": 7590,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 7593,
                      "end": 7611,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "349"
                    },
                    {
                      "begin": 7593,
                      "end": 7609,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "160"
                    },
                    {
                      "begin": 7593,
                      "end": 7611,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 7593,
                      "end": 7611,
                      "name": "tag",
                      "source": 3,
                      "value": "349"
                    },
                    {
                      "begin": 7593,
                      "end": 7611,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 7568,
                      "end": 7611,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 7568,
                      "end": 7611,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7641,
                      "end": 7642,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 7625,
                      "end": 7643,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7625,
                      "end": 7643,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 7625,
                      "end": 7629,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 7625,
                      "end": 7643,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7625,
                      "end": 7643,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 7625,
                      "end": 7643,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 7621,
                      "end": 8167,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "350"
                    },
                    {
                      "begin": 7621,
                      "end": 8167,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 7779,
                      "end": 7784,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7762,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7775,
                      "name": "PUSH",
                      "source": 3,
                      "value": "2"
                    },
                    {
                      "begin": 7761,
                      "end": 7775,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7775,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "351"
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "352"
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "tag",
                      "source": 3,
                      "value": "351"
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "SWAP3",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "SSTORE",
                      "source": 3
                    },
                    {
                      "begin": 7761,
                      "end": 7784,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7621,
                      "end": 8167,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "353"
                    },
                    {
                      "begin": 7621,
                      "end": 8167,
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 7621,
                      "end": 8167,
                      "name": "tag",
                      "source": 3,
                      "value": "350"
                    },
                    {
                      "begin": 7621,
                      "end": 8167,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 7815,
                      "end": 7834,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 7837,
                      "end": 7838,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7848,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 7837,
                      "end": 7848,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 7849,
                      "end": 7853,
                      "name": "DUP7",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "KECCAK256",
                      "source": 3
                    },
                    {
                      "begin": 7837,
                      "end": 7854,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 7815,
                      "end": 7854,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 7815,
                      "end": 7854,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7886,
                      "end": 7891,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 7872,
                      "end": 7883,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 7872,
                      "end": 7891,
                      "name": "LT",
                      "source": 3
                    },
                    {
                      "begin": 7868,
                      "end": 7983,
                      "name": "ISZERO",
                      "source": 3
                    },
                    {
                      "begin": 7868,
                      "end": 7983,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "354"
                    },
                    {
                      "begin": 7868,
                      "end": 7983,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 7943,
                      "end": 7947,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 7949,
                      "end": 7960,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 7962,
                      "end": 7967,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "PUSH",
                      "source": 3,
                      "value": "E450D38C00000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "355"
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "SWAP4",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "SWAP3",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "319"
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "tag",
                      "source": 3,
                      "value": "355"
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 7918,
                      "end": 7968,
                      "name": "REVERT",
                      "source": 3
                    },
                    {
                      "begin": 7868,
                      "end": 7983,
                      "name": "tag",
                      "source": 3,
                      "value": "354"
                    },
                    {
                      "begin": 7868,
                      "end": 7983,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 8137,
                      "end": 8142,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 8123,
                      "end": 8134,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8123,
                      "end": 8142,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8104,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8114,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 8103,
                      "end": 8114,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 8115,
                      "end": 8119,
                      "name": "DUP8",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 8103,
                      "end": 8120,
                      "name": "KECCAK256",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8142,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8142,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8142,
                      "name": "SSTORE",
                      "source": 3
                    },
                    {
                      "begin": 8103,
                      "end": 8142,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7801,
                      "end": 8167,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7621,
                      "end": 8167,
                      "name": "tag",
                      "source": 3,
                      "value": "353"
                    },
                    {
                      "begin": 7621,
                      "end": 8167,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 8195,
                      "end": 8196,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 8181,
                      "end": 8197,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8181,
                      "end": 8197,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 8181,
                      "end": 8183,
                      "name": "DUP4",
                      "source": 3
                    },
                    {
                      "begin": 8181,
                      "end": 8197,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8181,
                      "end": 8197,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 8181,
                      "end": 8197,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 8177,
                      "end": 8606,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "356"
                    },
                    {
                      "begin": 8177,
                      "end": 8606,
                      "name": "JUMPI",
                      "source": 3
                    },
                    {
                      "begin": 8362,
                      "end": 8367,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8345,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8358,
                      "name": "PUSH",
                      "source": 3,
                      "value": "2"
                    },
                    {
                      "begin": 8344,
                      "end": 8358,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8358,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "SWAP3",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "SSTORE",
                      "source": 3
                    },
                    {
                      "begin": 8344,
                      "end": 8367,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 8177,
                      "end": 8606,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "357"
                    },
                    {
                      "begin": 8177,
                      "end": 8606,
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 8177,
                      "end": 8606,
                      "name": "tag",
                      "source": 3,
                      "value": "356"
                    },
                    {
                      "begin": 8177,
                      "end": 8606,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 8576,
                      "end": 8581,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8558,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8568,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 8557,
                      "end": 8568,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 8569,
                      "end": 8571,
                      "name": "DUP6",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "MSTORE",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "20"
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "KECCAK256",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8572,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "SLOAD",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "SWAP3",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "SSTORE",
                      "source": 3
                    },
                    {
                      "begin": 8557,
                      "end": 8581,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 8177,
                      "end": 8606,
                      "name": "tag",
                      "source": 3,
                      "value": "357"
                    },
                    {
                      "begin": 8177,
                      "end": 8606,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 8636,
                      "end": 8638,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 8630,
                      "end": 8634,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "PUSH",
                      "source": 3,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "AND",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "PUSH",
                      "source": 3,
                      "value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
                    },
                    {
                      "begin": 8640,
                      "end": 8645,
                      "name": "DUP5",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "358"
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "56"
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "tag",
                      "source": 3,
                      "value": "358"
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "PUSH",
                      "source": 3,
                      "value": "40"
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "MLOAD",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "DUP1",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "SUB",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 8621,
                      "end": 8646,
                      "name": "LOG3",
                      "source": 3
                    },
                    {
                      "begin": 7558,
                      "end": 8653,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7483,
                      "end": 8653,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7483,
                      "end": 8653,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7483,
                      "end": 8653,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 7483,
                      "end": 8653,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 1957,
                      "end": 2095,
                      "name": "tag",
                      "source": 8,
                      "value": "291"
                    },
                    {
                      "begin": 1957,
                      "end": 2095,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2009,
                      "end": 2016,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 2035,
                      "end": 2082,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "360"
                    },
                    {
                      "begin": 1327,
                      "end": 1393,
                      "name": "PUSH",
                      "source": 8,
                      "value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
                    },
                    {
                      "begin": 2062,
                      "end": 2081,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 2062,
                      "end": 2081,
                      "name": "SHL",
                      "source": 8
                    },
                    {
                      "begin": 2035,
                      "end": 2061,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "361"
                    },
                    {
                      "begin": 2035,
                      "end": 2082,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 2035,
                      "end": 2082,
                      "name": "tag",
                      "source": 8,
                      "value": "360"
                    },
                    {
                      "begin": 2035,
                      "end": 2082,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "ADD",
                      "source": 8
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "SLOAD",
                      "source": 8
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "PUSH",
                      "source": 8,
                      "value": "100"
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "EXP",
                      "source": 8
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "DIV",
                      "source": 8
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "PUSH",
                      "source": 8,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2035,
                      "end": 2088,
                      "name": "AND",
                      "source": 8
                    },
                    {
                      "begin": 2028,
                      "end": 2088,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 2028,
                      "end": 2088,
                      "name": "POP",
                      "source": 8
                    },
                    {
                      "begin": 1957,
                      "end": 2095,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 1957,
                      "end": 2095,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 2779,
                      "end": 3114,
                      "name": "tag",
                      "source": 8,
                      "value": "309"
                    },
                    {
                      "begin": 2779,
                      "end": 3114,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2870,
                      "end": 2907,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "363"
                    },
                    {
                      "begin": 2889,
                      "end": 2906,
                      "name": "DUP3",
                      "source": 8
                    },
                    {
                      "begin": 2870,
                      "end": 2888,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "364"
                    },
                    {
                      "begin": 2870,
                      "end": 2907,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 2870,
                      "end": 2907,
                      "name": "tag",
                      "source": 8,
                      "value": "363"
                    },
                    {
                      "begin": 2870,
                      "end": 2907,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2931,
                      "end": 2948,
                      "name": "DUP2",
                      "source": 8
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "PUSH",
                      "source": 8,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "AND",
                      "source": 8
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "PUSH",
                      "source": 8,
                      "value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "PUSH",
                      "source": 8,
                      "value": "40"
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "MLOAD",
                      "source": 8
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "PUSH",
                      "source": 8,
                      "value": "40"
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "MLOAD",
                      "source": 8
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "DUP1",
                      "source": 8
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "SWAP2",
                      "source": 8
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "SUB",
                      "source": 8
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 2922,
                      "end": 2949,
                      "name": "LOG2",
                      "source": 8
                    },
                    {
                      "begin": 2978,
                      "end": 2979,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 2964,
                      "end": 2968,
                      "name": "DUP2",
                      "source": 8
                    },
                    {
                      "begin": 2964,
                      "end": 2975,
                      "name": "MLOAD",
                      "source": 8
                    },
                    {
                      "begin": 2964,
                      "end": 2979,
                      "name": "GT",
                      "source": 8
                    },
                    {
                      "begin": 2960,
                      "end": 3108,
                      "name": "ISZERO",
                      "source": 8
                    },
                    {
                      "begin": 2960,
                      "end": 3108,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "365"
                    },
                    {
                      "begin": 2960,
                      "end": 3108,
                      "name": "JUMPI",
                      "source": 8
                    },
                    {
                      "begin": 2995,
                      "end": 3048,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "366"
                    },
                    {
                      "begin": 3024,
                      "end": 3041,
                      "name": "DUP3",
                      "source": 8
                    },
                    {
                      "begin": 3043,
                      "end": 3047,
                      "name": "DUP3",
                      "source": 8
                    },
                    {
                      "begin": 2995,
                      "end": 3023,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "367"
                    },
                    {
                      "begin": 2995,
                      "end": 3048,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 2995,
                      "end": 3048,
                      "name": "tag",
                      "source": 8,
                      "value": "366"
                    },
                    {
                      "begin": 2995,
                      "end": 3048,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2995,
                      "end": 3048,
                      "name": "POP",
                      "source": 8
                    },
                    {
                      "begin": 2960,
                      "end": 3108,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "368"
                    },
                    {
                      "begin": 2960,
                      "end": 3108,
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 2960,
                      "end": 3108,
                      "name": "tag",
                      "source": 8,
                      "value": "365"
                    },
                    {
                      "begin": 2960,
                      "end": 3108,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 3079,
                      "end": 3097,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "369"
                    },
                    {
                      "begin": 3079,
                      "end": 3095,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "370"
                    },
                    {
                      "begin": 3079,
                      "end": 3097,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 3079,
                      "end": 3097,
                      "name": "tag",
                      "source": 8,
                      "value": "369"
                    },
                    {
                      "begin": 3079,
                      "end": 3097,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2960,
                      "end": 3108,
                      "name": "tag",
                      "source": 8,
                      "value": "368"
                    },
                    {
                      "begin": 2960,
                      "end": 3108,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2779,
                      "end": 3114,
                      "name": "POP",
                      "source": 8
                    },
                    {
                      "begin": 2779,
                      "end": 3114,
                      "name": "POP",
                      "source": 8
                    },
                    {
                      "begin": 2779,
                      "end": 3114,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 7084,
                      "end": 7225,
                      "name": "tag",
                      "source": 1,
                      "value": "325"
                    },
                    {
                      "begin": 7084,
                      "end": 7225,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 7151,
                      "end": 7168,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "372"
                    },
                    {
                      "begin": 7151,
                      "end": 7166,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "373"
                    },
                    {
                      "begin": 7151,
                      "end": 7168,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 7151,
                      "end": 7168,
                      "name": "tag",
                      "source": 1,
                      "value": "372"
                    },
                    {
                      "begin": 7151,
                      "end": 7168,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 7146,
                      "end": 7219,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "374"
                    },
                    {
                      "begin": 7146,
                      "end": 7219,
                      "name": "JUMPI",
                      "source": 1
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "PUSH",
                      "source": 1,
                      "value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "DUP2",
                      "source": 1
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "MSTORE",
                      "source": 1
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "PUSH",
                      "source": 1,
                      "value": "4"
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "PUSH",
                      "source": 1,
                      "value": "40"
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "MLOAD",
                      "source": 1
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "DUP1",
                      "source": 1
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "SWAP2",
                      "source": 1
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "SUB",
                      "source": 1
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 7191,
                      "end": 7208,
                      "name": "REVERT",
                      "source": 1
                    },
                    {
                      "begin": 7146,
                      "end": 7219,
                      "name": "tag",
                      "source": 1,
                      "value": "374"
                    },
                    {
                      "begin": 7146,
                      "end": 7219,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 7084,
                      "end": 7225,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 2730,
                      "end": 2946,
                      "name": "tag",
                      "source": 3,
                      "value": "328"
                    },
                    {
                      "begin": 2730,
                      "end": 2946,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "376"
                    },
                    {
                      "begin": 6931,
                      "end": 6949,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "325"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "tag",
                      "source": 1,
                      "value": "376"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2842,
                      "end": 2864,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 3,
                      "value": "0"
                    },
                    {
                      "begin": 2867,
                      "end": 2885,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "378"
                    },
                    {
                      "begin": 2867,
                      "end": 2883,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "160"
                    },
                    {
                      "begin": 2867,
                      "end": 2885,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 2867,
                      "end": 2885,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 3,
                      "value": "378"
                    },
                    {
                      "begin": 2867,
                      "end": 2885,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 2842,
                      "end": 2885,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 2842,
                      "end": 2885,
                      "modifierDepth": 1,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 2905,
                      "end": 2910,
                      "modifierDepth": 1,
                      "name": "DUP3",
                      "source": 3
                    },
                    {
                      "begin": 2895,
                      "end": 2896,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 2895,
                      "end": 2902,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 3,
                      "value": "3"
                    },
                    {
                      "begin": 2895,
                      "end": 2902,
                      "modifierDepth": 1,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 2895,
                      "end": 2910,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 2895,
                      "end": 2910,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 2895,
                      "end": 2910,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "379"
                    },
                    {
                      "begin": 2895,
                      "end": 2910,
                      "modifierDepth": 1,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 2895,
                      "end": 2910,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 2895,
                      "end": 2910,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "380"
                    },
                    {
                      "begin": 2895,
                      "end": 2910,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 2895,
                      "end": 2910,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 3,
                      "value": "379"
                    },
                    {
                      "begin": 2895,
                      "end": 2910,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 2895,
                      "end": 2910,
                      "modifierDepth": 1,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 2932,
                      "end": 2939,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 2920,
                      "end": 2921,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 2920,
                      "end": 2929,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 3,
                      "value": "4"
                    },
                    {
                      "begin": 2920,
                      "end": 2929,
                      "modifierDepth": 1,
                      "name": "ADD",
                      "source": 3
                    },
                    {
                      "begin": 2920,
                      "end": 2939,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 2920,
                      "end": 2939,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 3
                    },
                    {
                      "begin": 2920,
                      "end": 2939,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "381"
                    },
                    {
                      "begin": 2920,
                      "end": 2939,
                      "modifierDepth": 1,
                      "name": "SWAP2",
                      "source": 3
                    },
                    {
                      "begin": 2920,
                      "end": 2939,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 3
                    },
                    {
                      "begin": 2920,
                      "end": 2939,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 3,
                      "value": "380"
                    },
                    {
                      "begin": 2920,
                      "end": 2939,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 2920,
                      "end": 2939,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 3,
                      "value": "381"
                    },
                    {
                      "begin": 2920,
                      "end": 2939,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 3
                    },
                    {
                      "begin": 2920,
                      "end": 2939,
                      "modifierDepth": 1,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 2832,
                      "end": 2946,
                      "modifierDepth": 1,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 2730,
                      "end": 2946,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 2730,
                      "end": 2946,
                      "name": "POP",
                      "source": 3
                    },
                    {
                      "begin": 2730,
                      "end": 2946,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 3
                    },
                    {
                      "begin": 1980,
                      "end": 2215,
                      "name": "tag",
                      "source": 0,
                      "value": "336"
                    },
                    {
                      "begin": 1980,
                      "end": 2215,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "383"
                    },
                    {
                      "begin": 6931,
                      "end": 6949,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "325"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "tag",
                      "source": 1,
                      "value": "383"
                    },
                    {
                      "begin": 6931,
                      "end": 6951,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 2100,
                      "end": 2101,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 2076,
                      "end": 2102,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2076,
                      "end": 2102,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 2076,
                      "end": 2088,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 2076,
                      "end": 2102,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2076,
                      "end": 2102,
                      "modifierDepth": 1,
                      "name": "AND",
                      "source": 0
                    },
                    {
                      "begin": 2076,
                      "end": 2102,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 2072,
                      "end": 2167,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "385"
                    },
                    {
                      "begin": 2072,
                      "end": 2167,
                      "modifierDepth": 1,
                      "name": "JUMPI",
                      "source": 0
                    },
                    {
                      "begin": 2153,
                      "end": 2154,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "0"
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "MSTORE",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "4"
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "ADD",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "386"
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "80"
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 0,
                      "value": "386"
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "PUSH",
                      "source": 0,
                      "value": "40"
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "MLOAD",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "DUP1",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "SWAP2",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "SUB",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "SWAP1",
                      "source": 0
                    },
                    {
                      "begin": 2125,
                      "end": 2156,
                      "modifierDepth": 1,
                      "name": "REVERT",
                      "source": 0
                    },
                    {
                      "begin": 2072,
                      "end": 2167,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 0,
                      "value": "385"
                    },
                    {
                      "begin": 2072,
                      "end": 2167,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 2176,
                      "end": 2208,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "387"
                    },
                    {
                      "begin": 2195,
                      "end": 2207,
                      "modifierDepth": 1,
                      "name": "DUP2",
                      "source": 0
                    },
                    {
                      "begin": 2176,
                      "end": 2194,
                      "modifierDepth": 1,
                      "name": "PUSH [tag]",
                      "source": 0,
                      "value": "216"
                    },
                    {
                      "begin": 2176,
                      "end": 2208,
                      "jumpType": "[in]",
                      "modifierDepth": 1,
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 2176,
                      "end": 2208,
                      "modifierDepth": 1,
                      "name": "tag",
                      "source": 0,
                      "value": "387"
                    },
                    {
                      "begin": 2176,
                      "end": 2208,
                      "modifierDepth": 1,
                      "name": "JUMPDEST",
                      "source": 0
                    },
                    {
                      "begin": 1980,
                      "end": 2215,
                      "name": "POP",
                      "source": 0
                    },
                    {
                      "begin": 1980,
                      "end": 2215,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 0
                    },
                    {
                      "begin": 1684,
                      "end": 1874,
                      "name": "tag",
                      "source": 13,
                      "value": "361"
                    },
                    {
                      "begin": 1684,
                      "end": 1874,
                      "name": "JUMPDEST",
                      "source": 13
                    },
                    {
                      "begin": 1745,
                      "end": 1766,
                      "name": "PUSH",
                      "source": 13,
                      "value": "0"
                    },
                    {
                      "begin": 1854,
                      "end": 1858,
                      "name": "DUP2",
                      "source": 13
                    },
                    {
                      "begin": 1844,
                      "end": 1858,
                      "name": "SWAP1",
                      "source": 13
                    },
                    {
                      "begin": 1844,
                      "end": 1858,
                      "name": "POP",
                      "source": 13
                    },
                    {
                      "begin": 1684,
                      "end": 1874,
                      "name": "SWAP2",
                      "source": 13
                    },
                    {
                      "begin": 1684,
                      "end": 1874,
                      "name": "SWAP1",
                      "source": 13
                    },
                    {
                      "begin": 1684,
                      "end": 1874,
                      "name": "POP",
                      "source": 13
                    },
                    {
                      "begin": 1684,
                      "end": 1874,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 13
                    },
                    {
                      "begin": 2186,
                      "end": 2467,
                      "name": "tag",
                      "source": 8,
                      "value": "364"
                    },
                    {
                      "begin": 2186,
                      "end": 2467,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2296,
                      "end": 2297,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 2263,
                      "end": 2280,
                      "name": "DUP2",
                      "source": 8
                    },
                    {
                      "begin": 2263,
                      "end": 2292,
                      "name": "PUSH",
                      "source": 8,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2263,
                      "end": 2292,
                      "name": "AND",
                      "source": 8
                    },
                    {
                      "begin": 2263,
                      "end": 2292,
                      "name": "EXTCODESIZE",
                      "source": 8
                    },
                    {
                      "begin": 2263,
                      "end": 2297,
                      "name": "SUB",
                      "source": 8
                    },
                    {
                      "begin": 2259,
                      "end": 2378,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "390"
                    },
                    {
                      "begin": 2259,
                      "end": 2378,
                      "name": "JUMPI",
                      "source": 8
                    },
                    {
                      "begin": 2349,
                      "end": 2366,
                      "name": "DUP1",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "PUSH",
                      "source": 8,
                      "value": "40"
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "MLOAD",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "PUSH",
                      "source": 8,
                      "value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "DUP2",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "MSTORE",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "PUSH",
                      "source": 8,
                      "value": "4"
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "ADD",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "391"
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "SWAP2",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "80"
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "tag",
                      "source": 8,
                      "value": "391"
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "PUSH",
                      "source": 8,
                      "value": "40"
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "MLOAD",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "DUP1",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "SWAP2",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "SUB",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 2320,
                      "end": 2367,
                      "name": "REVERT",
                      "source": 8
                    },
                    {
                      "begin": 2259,
                      "end": 2378,
                      "name": "tag",
                      "source": 8,
                      "value": "390"
                    },
                    {
                      "begin": 2259,
                      "end": 2378,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2443,
                      "end": 2460,
                      "name": "DUP1",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2434,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "392"
                    },
                    {
                      "begin": 1327,
                      "end": 1393,
                      "name": "PUSH",
                      "source": 8,
                      "value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
                    },
                    {
                      "begin": 2414,
                      "end": 2433,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 2414,
                      "end": 2433,
                      "name": "SHL",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2413,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "361"
                    },
                    {
                      "begin": 2387,
                      "end": 2434,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2434,
                      "name": "tag",
                      "source": 8,
                      "value": "392"
                    },
                    {
                      "begin": 2387,
                      "end": 2434,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2440,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 2387,
                      "end": 2440,
                      "name": "ADD",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2440,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "PUSH",
                      "source": 8,
                      "value": "100"
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "EXP",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "DUP2",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "SLOAD",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "DUP2",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "PUSH",
                      "source": 8,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "MUL",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "NOT",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "AND",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "DUP4",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "PUSH",
                      "source": 8,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "AND",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "MUL",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "OR",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "SSTORE",
                      "source": 8
                    },
                    {
                      "begin": 2387,
                      "end": 2460,
                      "name": "POP",
                      "source": 8
                    },
                    {
                      "begin": 2186,
                      "end": 2467,
                      "name": "POP",
                      "source": 8
                    },
                    {
                      "begin": 2186,
                      "end": 2467,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 4106,
                      "end": 4359,
                      "name": "tag",
                      "source": 12,
                      "value": "367"
                    },
                    {
                      "begin": 4106,
                      "end": 4359,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 4189,
                      "end": 4201,
                      "name": "PUSH",
                      "source": 12,
                      "value": "60"
                    },
                    {
                      "begin": 4214,
                      "end": 4226,
                      "name": "PUSH",
                      "source": 12,
                      "value": "0"
                    },
                    {
                      "begin": 4228,
                      "end": 4251,
                      "name": "DUP1",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4261,
                      "name": "DUP5",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4274,
                      "name": "PUSH",
                      "source": 12,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 4255,
                      "end": 4274,
                      "name": "AND",
                      "source": 12
                    },
                    {
                      "begin": 4275,
                      "end": 4279,
                      "name": "DUP5",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "40"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "MLOAD",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "394"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "SWAP2",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "SWAP1",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "395"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "tag",
                      "source": 12,
                      "value": "394"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "0"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "40"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "MLOAD",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "DUP1",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "DUP4",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "SUB",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "DUP2",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "DUP6",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "GAS",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "DELEGATECALL",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "SWAP2",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "RETURNDATASIZE",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "DUP1",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "0"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "DUP2",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "EQ",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "398"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "JUMPI",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "40"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "MLOAD",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "SWAP2",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "1F"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "NOT",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "3F"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "RETURNDATASIZE",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "ADD",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "AND",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "DUP3",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "ADD",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "40"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "MSTORE",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "RETURNDATASIZE",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "DUP3",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "MSTORE",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "RETURNDATASIZE",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "0"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "20"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "DUP5",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "ADD",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "RETURNDATACOPY",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "397"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "JUMP",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "tag",
                      "source": 12,
                      "value": "398"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "PUSH",
                      "source": 12,
                      "value": "60"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "SWAP2",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "tag",
                      "source": 12,
                      "value": "397"
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 4255,
                      "end": 4280,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4213,
                      "end": 4280,
                      "name": "SWAP2",
                      "source": 12
                    },
                    {
                      "begin": 4213,
                      "end": 4280,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4213,
                      "end": 4280,
                      "name": "SWAP2",
                      "source": 12
                    },
                    {
                      "begin": 4213,
                      "end": 4280,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4297,
                      "end": 4352,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "399"
                    },
                    {
                      "begin": 4324,
                      "end": 4330,
                      "name": "DUP6",
                      "source": 12
                    },
                    {
                      "begin": 4332,
                      "end": 4339,
                      "name": "DUP4",
                      "source": 12
                    },
                    {
                      "begin": 4341,
                      "end": 4351,
                      "name": "DUP4",
                      "source": 12
                    },
                    {
                      "begin": 4297,
                      "end": 4323,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "400"
                    },
                    {
                      "begin": 4297,
                      "end": 4352,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 12
                    },
                    {
                      "begin": 4297,
                      "end": 4352,
                      "name": "tag",
                      "source": 12,
                      "value": "399"
                    },
                    {
                      "begin": 4297,
                      "end": 4352,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 4290,
                      "end": 4352,
                      "name": "SWAP3",
                      "source": 12
                    },
                    {
                      "begin": 4290,
                      "end": 4352,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4290,
                      "end": 4352,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4290,
                      "end": 4352,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4106,
                      "end": 4359,
                      "name": "SWAP3",
                      "source": 12
                    },
                    {
                      "begin": 4106,
                      "end": 4359,
                      "name": "SWAP2",
                      "source": 12
                    },
                    {
                      "begin": 4106,
                      "end": 4359,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4106,
                      "end": 4359,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4106,
                      "end": 4359,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 12
                    },
                    {
                      "begin": 6598,
                      "end": 6720,
                      "name": "tag",
                      "source": 8,
                      "value": "370"
                    },
                    {
                      "begin": 6598,
                      "end": 6720,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 6660,
                      "end": 6661,
                      "name": "PUSH",
                      "source": 8,
                      "value": "0"
                    },
                    {
                      "begin": 6648,
                      "end": 6657,
                      "name": "CALLVALUE",
                      "source": 8
                    },
                    {
                      "begin": 6648,
                      "end": 6661,
                      "name": "GT",
                      "source": 8
                    },
                    {
                      "begin": 6644,
                      "end": 6714,
                      "name": "ISZERO",
                      "source": 8
                    },
                    {
                      "begin": 6644,
                      "end": 6714,
                      "name": "PUSH [tag]",
                      "source": 8,
                      "value": "402"
                    },
                    {
                      "begin": 6644,
                      "end": 6714,
                      "name": "JUMPI",
                      "source": 8
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "PUSH",
                      "source": 8,
                      "value": "40"
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "MLOAD",
                      "source": 8
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "PUSH",
                      "source": 8,
                      "value": "B398979F00000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "DUP2",
                      "source": 8
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "MSTORE",
                      "source": 8
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "PUSH",
                      "source": 8,
                      "value": "4"
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "ADD",
                      "source": 8
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "PUSH",
                      "source": 8,
                      "value": "40"
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "MLOAD",
                      "source": 8
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "DUP1",
                      "source": 8
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "SWAP2",
                      "source": 8
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "SUB",
                      "source": 8
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "SWAP1",
                      "source": 8
                    },
                    {
                      "begin": 6684,
                      "end": 6703,
                      "name": "REVERT",
                      "source": 8
                    },
                    {
                      "begin": 6644,
                      "end": 6714,
                      "name": "tag",
                      "source": 8,
                      "value": "402"
                    },
                    {
                      "begin": 6644,
                      "end": 6714,
                      "name": "JUMPDEST",
                      "source": 8
                    },
                    {
                      "begin": 6598,
                      "end": 6720,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 8
                    },
                    {
                      "begin": 8487,
                      "end": 8607,
                      "name": "tag",
                      "source": 1,
                      "value": "373"
                    },
                    {
                      "begin": 8487,
                      "end": 8607,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8537,
                      "end": 8541,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 8560,
                      "end": 8586,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "404"
                    },
                    {
                      "begin": 8560,
                      "end": 8584,
                      "name": "PUSH [tag]",
                      "source": 1,
                      "value": "239"
                    },
                    {
                      "begin": 8560,
                      "end": 8586,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 8560,
                      "end": 8586,
                      "name": "tag",
                      "source": 1,
                      "value": "404"
                    },
                    {
                      "begin": 8560,
                      "end": 8586,
                      "name": "JUMPDEST",
                      "source": 1
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "PUSH",
                      "source": 1,
                      "value": "0"
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "ADD",
                      "source": 1
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "PUSH",
                      "source": 1,
                      "value": "8"
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "SLOAD",
                      "source": 1
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "PUSH",
                      "source": 1,
                      "value": "100"
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "EXP",
                      "source": 1
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "DIV",
                      "source": 1
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "PUSH",
                      "source": 1,
                      "value": "FF"
                    },
                    {
                      "begin": 8560,
                      "end": 8600,
                      "name": "AND",
                      "source": 1
                    },
                    {
                      "begin": 8553,
                      "end": 8600,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8553,
                      "end": 8600,
                      "name": "POP",
                      "source": 1
                    },
                    {
                      "begin": 8487,
                      "end": 8607,
                      "name": "SWAP1",
                      "source": 1
                    },
                    {
                      "begin": 8487,
                      "end": 8607,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 1
                    },
                    {
                      "begin": 4625,
                      "end": 5207,
                      "name": "tag",
                      "source": 12,
                      "value": "400"
                    },
                    {
                      "begin": 4625,
                      "end": 5207,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 4769,
                      "end": 4781,
                      "name": "PUSH",
                      "source": 12,
                      "value": "60"
                    },
                    {
                      "begin": 4798,
                      "end": 4805,
                      "name": "DUP3",
                      "source": 12
                    },
                    {
                      "begin": 4793,
                      "end": 5201,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "406"
                    },
                    {
                      "begin": 4793,
                      "end": 5201,
                      "name": "JUMPI",
                      "source": 12
                    },
                    {
                      "begin": 4821,
                      "end": 4840,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "407"
                    },
                    {
                      "begin": 4829,
                      "end": 4839,
                      "name": "DUP3",
                      "source": 12
                    },
                    {
                      "begin": 4821,
                      "end": 4828,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "408"
                    },
                    {
                      "begin": 4821,
                      "end": 4840,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 12
                    },
                    {
                      "begin": 4821,
                      "end": 4840,
                      "name": "tag",
                      "source": 12,
                      "value": "407"
                    },
                    {
                      "begin": 4821,
                      "end": 4840,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 4793,
                      "end": 5201,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "409"
                    },
                    {
                      "begin": 4793,
                      "end": 5201,
                      "name": "JUMP",
                      "source": 12
                    },
                    {
                      "begin": 4793,
                      "end": 5201,
                      "name": "tag",
                      "source": 12,
                      "value": "406"
                    },
                    {
                      "begin": 4793,
                      "end": 5201,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 5066,
                      "end": 5067,
                      "name": "PUSH",
                      "source": 12,
                      "value": "0"
                    },
                    {
                      "begin": 5045,
                      "end": 5055,
                      "name": "DUP3",
                      "source": 12
                    },
                    {
                      "begin": 5045,
                      "end": 5062,
                      "name": "MLOAD",
                      "source": 12
                    },
                    {
                      "begin": 5045,
                      "end": 5067,
                      "name": "EQ",
                      "source": 12
                    },
                    {
                      "begin": 5045,
                      "end": 5094,
                      "name": "DUP1",
                      "source": 12
                    },
                    {
                      "begin": 5045,
                      "end": 5094,
                      "name": "ISZERO",
                      "source": 12
                    },
                    {
                      "begin": 5045,
                      "end": 5094,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "410"
                    },
                    {
                      "begin": 5045,
                      "end": 5094,
                      "name": "JUMPI",
                      "source": 12
                    },
                    {
                      "begin": 5045,
                      "end": 5094,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 5093,
                      "end": 5094,
                      "name": "PUSH",
                      "source": 12,
                      "value": "0"
                    },
                    {
                      "begin": 5071,
                      "end": 5077,
                      "name": "DUP5",
                      "source": 12
                    },
                    {
                      "begin": 5071,
                      "end": 5089,
                      "name": "PUSH",
                      "source": 12,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 5071,
                      "end": 5089,
                      "name": "AND",
                      "source": 12
                    },
                    {
                      "begin": 5071,
                      "end": 5089,
                      "name": "EXTCODESIZE",
                      "source": 12
                    },
                    {
                      "begin": 5071,
                      "end": 5094,
                      "name": "EQ",
                      "source": 12
                    },
                    {
                      "begin": 5045,
                      "end": 5094,
                      "name": "tag",
                      "source": 12,
                      "value": "410"
                    },
                    {
                      "begin": 5045,
                      "end": 5094,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 5041,
                      "end": 5160,
                      "name": "ISZERO",
                      "source": 12
                    },
                    {
                      "begin": 5041,
                      "end": 5160,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "411"
                    },
                    {
                      "begin": 5041,
                      "end": 5160,
                      "name": "JUMPI",
                      "source": 12
                    },
                    {
                      "begin": 5138,
                      "end": 5144,
                      "name": "DUP4",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "PUSH",
                      "source": 12,
                      "value": "40"
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "MLOAD",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "PUSH",
                      "source": 12,
                      "value": "9996B31500000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "DUP2",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "MSTORE",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "PUSH",
                      "source": 12,
                      "value": "4"
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "ADD",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "412"
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "SWAP2",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "SWAP1",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "80"
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "tag",
                      "source": 12,
                      "value": "412"
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "PUSH",
                      "source": 12,
                      "value": "40"
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "MLOAD",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "DUP1",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "SWAP2",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "SUB",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "SWAP1",
                      "source": 12
                    },
                    {
                      "begin": 5121,
                      "end": 5145,
                      "name": "REVERT",
                      "source": 12
                    },
                    {
                      "begin": 5041,
                      "end": 5160,
                      "name": "tag",
                      "source": 12,
                      "value": "411"
                    },
                    {
                      "begin": 5041,
                      "end": 5160,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 5180,
                      "end": 5190,
                      "name": "DUP2",
                      "source": 12
                    },
                    {
                      "begin": 5173,
                      "end": 5190,
                      "name": "SWAP1",
                      "source": 12
                    },
                    {
                      "begin": 5173,
                      "end": 5190,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 5173,
                      "end": 5190,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "405"
                    },
                    {
                      "begin": 5173,
                      "end": 5190,
                      "name": "JUMP",
                      "source": 12
                    },
                    {
                      "begin": 4793,
                      "end": 5201,
                      "name": "tag",
                      "source": 12,
                      "value": "409"
                    },
                    {
                      "begin": 4793,
                      "end": 5201,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 4625,
                      "end": 5207,
                      "name": "tag",
                      "source": 12,
                      "value": "405"
                    },
                    {
                      "begin": 4625,
                      "end": 5207,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 4625,
                      "end": 5207,
                      "name": "SWAP4",
                      "source": 12
                    },
                    {
                      "begin": 4625,
                      "end": 5207,
                      "name": "SWAP3",
                      "source": 12
                    },
                    {
                      "begin": 4625,
                      "end": 5207,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4625,
                      "end": 5207,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4625,
                      "end": 5207,
                      "name": "POP",
                      "source": 12
                    },
                    {
                      "begin": 4625,
                      "end": 5207,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 12
                    },
                    {
                      "begin": 5743,
                      "end": 6259,
                      "name": "tag",
                      "source": 12,
                      "value": "408"
                    },
                    {
                      "begin": 5743,
                      "end": 6259,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 5894,
                      "end": 5895,
                      "name": "PUSH",
                      "source": 12,
                      "value": "0"
                    },
                    {
                      "begin": 5874,
                      "end": 5884,
                      "name": "DUP2",
                      "source": 12
                    },
                    {
                      "begin": 5874,
                      "end": 5891,
                      "name": "MLOAD",
                      "source": 12
                    },
                    {
                      "begin": 5874,
                      "end": 5895,
                      "name": "GT",
                      "source": 12
                    },
                    {
                      "begin": 5870,
                      "end": 6253,
                      "name": "ISZERO",
                      "source": 12
                    },
                    {
                      "begin": 5870,
                      "end": 6253,
                      "name": "PUSH [tag]",
                      "source": 12,
                      "value": "414"
                    },
                    {
                      "begin": 5870,
                      "end": 6253,
                      "name": "JUMPI",
                      "source": 12
                    },
                    {
                      "begin": 6102,
                      "end": 6112,
                      "name": "DUP1",
                      "source": 12
                    },
                    {
                      "begin": 6096,
                      "end": 6113,
                      "name": "MLOAD",
                      "source": 12
                    },
                    {
                      "begin": 6158,
                      "end": 6173,
                      "name": "DUP1",
                      "source": 12
                    },
                    {
                      "begin": 6145,
                      "end": 6155,
                      "name": "DUP3",
                      "source": 12
                    },
                    {
                      "begin": 6141,
                      "end": 6143,
                      "name": "PUSH",
                      "source": 12,
                      "value": "20"
                    },
                    {
                      "begin": 6137,
                      "end": 6156,
                      "name": "ADD",
                      "source": 12
                    },
                    {
                      "begin": 6130,
                      "end": 6174,
                      "name": "REVERT",
                      "source": 12
                    },
                    {
                      "begin": 5870,
                      "end": 6253,
                      "name": "tag",
                      "source": 12,
                      "value": "414"
                    },
                    {
                      "begin": 5870,
                      "end": 6253,
                      "name": "JUMPDEST",
                      "source": 12
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "PUSH",
                      "source": 12,
                      "value": "40"
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "MLOAD",
                      "source": 12
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "PUSH",
                      "source": 12,
                      "value": "1425EA4200000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "DUP2",
                      "source": 12
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "MSTORE",
                      "source": 12
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "PUSH",
                      "source": 12,
                      "value": "4"
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "ADD",
                      "source": 12
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "PUSH",
                      "source": 12,
                      "value": "40"
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "MLOAD",
                      "source": 12
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "DUP1",
                      "source": 12
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "SWAP2",
                      "source": 12
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "SUB",
                      "source": 12
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "SWAP1",
                      "source": 12
                    },
                    {
                      "begin": 6225,
                      "end": 6242,
                      "name": "REVERT",
                      "source": 12
                    },
                    {
                      "begin": 7,
                      "end": 106,
                      "name": "tag",
                      "source": 15,
                      "value": "416"
                    },
                    {
                      "begin": 7,
                      "end": 106,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 59,
                      "end": 65,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 93,
                      "end": 98,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 87,
                      "end": 99,
                      "name": "MLOAD",
                      "source": 15
                    },
                    {
                      "begin": 77,
                      "end": 99,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 77,
                      "end": 99,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7,
                      "end": 106,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 7,
                      "end": 106,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 7,
                      "end": 106,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7,
                      "end": 106,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 112,
                      "end": 281,
                      "name": "tag",
                      "source": 15,
                      "value": "417"
                    },
                    {
                      "begin": 112,
                      "end": 281,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 196,
                      "end": 207,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 230,
                      "end": 236,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 225,
                      "end": 228,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 218,
                      "end": 237,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 270,
                      "end": 274,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 265,
                      "end": 268,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 261,
                      "end": 275,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 246,
                      "end": 275,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 246,
                      "end": 275,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 112,
                      "end": 281,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 112,
                      "end": 281,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 112,
                      "end": 281,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 112,
                      "end": 281,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 112,
                      "end": 281,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 287,
                      "end": 426,
                      "name": "tag",
                      "source": 15,
                      "value": "418"
                    },
                    {
                      "begin": 287,
                      "end": 426,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 376,
                      "end": 382,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 371,
                      "end": 374,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 366,
                      "end": 369,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 360,
                      "end": 383,
                      "name": "MCOPY",
                      "source": 15
                    },
                    {
                      "begin": 417,
                      "end": 418,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 408,
                      "end": 414,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 403,
                      "end": 406,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 399,
                      "end": 415,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 392,
                      "end": 419,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 287,
                      "end": 426,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 287,
                      "end": 426,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 287,
                      "end": 426,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 287,
                      "end": 426,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 432,
                      "end": 534,
                      "name": "tag",
                      "source": 15,
                      "value": "419"
                    },
                    {
                      "begin": 432,
                      "end": 534,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 473,
                      "end": 479,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 524,
                      "end": 526,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1F"
                    },
                    {
                      "begin": 520,
                      "end": 527,
                      "name": "NOT",
                      "source": 15
                    },
                    {
                      "begin": 515,
                      "end": 517,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1F"
                    },
                    {
                      "begin": 508,
                      "end": 513,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 504,
                      "end": 518,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 500,
                      "end": 528,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 490,
                      "end": 528,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 490,
                      "end": 528,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 432,
                      "end": 534,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 432,
                      "end": 534,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 432,
                      "end": 534,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 432,
                      "end": 534,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 540,
                      "end": 917,
                      "name": "tag",
                      "source": 15,
                      "value": "420"
                    },
                    {
                      "begin": 540,
                      "end": 917,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 628,
                      "end": 631,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 656,
                      "end": 695,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "485"
                    },
                    {
                      "begin": 689,
                      "end": 694,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 656,
                      "end": 695,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "416"
                    },
                    {
                      "begin": 656,
                      "end": 695,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 656,
                      "end": 695,
                      "name": "tag",
                      "source": 15,
                      "value": "485"
                    },
                    {
                      "begin": 656,
                      "end": 695,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 711,
                      "end": 782,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "486"
                    },
                    {
                      "begin": 775,
                      "end": 781,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 770,
                      "end": 773,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 711,
                      "end": 782,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "417"
                    },
                    {
                      "begin": 711,
                      "end": 782,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 711,
                      "end": 782,
                      "name": "tag",
                      "source": 15,
                      "value": "486"
                    },
                    {
                      "begin": 711,
                      "end": 782,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 704,
                      "end": 782,
                      "name": "SWAP4",
                      "source": 15
                    },
                    {
                      "begin": 704,
                      "end": 782,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 791,
                      "end": 856,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "487"
                    },
                    {
                      "begin": 849,
                      "end": 855,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 844,
                      "end": 847,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 837,
                      "end": 841,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 830,
                      "end": 835,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 826,
                      "end": 842,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 791,
                      "end": 856,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "418"
                    },
                    {
                      "begin": 791,
                      "end": 856,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 791,
                      "end": 856,
                      "name": "tag",
                      "source": 15,
                      "value": "487"
                    },
                    {
                      "begin": 791,
                      "end": 856,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 881,
                      "end": 910,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "488"
                    },
                    {
                      "begin": 903,
                      "end": 909,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 881,
                      "end": 910,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "419"
                    },
                    {
                      "begin": 881,
                      "end": 910,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 881,
                      "end": 910,
                      "name": "tag",
                      "source": 15,
                      "value": "488"
                    },
                    {
                      "begin": 881,
                      "end": 910,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 876,
                      "end": 879,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 872,
                      "end": 911,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 865,
                      "end": 911,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 865,
                      "end": 911,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 632,
                      "end": 917,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 540,
                      "end": 917,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 540,
                      "end": 917,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 540,
                      "end": 917,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 540,
                      "end": 917,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 540,
                      "end": 917,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 923,
                      "end": 1236,
                      "name": "tag",
                      "source": 15,
                      "value": "39"
                    },
                    {
                      "begin": 923,
                      "end": 1236,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1036,
                      "end": 1040,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1074,
                      "end": 1076,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 1063,
                      "end": 1072,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 1059,
                      "end": 1077,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 1051,
                      "end": 1077,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 1051,
                      "end": 1077,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 1123,
                      "end": 1132,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 1117,
                      "end": 1121,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 1113,
                      "end": 1133,
                      "name": "SUB",
                      "source": 15
                    },
                    {
                      "begin": 1109,
                      "end": 1110,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1098,
                      "end": 1107,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 1094,
                      "end": 1111,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 1087,
                      "end": 1134,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 1151,
                      "end": 1229,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "490"
                    },
                    {
                      "begin": 1224,
                      "end": 1228,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 1215,
                      "end": 1221,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 1151,
                      "end": 1229,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "420"
                    },
                    {
                      "begin": 1151,
                      "end": 1229,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 1151,
                      "end": 1229,
                      "name": "tag",
                      "source": 15,
                      "value": "490"
                    },
                    {
                      "begin": 1151,
                      "end": 1229,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1143,
                      "end": 1229,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 1143,
                      "end": 1229,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 923,
                      "end": 1236,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 923,
                      "end": 1236,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 923,
                      "end": 1236,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 923,
                      "end": 1236,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 923,
                      "end": 1236,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 1242,
                      "end": 1317,
                      "name": "tag",
                      "source": 15,
                      "value": "421"
                    },
                    {
                      "begin": 1242,
                      "end": 1317,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1275,
                      "end": 1281,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1308,
                      "end": 1310,
                      "name": "PUSH",
                      "source": 15,
                      "value": "40"
                    },
                    {
                      "begin": 1302,
                      "end": 1311,
                      "name": "MLOAD",
                      "source": 15
                    },
                    {
                      "begin": 1292,
                      "end": 1311,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 1292,
                      "end": 1311,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 1242,
                      "end": 1317,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 1242,
                      "end": 1317,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 1323,
                      "end": 1440,
                      "name": "tag",
                      "source": 15,
                      "value": "422"
                    },
                    {
                      "begin": 1323,
                      "end": 1440,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1432,
                      "end": 1433,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1429,
                      "end": 1430,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 1422,
                      "end": 1434,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 1446,
                      "end": 1563,
                      "name": "tag",
                      "source": 15,
                      "value": "423"
                    },
                    {
                      "begin": 1446,
                      "end": 1563,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1555,
                      "end": 1556,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1552,
                      "end": 1553,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 1545,
                      "end": 1557,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 1569,
                      "end": 1695,
                      "name": "tag",
                      "source": 15,
                      "value": "424"
                    },
                    {
                      "begin": 1569,
                      "end": 1695,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1606,
                      "end": 1613,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1646,
                      "end": 1688,
                      "name": "PUSH",
                      "source": 15,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 1639,
                      "end": 1644,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 1635,
                      "end": 1689,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 1624,
                      "end": 1689,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 1624,
                      "end": 1689,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 1569,
                      "end": 1695,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 1569,
                      "end": 1695,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 1569,
                      "end": 1695,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 1569,
                      "end": 1695,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 1701,
                      "end": 1797,
                      "name": "tag",
                      "source": 15,
                      "value": "425"
                    },
                    {
                      "begin": 1701,
                      "end": 1797,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1738,
                      "end": 1745,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1767,
                      "end": 1791,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "496"
                    },
                    {
                      "begin": 1785,
                      "end": 1790,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 1767,
                      "end": 1791,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "424"
                    },
                    {
                      "begin": 1767,
                      "end": 1791,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 1767,
                      "end": 1791,
                      "name": "tag",
                      "source": 15,
                      "value": "496"
                    },
                    {
                      "begin": 1767,
                      "end": 1791,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1756,
                      "end": 1791,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 1756,
                      "end": 1791,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 1701,
                      "end": 1797,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 1701,
                      "end": 1797,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 1701,
                      "end": 1797,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 1701,
                      "end": 1797,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 1803,
                      "end": 1925,
                      "name": "tag",
                      "source": 15,
                      "value": "426"
                    },
                    {
                      "begin": 1803,
                      "end": 1925,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1876,
                      "end": 1900,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "498"
                    },
                    {
                      "begin": 1894,
                      "end": 1899,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 1876,
                      "end": 1900,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "425"
                    },
                    {
                      "begin": 1876,
                      "end": 1900,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 1876,
                      "end": 1900,
                      "name": "tag",
                      "source": 15,
                      "value": "498"
                    },
                    {
                      "begin": 1876,
                      "end": 1900,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1869,
                      "end": 1874,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 1866,
                      "end": 1901,
                      "name": "EQ",
                      "source": 15
                    },
                    {
                      "begin": 1856,
                      "end": 1919,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "499"
                    },
                    {
                      "begin": 1856,
                      "end": 1919,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 1915,
                      "end": 1916,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 1912,
                      "end": 1913,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 1905,
                      "end": 1917,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 1856,
                      "end": 1919,
                      "name": "tag",
                      "source": 15,
                      "value": "499"
                    },
                    {
                      "begin": 1856,
                      "end": 1919,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1803,
                      "end": 1925,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 1803,
                      "end": 1925,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 1931,
                      "end": 2070,
                      "name": "tag",
                      "source": 15,
                      "value": "427"
                    },
                    {
                      "begin": 1931,
                      "end": 2070,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1977,
                      "end": 1982,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 2015,
                      "end": 2021,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 2002,
                      "end": 2022,
                      "name": "CALLDATALOAD",
                      "source": 15
                    },
                    {
                      "begin": 1993,
                      "end": 2022,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 1993,
                      "end": 2022,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2031,
                      "end": 2064,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "501"
                    },
                    {
                      "begin": 2058,
                      "end": 2063,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 2031,
                      "end": 2064,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "426"
                    },
                    {
                      "begin": 2031,
                      "end": 2064,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2031,
                      "end": 2064,
                      "name": "tag",
                      "source": 15,
                      "value": "501"
                    },
                    {
                      "begin": 2031,
                      "end": 2064,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 1931,
                      "end": 2070,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 1931,
                      "end": 2070,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 1931,
                      "end": 2070,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 1931,
                      "end": 2070,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 1931,
                      "end": 2070,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2076,
                      "end": 2153,
                      "name": "tag",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 2076,
                      "end": 2153,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2113,
                      "end": 2120,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 2142,
                      "end": 2147,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 2131,
                      "end": 2147,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 2131,
                      "end": 2147,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2076,
                      "end": 2153,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 2076,
                      "end": 2153,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 2076,
                      "end": 2153,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2076,
                      "end": 2153,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2159,
                      "end": 2281,
                      "name": "tag",
                      "source": 15,
                      "value": "429"
                    },
                    {
                      "begin": 2159,
                      "end": 2281,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2232,
                      "end": 2256,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "504"
                    },
                    {
                      "begin": 2250,
                      "end": 2255,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 2232,
                      "end": 2256,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 2232,
                      "end": 2256,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2232,
                      "end": 2256,
                      "name": "tag",
                      "source": 15,
                      "value": "504"
                    },
                    {
                      "begin": 2232,
                      "end": 2256,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2225,
                      "end": 2230,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 2222,
                      "end": 2257,
                      "name": "EQ",
                      "source": 15
                    },
                    {
                      "begin": 2212,
                      "end": 2275,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "505"
                    },
                    {
                      "begin": 2212,
                      "end": 2275,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 2271,
                      "end": 2272,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 2268,
                      "end": 2269,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 2261,
                      "end": 2273,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 2212,
                      "end": 2275,
                      "name": "tag",
                      "source": 15,
                      "value": "505"
                    },
                    {
                      "begin": 2212,
                      "end": 2275,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2159,
                      "end": 2281,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2159,
                      "end": 2281,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2287,
                      "end": 2426,
                      "name": "tag",
                      "source": 15,
                      "value": "430"
                    },
                    {
                      "begin": 2287,
                      "end": 2426,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2333,
                      "end": 2338,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 2371,
                      "end": 2377,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 2358,
                      "end": 2378,
                      "name": "CALLDATALOAD",
                      "source": 15
                    },
                    {
                      "begin": 2349,
                      "end": 2378,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 2349,
                      "end": 2378,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2387,
                      "end": 2420,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "507"
                    },
                    {
                      "begin": 2414,
                      "end": 2419,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 2387,
                      "end": 2420,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "429"
                    },
                    {
                      "begin": 2387,
                      "end": 2420,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2387,
                      "end": 2420,
                      "name": "tag",
                      "source": 15,
                      "value": "507"
                    },
                    {
                      "begin": 2387,
                      "end": 2420,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2287,
                      "end": 2426,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 2287,
                      "end": 2426,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 2287,
                      "end": 2426,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2287,
                      "end": 2426,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2287,
                      "end": 2426,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2432,
                      "end": 2906,
                      "name": "tag",
                      "source": 15,
                      "value": "43"
                    },
                    {
                      "begin": 2432,
                      "end": 2906,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2500,
                      "end": 2506,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 2508,
                      "end": 2514,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 2557,
                      "end": 2559,
                      "name": "PUSH",
                      "source": 15,
                      "value": "40"
                    },
                    {
                      "begin": 2545,
                      "end": 2554,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 2536,
                      "end": 2543,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 2532,
                      "end": 2555,
                      "name": "SUB",
                      "source": 15
                    },
                    {
                      "begin": 2528,
                      "end": 2560,
                      "name": "SLT",
                      "source": 15
                    },
                    {
                      "begin": 2525,
                      "end": 2644,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 2525,
                      "end": 2644,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "509"
                    },
                    {
                      "begin": 2525,
                      "end": 2644,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 2563,
                      "end": 2642,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "510"
                    },
                    {
                      "begin": 2563,
                      "end": 2642,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "422"
                    },
                    {
                      "begin": 2563,
                      "end": 2642,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2563,
                      "end": 2642,
                      "name": "tag",
                      "source": 15,
                      "value": "510"
                    },
                    {
                      "begin": 2563,
                      "end": 2642,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2525,
                      "end": 2644,
                      "name": "tag",
                      "source": 15,
                      "value": "509"
                    },
                    {
                      "begin": 2525,
                      "end": 2644,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2683,
                      "end": 2684,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 2708,
                      "end": 2761,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "511"
                    },
                    {
                      "begin": 2753,
                      "end": 2760,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 2744,
                      "end": 2750,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 2733,
                      "end": 2742,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 2729,
                      "end": 2751,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 2708,
                      "end": 2761,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "427"
                    },
                    {
                      "begin": 2708,
                      "end": 2761,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2708,
                      "end": 2761,
                      "name": "tag",
                      "source": 15,
                      "value": "511"
                    },
                    {
                      "begin": 2708,
                      "end": 2761,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2698,
                      "end": 2761,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 2698,
                      "end": 2761,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2654,
                      "end": 2771,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2810,
                      "end": 2812,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 2836,
                      "end": 2889,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "512"
                    },
                    {
                      "begin": 2881,
                      "end": 2888,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 2872,
                      "end": 2878,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 2861,
                      "end": 2870,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 2857,
                      "end": 2879,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 2836,
                      "end": 2889,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "430"
                    },
                    {
                      "begin": 2836,
                      "end": 2889,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2836,
                      "end": 2889,
                      "name": "tag",
                      "source": 15,
                      "value": "512"
                    },
                    {
                      "begin": 2836,
                      "end": 2889,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2826,
                      "end": 2889,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 2826,
                      "end": 2889,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2781,
                      "end": 2899,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2432,
                      "end": 2906,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 2432,
                      "end": 2906,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2432,
                      "end": 2906,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 2432,
                      "end": 2906,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 2432,
                      "end": 2906,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2432,
                      "end": 2906,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 2912,
                      "end": 3002,
                      "name": "tag",
                      "source": 15,
                      "value": "431"
                    },
                    {
                      "begin": 2912,
                      "end": 3002,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 2946,
                      "end": 2953,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 2989,
                      "end": 2994,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 2982,
                      "end": 2995,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 2975,
                      "end": 2996,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 2964,
                      "end": 2996,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 2964,
                      "end": 2996,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2912,
                      "end": 3002,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 2912,
                      "end": 3002,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 2912,
                      "end": 3002,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 2912,
                      "end": 3002,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3008,
                      "end": 3117,
                      "name": "tag",
                      "source": 15,
                      "value": "432"
                    },
                    {
                      "begin": 3008,
                      "end": 3117,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3089,
                      "end": 3110,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "515"
                    },
                    {
                      "begin": 3104,
                      "end": 3109,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 3089,
                      "end": 3110,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "431"
                    },
                    {
                      "begin": 3089,
                      "end": 3110,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3089,
                      "end": 3110,
                      "name": "tag",
                      "source": 15,
                      "value": "515"
                    },
                    {
                      "begin": 3089,
                      "end": 3110,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3084,
                      "end": 3087,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 3077,
                      "end": 3111,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 3008,
                      "end": 3117,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3008,
                      "end": 3117,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3008,
                      "end": 3117,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3123,
                      "end": 3333,
                      "name": "tag",
                      "source": 15,
                      "value": "46"
                    },
                    {
                      "begin": 3123,
                      "end": 3333,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3210,
                      "end": 3214,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 3248,
                      "end": 3250,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 3237,
                      "end": 3246,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 3233,
                      "end": 3251,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 3225,
                      "end": 3251,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 3225,
                      "end": 3251,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3261,
                      "end": 3326,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "517"
                    },
                    {
                      "begin": 3323,
                      "end": 3324,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 3312,
                      "end": 3321,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 3308,
                      "end": 3325,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 3299,
                      "end": 3305,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 3261,
                      "end": 3326,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "432"
                    },
                    {
                      "begin": 3261,
                      "end": 3326,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3261,
                      "end": 3326,
                      "name": "tag",
                      "source": 15,
                      "value": "517"
                    },
                    {
                      "begin": 3261,
                      "end": 3326,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3123,
                      "end": 3333,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 3123,
                      "end": 3333,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 3123,
                      "end": 3333,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3123,
                      "end": 3333,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3123,
                      "end": 3333,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3339,
                      "end": 3668,
                      "name": "tag",
                      "source": 15,
                      "value": "50"
                    },
                    {
                      "begin": 3339,
                      "end": 3668,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3398,
                      "end": 3404,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 3447,
                      "end": 3449,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 3435,
                      "end": 3444,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 3426,
                      "end": 3433,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 3422,
                      "end": 3445,
                      "name": "SUB",
                      "source": 15
                    },
                    {
                      "begin": 3418,
                      "end": 3450,
                      "name": "SLT",
                      "source": 15
                    },
                    {
                      "begin": 3415,
                      "end": 3534,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 3415,
                      "end": 3534,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "519"
                    },
                    {
                      "begin": 3415,
                      "end": 3534,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 3453,
                      "end": 3532,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "520"
                    },
                    {
                      "begin": 3453,
                      "end": 3532,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "422"
                    },
                    {
                      "begin": 3453,
                      "end": 3532,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3453,
                      "end": 3532,
                      "name": "tag",
                      "source": 15,
                      "value": "520"
                    },
                    {
                      "begin": 3453,
                      "end": 3532,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3415,
                      "end": 3534,
                      "name": "tag",
                      "source": 15,
                      "value": "519"
                    },
                    {
                      "begin": 3415,
                      "end": 3534,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3573,
                      "end": 3574,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 3598,
                      "end": 3651,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "521"
                    },
                    {
                      "begin": 3643,
                      "end": 3650,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 3634,
                      "end": 3640,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 3623,
                      "end": 3632,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 3619,
                      "end": 3641,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 3598,
                      "end": 3651,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "427"
                    },
                    {
                      "begin": 3598,
                      "end": 3651,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3598,
                      "end": 3651,
                      "name": "tag",
                      "source": 15,
                      "value": "521"
                    },
                    {
                      "begin": 3598,
                      "end": 3651,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3588,
                      "end": 3651,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 3588,
                      "end": 3651,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3544,
                      "end": 3661,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3339,
                      "end": 3668,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 3339,
                      "end": 3668,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 3339,
                      "end": 3668,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3339,
                      "end": 3668,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3339,
                      "end": 3668,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3674,
                      "end": 3792,
                      "name": "tag",
                      "source": 15,
                      "value": "433"
                    },
                    {
                      "begin": 3674,
                      "end": 3792,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3761,
                      "end": 3785,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "523"
                    },
                    {
                      "begin": 3779,
                      "end": 3784,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 3761,
                      "end": 3785,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 3761,
                      "end": 3785,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3761,
                      "end": 3785,
                      "name": "tag",
                      "source": 15,
                      "value": "523"
                    },
                    {
                      "begin": 3761,
                      "end": 3785,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3756,
                      "end": 3759,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 3749,
                      "end": 3786,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 3674,
                      "end": 3792,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3674,
                      "end": 3792,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3674,
                      "end": 3792,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3798,
                      "end": 4020,
                      "name": "tag",
                      "source": 15,
                      "value": "56"
                    },
                    {
                      "begin": 3798,
                      "end": 4020,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3891,
                      "end": 3895,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 3929,
                      "end": 3931,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 3918,
                      "end": 3927,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 3914,
                      "end": 3932,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 3906,
                      "end": 3932,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 3906,
                      "end": 3932,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3942,
                      "end": 4013,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "525"
                    },
                    {
                      "begin": 4010,
                      "end": 4011,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 3999,
                      "end": 4008,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 3995,
                      "end": 4012,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 3986,
                      "end": 3992,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 3942,
                      "end": 4013,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "433"
                    },
                    {
                      "begin": 3942,
                      "end": 4013,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 3942,
                      "end": 4013,
                      "name": "tag",
                      "source": 15,
                      "value": "525"
                    },
                    {
                      "begin": 3942,
                      "end": 4013,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 3798,
                      "end": 4020,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 3798,
                      "end": 4020,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 3798,
                      "end": 4020,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3798,
                      "end": 4020,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 3798,
                      "end": 4020,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 4026,
                      "end": 4645,
                      "name": "tag",
                      "source": 15,
                      "value": "64"
                    },
                    {
                      "begin": 4026,
                      "end": 4645,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4103,
                      "end": 4109,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 4111,
                      "end": 4117,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 4119,
                      "end": 4125,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 4168,
                      "end": 4170,
                      "name": "PUSH",
                      "source": 15,
                      "value": "60"
                    },
                    {
                      "begin": 4156,
                      "end": 4165,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 4147,
                      "end": 4154,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 4143,
                      "end": 4166,
                      "name": "SUB",
                      "source": 15
                    },
                    {
                      "begin": 4139,
                      "end": 4171,
                      "name": "SLT",
                      "source": 15
                    },
                    {
                      "begin": 4136,
                      "end": 4255,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 4136,
                      "end": 4255,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "527"
                    },
                    {
                      "begin": 4136,
                      "end": 4255,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 4174,
                      "end": 4253,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "528"
                    },
                    {
                      "begin": 4174,
                      "end": 4253,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "422"
                    },
                    {
                      "begin": 4174,
                      "end": 4253,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 4174,
                      "end": 4253,
                      "name": "tag",
                      "source": 15,
                      "value": "528"
                    },
                    {
                      "begin": 4174,
                      "end": 4253,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4136,
                      "end": 4255,
                      "name": "tag",
                      "source": 15,
                      "value": "527"
                    },
                    {
                      "begin": 4136,
                      "end": 4255,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4294,
                      "end": 4295,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 4319,
                      "end": 4372,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "529"
                    },
                    {
                      "begin": 4364,
                      "end": 4371,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 4355,
                      "end": 4361,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 4344,
                      "end": 4353,
                      "name": "DUP8",
                      "source": 15
                    },
                    {
                      "begin": 4340,
                      "end": 4362,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 4319,
                      "end": 4372,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "427"
                    },
                    {
                      "begin": 4319,
                      "end": 4372,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 4319,
                      "end": 4372,
                      "name": "tag",
                      "source": 15,
                      "value": "529"
                    },
                    {
                      "begin": 4319,
                      "end": 4372,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4309,
                      "end": 4372,
                      "name": "SWAP4",
                      "source": 15
                    },
                    {
                      "begin": 4309,
                      "end": 4372,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4265,
                      "end": 4382,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4421,
                      "end": 4423,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 4447,
                      "end": 4500,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "530"
                    },
                    {
                      "begin": 4492,
                      "end": 4499,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 4483,
                      "end": 4489,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 4472,
                      "end": 4481,
                      "name": "DUP8",
                      "source": 15
                    },
                    {
                      "begin": 4468,
                      "end": 4490,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 4447,
                      "end": 4500,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "427"
                    },
                    {
                      "begin": 4447,
                      "end": 4500,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 4447,
                      "end": 4500,
                      "name": "tag",
                      "source": 15,
                      "value": "530"
                    },
                    {
                      "begin": 4447,
                      "end": 4500,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4437,
                      "end": 4500,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 4437,
                      "end": 4500,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4392,
                      "end": 4510,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4549,
                      "end": 4551,
                      "name": "PUSH",
                      "source": 15,
                      "value": "40"
                    },
                    {
                      "begin": 4575,
                      "end": 4628,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "531"
                    },
                    {
                      "begin": 4620,
                      "end": 4627,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 4611,
                      "end": 4617,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 4600,
                      "end": 4609,
                      "name": "DUP8",
                      "source": 15
                    },
                    {
                      "begin": 4596,
                      "end": 4618,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 4575,
                      "end": 4628,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "430"
                    },
                    {
                      "begin": 4575,
                      "end": 4628,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 4575,
                      "end": 4628,
                      "name": "tag",
                      "source": 15,
                      "value": "531"
                    },
                    {
                      "begin": 4575,
                      "end": 4628,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4565,
                      "end": 4628,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 4565,
                      "end": 4628,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4520,
                      "end": 4638,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4026,
                      "end": 4645,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 4026,
                      "end": 4645,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4026,
                      "end": 4645,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 4026,
                      "end": 4645,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4026,
                      "end": 4645,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 4026,
                      "end": 4645,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 4651,
                      "end": 4737,
                      "name": "tag",
                      "source": 15,
                      "value": "434"
                    },
                    {
                      "begin": 4651,
                      "end": 4737,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4686,
                      "end": 4693,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 4726,
                      "end": 4730,
                      "name": "PUSH",
                      "source": 15,
                      "value": "FF"
                    },
                    {
                      "begin": 4719,
                      "end": 4724,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 4715,
                      "end": 4731,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 4704,
                      "end": 4731,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 4704,
                      "end": 4731,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4651,
                      "end": 4737,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 4651,
                      "end": 4737,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 4651,
                      "end": 4737,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4651,
                      "end": 4737,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 4743,
                      "end": 4855,
                      "name": "tag",
                      "source": 15,
                      "value": "435"
                    },
                    {
                      "begin": 4743,
                      "end": 4855,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4826,
                      "end": 4848,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "534"
                    },
                    {
                      "begin": 4842,
                      "end": 4847,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 4826,
                      "end": 4848,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "434"
                    },
                    {
                      "begin": 4826,
                      "end": 4848,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 4826,
                      "end": 4848,
                      "name": "tag",
                      "source": 15,
                      "value": "534"
                    },
                    {
                      "begin": 4826,
                      "end": 4848,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4821,
                      "end": 4824,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 4814,
                      "end": 4849,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 4743,
                      "end": 4855,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4743,
                      "end": 4855,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4743,
                      "end": 4855,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 4861,
                      "end": 5075,
                      "name": "tag",
                      "source": 15,
                      "value": "71"
                    },
                    {
                      "begin": 4861,
                      "end": 5075,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4950,
                      "end": 4954,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 4988,
                      "end": 4990,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 4977,
                      "end": 4986,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 4973,
                      "end": 4991,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 4965,
                      "end": 4991,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 4965,
                      "end": 4991,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 5001,
                      "end": 5068,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "536"
                    },
                    {
                      "begin": 5065,
                      "end": 5066,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 5054,
                      "end": 5063,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 5050,
                      "end": 5067,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 5041,
                      "end": 5047,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 5001,
                      "end": 5068,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "435"
                    },
                    {
                      "begin": 5001,
                      "end": 5068,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 5001,
                      "end": 5068,
                      "name": "tag",
                      "source": 15,
                      "value": "536"
                    },
                    {
                      "begin": 5001,
                      "end": 5068,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 4861,
                      "end": 5075,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 4861,
                      "end": 5075,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 4861,
                      "end": 5075,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4861,
                      "end": 5075,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 4861,
                      "end": 5075,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 5081,
                      "end": 5199,
                      "name": "tag",
                      "source": 15,
                      "value": "436"
                    },
                    {
                      "begin": 5081,
                      "end": 5199,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 5168,
                      "end": 5192,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "538"
                    },
                    {
                      "begin": 5186,
                      "end": 5191,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 5168,
                      "end": 5192,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "425"
                    },
                    {
                      "begin": 5168,
                      "end": 5192,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 5168,
                      "end": 5192,
                      "name": "tag",
                      "source": 15,
                      "value": "538"
                    },
                    {
                      "begin": 5168,
                      "end": 5192,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 5163,
                      "end": 5166,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 5156,
                      "end": 5193,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 5081,
                      "end": 5199,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 5081,
                      "end": 5199,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 5081,
                      "end": 5199,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 5205,
                      "end": 5427,
                      "name": "tag",
                      "source": 15,
                      "value": "80"
                    },
                    {
                      "begin": 5205,
                      "end": 5427,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 5298,
                      "end": 5302,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 5336,
                      "end": 5338,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 5325,
                      "end": 5334,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 5321,
                      "end": 5339,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 5313,
                      "end": 5339,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 5313,
                      "end": 5339,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 5349,
                      "end": 5420,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "540"
                    },
                    {
                      "begin": 5417,
                      "end": 5418,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 5406,
                      "end": 5415,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 5402,
                      "end": 5419,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 5393,
                      "end": 5399,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 5349,
                      "end": 5420,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "436"
                    },
                    {
                      "begin": 5349,
                      "end": 5420,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 5349,
                      "end": 5420,
                      "name": "tag",
                      "source": 15,
                      "value": "540"
                    },
                    {
                      "begin": 5349,
                      "end": 5420,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 5205,
                      "end": 5427,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 5205,
                      "end": 5427,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 5205,
                      "end": 5427,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 5205,
                      "end": 5427,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 5205,
                      "end": 5427,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 5433,
                      "end": 5762,
                      "name": "tag",
                      "source": 15,
                      "value": "84"
                    },
                    {
                      "begin": 5433,
                      "end": 5762,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 5492,
                      "end": 5498,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 5541,
                      "end": 5543,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 5529,
                      "end": 5538,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 5520,
                      "end": 5527,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 5516,
                      "end": 5539,
                      "name": "SUB",
                      "source": 15
                    },
                    {
                      "begin": 5512,
                      "end": 5544,
                      "name": "SLT",
                      "source": 15
                    },
                    {
                      "begin": 5509,
                      "end": 5628,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 5509,
                      "end": 5628,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "542"
                    },
                    {
                      "begin": 5509,
                      "end": 5628,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 5547,
                      "end": 5626,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "543"
                    },
                    {
                      "begin": 5547,
                      "end": 5626,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "422"
                    },
                    {
                      "begin": 5547,
                      "end": 5626,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 5547,
                      "end": 5626,
                      "name": "tag",
                      "source": 15,
                      "value": "543"
                    },
                    {
                      "begin": 5547,
                      "end": 5626,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 5509,
                      "end": 5628,
                      "name": "tag",
                      "source": 15,
                      "value": "542"
                    },
                    {
                      "begin": 5509,
                      "end": 5628,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 5667,
                      "end": 5668,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 5692,
                      "end": 5745,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "544"
                    },
                    {
                      "begin": 5737,
                      "end": 5744,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 5728,
                      "end": 5734,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 5717,
                      "end": 5726,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 5713,
                      "end": 5735,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 5692,
                      "end": 5745,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "430"
                    },
                    {
                      "begin": 5692,
                      "end": 5745,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 5692,
                      "end": 5745,
                      "name": "tag",
                      "source": 15,
                      "value": "544"
                    },
                    {
                      "begin": 5692,
                      "end": 5745,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 5682,
                      "end": 5745,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 5682,
                      "end": 5745,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 5638,
                      "end": 5755,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 5433,
                      "end": 5762,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 5433,
                      "end": 5762,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 5433,
                      "end": 5762,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 5433,
                      "end": 5762,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 5433,
                      "end": 5762,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 5768,
                      "end": 5885,
                      "name": "tag",
                      "source": 15,
                      "value": "437"
                    },
                    {
                      "begin": 5768,
                      "end": 5885,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 5877,
                      "end": 5878,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 5874,
                      "end": 5875,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 5867,
                      "end": 5879,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 5891,
                      "end": 6008,
                      "name": "tag",
                      "source": 15,
                      "value": "438"
                    },
                    {
                      "begin": 5891,
                      "end": 6008,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6000,
                      "end": 6001,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 5997,
                      "end": 5998,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 5990,
                      "end": 6002,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 6014,
                      "end": 6194,
                      "name": "tag",
                      "source": 15,
                      "value": "439"
                    },
                    {
                      "begin": 6014,
                      "end": 6194,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6062,
                      "end": 6139,
                      "name": "PUSH",
                      "source": 15,
                      "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 6059,
                      "end": 6060,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 6052,
                      "end": 6140,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 6159,
                      "end": 6163,
                      "name": "PUSH",
                      "source": 15,
                      "value": "41"
                    },
                    {
                      "begin": 6156,
                      "end": 6157,
                      "name": "PUSH",
                      "source": 15,
                      "value": "4"
                    },
                    {
                      "begin": 6149,
                      "end": 6164,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 6183,
                      "end": 6187,
                      "name": "PUSH",
                      "source": 15,
                      "value": "24"
                    },
                    {
                      "begin": 6180,
                      "end": 6181,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 6173,
                      "end": 6188,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 6200,
                      "end": 6481,
                      "name": "tag",
                      "source": 15,
                      "value": "440"
                    },
                    {
                      "begin": 6200,
                      "end": 6481,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6283,
                      "end": 6310,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "549"
                    },
                    {
                      "begin": 6305,
                      "end": 6309,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 6283,
                      "end": 6310,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "419"
                    },
                    {
                      "begin": 6283,
                      "end": 6310,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 6283,
                      "end": 6310,
                      "name": "tag",
                      "source": 15,
                      "value": "549"
                    },
                    {
                      "begin": 6283,
                      "end": 6310,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6275,
                      "end": 6281,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 6271,
                      "end": 6311,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 6413,
                      "end": 6419,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 6401,
                      "end": 6411,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 6398,
                      "end": 6420,
                      "name": "LT",
                      "source": 15
                    },
                    {
                      "begin": 6377,
                      "end": 6395,
                      "name": "PUSH",
                      "source": 15,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6365,
                      "end": 6375,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 6362,
                      "end": 6396,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 6359,
                      "end": 6421,
                      "name": "OR",
                      "source": 15
                    },
                    {
                      "begin": 6356,
                      "end": 6444,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 6356,
                      "end": 6444,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "550"
                    },
                    {
                      "begin": 6356,
                      "end": 6444,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 6424,
                      "end": 6442,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "551"
                    },
                    {
                      "begin": 6424,
                      "end": 6442,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "439"
                    },
                    {
                      "begin": 6424,
                      "end": 6442,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 6424,
                      "end": 6442,
                      "name": "tag",
                      "source": 15,
                      "value": "551"
                    },
                    {
                      "begin": 6424,
                      "end": 6442,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6356,
                      "end": 6444,
                      "name": "tag",
                      "source": 15,
                      "value": "550"
                    },
                    {
                      "begin": 6356,
                      "end": 6444,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6464,
                      "end": 6474,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 6460,
                      "end": 6462,
                      "name": "PUSH",
                      "source": 15,
                      "value": "40"
                    },
                    {
                      "begin": 6453,
                      "end": 6475,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 6243,
                      "end": 6481,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6200,
                      "end": 6481,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6200,
                      "end": 6481,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6200,
                      "end": 6481,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 6487,
                      "end": 6616,
                      "name": "tag",
                      "source": 15,
                      "value": "441"
                    },
                    {
                      "begin": 6487,
                      "end": 6616,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6521,
                      "end": 6527,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 6548,
                      "end": 6568,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "553"
                    },
                    {
                      "begin": 6548,
                      "end": 6568,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "421"
                    },
                    {
                      "begin": 6548,
                      "end": 6568,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 6548,
                      "end": 6568,
                      "name": "tag",
                      "source": 15,
                      "value": "553"
                    },
                    {
                      "begin": 6548,
                      "end": 6568,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6538,
                      "end": 6568,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 6538,
                      "end": 6568,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6577,
                      "end": 6610,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "554"
                    },
                    {
                      "begin": 6605,
                      "end": 6609,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 6597,
                      "end": 6603,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 6577,
                      "end": 6610,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "440"
                    },
                    {
                      "begin": 6577,
                      "end": 6610,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 6577,
                      "end": 6610,
                      "name": "tag",
                      "source": 15,
                      "value": "554"
                    },
                    {
                      "begin": 6577,
                      "end": 6610,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6487,
                      "end": 6616,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 6487,
                      "end": 6616,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 6487,
                      "end": 6616,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6487,
                      "end": 6616,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 6622,
                      "end": 6929,
                      "name": "tag",
                      "source": 15,
                      "value": "442"
                    },
                    {
                      "begin": 6622,
                      "end": 6929,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6683,
                      "end": 6687,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 6773,
                      "end": 6791,
                      "name": "PUSH",
                      "source": 15,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 6765,
                      "end": 6771,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 6762,
                      "end": 6792,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 6759,
                      "end": 6815,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 6759,
                      "end": 6815,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "556"
                    },
                    {
                      "begin": 6759,
                      "end": 6815,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 6795,
                      "end": 6813,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "557"
                    },
                    {
                      "begin": 6795,
                      "end": 6813,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "439"
                    },
                    {
                      "begin": 6795,
                      "end": 6813,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 6795,
                      "end": 6813,
                      "name": "tag",
                      "source": 15,
                      "value": "557"
                    },
                    {
                      "begin": 6795,
                      "end": 6813,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6759,
                      "end": 6815,
                      "name": "tag",
                      "source": 15,
                      "value": "556"
                    },
                    {
                      "begin": 6759,
                      "end": 6815,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6833,
                      "end": 6862,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "558"
                    },
                    {
                      "begin": 6855,
                      "end": 6861,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 6833,
                      "end": 6862,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "419"
                    },
                    {
                      "begin": 6833,
                      "end": 6862,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 6833,
                      "end": 6862,
                      "name": "tag",
                      "source": 15,
                      "value": "558"
                    },
                    {
                      "begin": 6833,
                      "end": 6862,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 6825,
                      "end": 6862,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 6825,
                      "end": 6862,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6917,
                      "end": 6921,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 6911,
                      "end": 6915,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 6907,
                      "end": 6922,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 6899,
                      "end": 6922,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 6899,
                      "end": 6922,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6622,
                      "end": 6929,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 6622,
                      "end": 6929,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 6622,
                      "end": 6929,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6622,
                      "end": 6929,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 6935,
                      "end": 7083,
                      "name": "tag",
                      "source": 15,
                      "value": "443"
                    },
                    {
                      "begin": 6935,
                      "end": 7083,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7033,
                      "end": 7039,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 7028,
                      "end": 7031,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 7023,
                      "end": 7026,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 7010,
                      "end": 7040,
                      "name": "CALLDATACOPY",
                      "source": 15
                    },
                    {
                      "begin": 7074,
                      "end": 7075,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 7065,
                      "end": 7071,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 7060,
                      "end": 7063,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 7056,
                      "end": 7072,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 7049,
                      "end": 7076,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 6935,
                      "end": 7083,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6935,
                      "end": 7083,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6935,
                      "end": 7083,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 6935,
                      "end": 7083,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 7089,
                      "end": 7512,
                      "name": "tag",
                      "source": 15,
                      "value": "444"
                    },
                    {
                      "begin": 7089,
                      "end": 7512,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7166,
                      "end": 7171,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 7191,
                      "end": 7256,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "561"
                    },
                    {
                      "begin": 7207,
                      "end": 7255,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "562"
                    },
                    {
                      "begin": 7248,
                      "end": 7254,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 7207,
                      "end": 7255,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "442"
                    },
                    {
                      "begin": 7207,
                      "end": 7255,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 7207,
                      "end": 7255,
                      "name": "tag",
                      "source": 15,
                      "value": "562"
                    },
                    {
                      "begin": 7207,
                      "end": 7255,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7191,
                      "end": 7256,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "441"
                    },
                    {
                      "begin": 7191,
                      "end": 7256,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 7191,
                      "end": 7256,
                      "name": "tag",
                      "source": 15,
                      "value": "561"
                    },
                    {
                      "begin": 7191,
                      "end": 7256,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7182,
                      "end": 7256,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 7182,
                      "end": 7256,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7279,
                      "end": 7285,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 7272,
                      "end": 7277,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 7265,
                      "end": 7286,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 7317,
                      "end": 7321,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 7310,
                      "end": 7315,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 7306,
                      "end": 7322,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 7355,
                      "end": 7358,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 7346,
                      "end": 7352,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 7341,
                      "end": 7344,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 7337,
                      "end": 7353,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 7334,
                      "end": 7359,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 7331,
                      "end": 7443,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 7331,
                      "end": 7443,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "563"
                    },
                    {
                      "begin": 7331,
                      "end": 7443,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 7362,
                      "end": 7441,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "564"
                    },
                    {
                      "begin": 7362,
                      "end": 7441,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "438"
                    },
                    {
                      "begin": 7362,
                      "end": 7441,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 7362,
                      "end": 7441,
                      "name": "tag",
                      "source": 15,
                      "value": "564"
                    },
                    {
                      "begin": 7362,
                      "end": 7441,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7331,
                      "end": 7443,
                      "name": "tag",
                      "source": 15,
                      "value": "563"
                    },
                    {
                      "begin": 7331,
                      "end": 7443,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7452,
                      "end": 7506,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "565"
                    },
                    {
                      "begin": 7499,
                      "end": 7505,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 7494,
                      "end": 7497,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 7489,
                      "end": 7492,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 7452,
                      "end": 7506,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "443"
                    },
                    {
                      "begin": 7452,
                      "end": 7506,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 7452,
                      "end": 7506,
                      "name": "tag",
                      "source": 15,
                      "value": "565"
                    },
                    {
                      "begin": 7452,
                      "end": 7506,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7172,
                      "end": 7512,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7089,
                      "end": 7512,
                      "name": "SWAP4",
                      "source": 15
                    },
                    {
                      "begin": 7089,
                      "end": 7512,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 7089,
                      "end": 7512,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7089,
                      "end": 7512,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7089,
                      "end": 7512,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7089,
                      "end": 7512,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 7531,
                      "end": 7869,
                      "name": "tag",
                      "source": 15,
                      "value": "445"
                    },
                    {
                      "begin": 7531,
                      "end": 7869,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7586,
                      "end": 7591,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 7635,
                      "end": 7638,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 7628,
                      "end": 7632,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1F"
                    },
                    {
                      "begin": 7620,
                      "end": 7626,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 7616,
                      "end": 7633,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 7612,
                      "end": 7639,
                      "name": "SLT",
                      "source": 15
                    },
                    {
                      "begin": 7602,
                      "end": 7724,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "567"
                    },
                    {
                      "begin": 7602,
                      "end": 7724,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 7643,
                      "end": 7722,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "568"
                    },
                    {
                      "begin": 7643,
                      "end": 7722,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "437"
                    },
                    {
                      "begin": 7643,
                      "end": 7722,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 7643,
                      "end": 7722,
                      "name": "tag",
                      "source": 15,
                      "value": "568"
                    },
                    {
                      "begin": 7643,
                      "end": 7722,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7602,
                      "end": 7724,
                      "name": "tag",
                      "source": 15,
                      "value": "567"
                    },
                    {
                      "begin": 7602,
                      "end": 7724,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7760,
                      "end": 7766,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 7747,
                      "end": 7767,
                      "name": "CALLDATALOAD",
                      "source": 15
                    },
                    {
                      "begin": 7785,
                      "end": 7863,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "569"
                    },
                    {
                      "begin": 7859,
                      "end": 7862,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 7851,
                      "end": 7857,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 7844,
                      "end": 7848,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 7836,
                      "end": 7842,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 7832,
                      "end": 7849,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 7785,
                      "end": 7863,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "444"
                    },
                    {
                      "begin": 7785,
                      "end": 7863,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 7785,
                      "end": 7863,
                      "name": "tag",
                      "source": 15,
                      "value": "569"
                    },
                    {
                      "begin": 7785,
                      "end": 7863,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7776,
                      "end": 7863,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 7776,
                      "end": 7863,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7592,
                      "end": 7869,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7531,
                      "end": 7869,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 7531,
                      "end": 7869,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 7531,
                      "end": 7869,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7531,
                      "end": 7869,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7531,
                      "end": 7869,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 7875,
                      "end": 8527,
                      "name": "tag",
                      "source": 15,
                      "value": "88"
                    },
                    {
                      "begin": 7875,
                      "end": 8527,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7952,
                      "end": 7958,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 7960,
                      "end": 7966,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 8009,
                      "end": 8011,
                      "name": "PUSH",
                      "source": 15,
                      "value": "40"
                    },
                    {
                      "begin": 7997,
                      "end": 8006,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 7988,
                      "end": 7995,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 7984,
                      "end": 8007,
                      "name": "SUB",
                      "source": 15
                    },
                    {
                      "begin": 7980,
                      "end": 8012,
                      "name": "SLT",
                      "source": 15
                    },
                    {
                      "begin": 7977,
                      "end": 8096,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 7977,
                      "end": 8096,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "571"
                    },
                    {
                      "begin": 7977,
                      "end": 8096,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 8015,
                      "end": 8094,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "572"
                    },
                    {
                      "begin": 8015,
                      "end": 8094,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "422"
                    },
                    {
                      "begin": 8015,
                      "end": 8094,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 8015,
                      "end": 8094,
                      "name": "tag",
                      "source": 15,
                      "value": "572"
                    },
                    {
                      "begin": 8015,
                      "end": 8094,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 7977,
                      "end": 8096,
                      "name": "tag",
                      "source": 15,
                      "value": "571"
                    },
                    {
                      "begin": 7977,
                      "end": 8096,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 8135,
                      "end": 8136,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 8160,
                      "end": 8213,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "573"
                    },
                    {
                      "begin": 8205,
                      "end": 8212,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 8196,
                      "end": 8202,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 8185,
                      "end": 8194,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 8181,
                      "end": 8203,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 8160,
                      "end": 8213,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "427"
                    },
                    {
                      "begin": 8160,
                      "end": 8213,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 8160,
                      "end": 8213,
                      "name": "tag",
                      "source": 15,
                      "value": "573"
                    },
                    {
                      "begin": 8160,
                      "end": 8213,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 8150,
                      "end": 8213,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 8150,
                      "end": 8213,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8106,
                      "end": 8223,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8290,
                      "end": 8292,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 8279,
                      "end": 8288,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 8275,
                      "end": 8293,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 8262,
                      "end": 8294,
                      "name": "CALLDATALOAD",
                      "source": 15
                    },
                    {
                      "begin": 8321,
                      "end": 8339,
                      "name": "PUSH",
                      "source": 15,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 8313,
                      "end": 8319,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 8310,
                      "end": 8340,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 8307,
                      "end": 8424,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 8307,
                      "end": 8424,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "574"
                    },
                    {
                      "begin": 8307,
                      "end": 8424,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 8343,
                      "end": 8422,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "575"
                    },
                    {
                      "begin": 8343,
                      "end": 8422,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "423"
                    },
                    {
                      "begin": 8343,
                      "end": 8422,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 8343,
                      "end": 8422,
                      "name": "tag",
                      "source": 15,
                      "value": "575"
                    },
                    {
                      "begin": 8343,
                      "end": 8422,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 8307,
                      "end": 8424,
                      "name": "tag",
                      "source": 15,
                      "value": "574"
                    },
                    {
                      "begin": 8307,
                      "end": 8424,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 8448,
                      "end": 8510,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "576"
                    },
                    {
                      "begin": 8502,
                      "end": 8509,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 8493,
                      "end": 8499,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 8482,
                      "end": 8491,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 8478,
                      "end": 8500,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 8448,
                      "end": 8510,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "445"
                    },
                    {
                      "begin": 8448,
                      "end": 8510,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 8448,
                      "end": 8510,
                      "name": "tag",
                      "source": 15,
                      "value": "576"
                    },
                    {
                      "begin": 8448,
                      "end": 8510,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 8438,
                      "end": 8510,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 8438,
                      "end": 8510,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8233,
                      "end": 8520,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7875,
                      "end": 8527,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 7875,
                      "end": 8527,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7875,
                      "end": 8527,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 7875,
                      "end": 8527,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 7875,
                      "end": 8527,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 7875,
                      "end": 8527,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 8533,
                      "end": 8610,
                      "name": "tag",
                      "source": 15,
                      "value": "446"
                    },
                    {
                      "begin": 8533,
                      "end": 8610,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 8570,
                      "end": 8577,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 8599,
                      "end": 8604,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 8588,
                      "end": 8604,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 8588,
                      "end": 8604,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8533,
                      "end": 8610,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 8533,
                      "end": 8610,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 8533,
                      "end": 8610,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8533,
                      "end": 8610,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 8616,
                      "end": 8734,
                      "name": "tag",
                      "source": 15,
                      "value": "447"
                    },
                    {
                      "begin": 8616,
                      "end": 8734,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 8703,
                      "end": 8727,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "579"
                    },
                    {
                      "begin": 8721,
                      "end": 8726,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 8703,
                      "end": 8727,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "446"
                    },
                    {
                      "begin": 8703,
                      "end": 8727,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 8703,
                      "end": 8727,
                      "name": "tag",
                      "source": 15,
                      "value": "579"
                    },
                    {
                      "begin": 8703,
                      "end": 8727,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 8698,
                      "end": 8701,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 8691,
                      "end": 8728,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 8616,
                      "end": 8734,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8616,
                      "end": 8734,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8616,
                      "end": 8734,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 8740,
                      "end": 8962,
                      "name": "tag",
                      "source": 15,
                      "value": "94"
                    },
                    {
                      "begin": 8740,
                      "end": 8962,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 8833,
                      "end": 8837,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 8871,
                      "end": 8873,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 8860,
                      "end": 8869,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 8856,
                      "end": 8874,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 8848,
                      "end": 8874,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 8848,
                      "end": 8874,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8884,
                      "end": 8955,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "581"
                    },
                    {
                      "begin": 8952,
                      "end": 8953,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 8941,
                      "end": 8950,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 8937,
                      "end": 8954,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 8928,
                      "end": 8934,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 8884,
                      "end": 8955,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "447"
                    },
                    {
                      "begin": 8884,
                      "end": 8955,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 8884,
                      "end": 8955,
                      "name": "tag",
                      "source": 15,
                      "value": "581"
                    },
                    {
                      "begin": 8884,
                      "end": 8955,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 8740,
                      "end": 8962,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 8740,
                      "end": 8962,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 8740,
                      "end": 8962,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8740,
                      "end": 8962,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8740,
                      "end": 8962,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 8968,
                      "end": 9442,
                      "name": "tag",
                      "source": 15,
                      "value": "143"
                    },
                    {
                      "begin": 8968,
                      "end": 9442,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 9036,
                      "end": 9042,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 9044,
                      "end": 9050,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 9093,
                      "end": 9095,
                      "name": "PUSH",
                      "source": 15,
                      "value": "40"
                    },
                    {
                      "begin": 9081,
                      "end": 9090,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 9072,
                      "end": 9079,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 9068,
                      "end": 9091,
                      "name": "SUB",
                      "source": 15
                    },
                    {
                      "begin": 9064,
                      "end": 9096,
                      "name": "SLT",
                      "source": 15
                    },
                    {
                      "begin": 9061,
                      "end": 9180,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 9061,
                      "end": 9180,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "583"
                    },
                    {
                      "begin": 9061,
                      "end": 9180,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 9099,
                      "end": 9178,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "584"
                    },
                    {
                      "begin": 9099,
                      "end": 9178,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "422"
                    },
                    {
                      "begin": 9099,
                      "end": 9178,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 9099,
                      "end": 9178,
                      "name": "tag",
                      "source": 15,
                      "value": "584"
                    },
                    {
                      "begin": 9099,
                      "end": 9178,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 9061,
                      "end": 9180,
                      "name": "tag",
                      "source": 15,
                      "value": "583"
                    },
                    {
                      "begin": 9061,
                      "end": 9180,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 9219,
                      "end": 9220,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 9244,
                      "end": 9297,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "585"
                    },
                    {
                      "begin": 9289,
                      "end": 9296,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 9280,
                      "end": 9286,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 9269,
                      "end": 9278,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 9265,
                      "end": 9287,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 9244,
                      "end": 9297,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "427"
                    },
                    {
                      "begin": 9244,
                      "end": 9297,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 9244,
                      "end": 9297,
                      "name": "tag",
                      "source": 15,
                      "value": "585"
                    },
                    {
                      "begin": 9244,
                      "end": 9297,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 9234,
                      "end": 9297,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 9234,
                      "end": 9297,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 9190,
                      "end": 9307,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 9346,
                      "end": 9348,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 9372,
                      "end": 9425,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "586"
                    },
                    {
                      "begin": 9417,
                      "end": 9424,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 9408,
                      "end": 9414,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 9397,
                      "end": 9406,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 9393,
                      "end": 9415,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 9372,
                      "end": 9425,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "427"
                    },
                    {
                      "begin": 9372,
                      "end": 9425,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 9372,
                      "end": 9425,
                      "name": "tag",
                      "source": 15,
                      "value": "586"
                    },
                    {
                      "begin": 9372,
                      "end": 9425,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 9362,
                      "end": 9425,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 9362,
                      "end": 9425,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 9317,
                      "end": 9435,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8968,
                      "end": 9442,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 8968,
                      "end": 9442,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8968,
                      "end": 9442,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 8968,
                      "end": 9442,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 8968,
                      "end": 9442,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 8968,
                      "end": 9442,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 9448,
                      "end": 9628,
                      "name": "tag",
                      "source": 15,
                      "value": "448"
                    },
                    {
                      "begin": 9448,
                      "end": 9628,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 9496,
                      "end": 9573,
                      "name": "PUSH",
                      "source": 15,
                      "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 9493,
                      "end": 9494,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 9486,
                      "end": 9574,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 9593,
                      "end": 9597,
                      "name": "PUSH",
                      "source": 15,
                      "value": "22"
                    },
                    {
                      "begin": 9590,
                      "end": 9591,
                      "name": "PUSH",
                      "source": 15,
                      "value": "4"
                    },
                    {
                      "begin": 9583,
                      "end": 9598,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 9617,
                      "end": 9621,
                      "name": "PUSH",
                      "source": 15,
                      "value": "24"
                    },
                    {
                      "begin": 9614,
                      "end": 9615,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 9607,
                      "end": 9622,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 9634,
                      "end": 9954,
                      "name": "tag",
                      "source": 15,
                      "value": "162"
                    },
                    {
                      "begin": 9634,
                      "end": 9954,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 9678,
                      "end": 9684,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 9715,
                      "end": 9716,
                      "name": "PUSH",
                      "source": 15,
                      "value": "2"
                    },
                    {
                      "begin": 9709,
                      "end": 9713,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 9705,
                      "end": 9717,
                      "name": "DIV",
                      "source": 15
                    },
                    {
                      "begin": 9695,
                      "end": 9717,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 9695,
                      "end": 9717,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 9762,
                      "end": 9763,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 9756,
                      "end": 9760,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 9752,
                      "end": 9764,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 9783,
                      "end": 9801,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 9773,
                      "end": 9854,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "589"
                    },
                    {
                      "begin": 9773,
                      "end": 9854,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 9839,
                      "end": 9843,
                      "name": "PUSH",
                      "source": 15,
                      "value": "7F"
                    },
                    {
                      "begin": 9831,
                      "end": 9837,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 9827,
                      "end": 9844,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 9817,
                      "end": 9844,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 9817,
                      "end": 9844,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 9773,
                      "end": 9854,
                      "name": "tag",
                      "source": 15,
                      "value": "589"
                    },
                    {
                      "begin": 9773,
                      "end": 9854,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 9901,
                      "end": 9903,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 9893,
                      "end": 9899,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 9890,
                      "end": 9904,
                      "name": "LT",
                      "source": 15
                    },
                    {
                      "begin": 9870,
                      "end": 9888,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 9867,
                      "end": 9905,
                      "name": "SUB",
                      "source": 15
                    },
                    {
                      "begin": 9864,
                      "end": 9948,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "590"
                    },
                    {
                      "begin": 9864,
                      "end": 9948,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 9920,
                      "end": 9938,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "591"
                    },
                    {
                      "begin": 9920,
                      "end": 9938,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "448"
                    },
                    {
                      "begin": 9920,
                      "end": 9938,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 9920,
                      "end": 9938,
                      "name": "tag",
                      "source": 15,
                      "value": "591"
                    },
                    {
                      "begin": 9920,
                      "end": 9938,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 9864,
                      "end": 9948,
                      "name": "tag",
                      "source": 15,
                      "value": "590"
                    },
                    {
                      "begin": 9864,
                      "end": 9948,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 9685,
                      "end": 9954,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 9634,
                      "end": 9954,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 9634,
                      "end": 9954,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 9634,
                      "end": 9954,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 9634,
                      "end": 9954,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 9960,
                      "end": 10132,
                      "name": "tag",
                      "source": 15,
                      "value": "449"
                    },
                    {
                      "begin": 9960,
                      "end": 10132,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 10100,
                      "end": 10124,
                      "name": "PUSH",
                      "source": 15,
                      "value": "5472616E7366657273206172652064697361626C656400000000000000000000"
                    },
                    {
                      "begin": 10096,
                      "end": 10097,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 10088,
                      "end": 10094,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 10084,
                      "end": 10098,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 10077,
                      "end": 10125,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 9960,
                      "end": 10132,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 9960,
                      "end": 10132,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 10138,
                      "end": 10504,
                      "name": "tag",
                      "source": 15,
                      "value": "450"
                    },
                    {
                      "begin": 10138,
                      "end": 10504,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 10280,
                      "end": 10283,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 10301,
                      "end": 10368,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "594"
                    },
                    {
                      "begin": 10365,
                      "end": 10367,
                      "name": "PUSH",
                      "source": 15,
                      "value": "16"
                    },
                    {
                      "begin": 10360,
                      "end": 10363,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 10301,
                      "end": 10368,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "417"
                    },
                    {
                      "begin": 10301,
                      "end": 10368,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 10301,
                      "end": 10368,
                      "name": "tag",
                      "source": 15,
                      "value": "594"
                    },
                    {
                      "begin": 10301,
                      "end": 10368,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 10294,
                      "end": 10368,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 10294,
                      "end": 10368,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 10377,
                      "end": 10470,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "595"
                    },
                    {
                      "begin": 10466,
                      "end": 10469,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 10377,
                      "end": 10470,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "449"
                    },
                    {
                      "begin": 10377,
                      "end": 10470,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 10377,
                      "end": 10470,
                      "name": "tag",
                      "source": 15,
                      "value": "595"
                    },
                    {
                      "begin": 10377,
                      "end": 10470,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 10495,
                      "end": 10497,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 10490,
                      "end": 10493,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 10486,
                      "end": 10498,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 10479,
                      "end": 10498,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 10479,
                      "end": 10498,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 10138,
                      "end": 10504,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 10138,
                      "end": 10504,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 10138,
                      "end": 10504,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 10138,
                      "end": 10504,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 10510,
                      "end": 10929,
                      "name": "tag",
                      "source": 15,
                      "value": "183"
                    },
                    {
                      "begin": 10510,
                      "end": 10929,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 10676,
                      "end": 10680,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 10714,
                      "end": 10716,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 10703,
                      "end": 10712,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 10699,
                      "end": 10717,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 10691,
                      "end": 10717,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 10691,
                      "end": 10717,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 10763,
                      "end": 10772,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 10757,
                      "end": 10761,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 10753,
                      "end": 10773,
                      "name": "SUB",
                      "source": 15
                    },
                    {
                      "begin": 10749,
                      "end": 10750,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 10738,
                      "end": 10747,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 10734,
                      "end": 10751,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 10727,
                      "end": 10774,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 10791,
                      "end": 10922,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "597"
                    },
                    {
                      "begin": 10917,
                      "end": 10921,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 10791,
                      "end": 10922,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "450"
                    },
                    {
                      "begin": 10791,
                      "end": 10922,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 10791,
                      "end": 10922,
                      "name": "tag",
                      "source": 15,
                      "value": "597"
                    },
                    {
                      "begin": 10791,
                      "end": 10922,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 10783,
                      "end": 10922,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 10783,
                      "end": 10922,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 10510,
                      "end": 10929,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 10510,
                      "end": 10929,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 10510,
                      "end": 10929,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 10510,
                      "end": 10929,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 10935,
                      "end": 11115,
                      "name": "tag",
                      "source": 15,
                      "value": "451"
                    },
                    {
                      "begin": 10935,
                      "end": 11115,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 10983,
                      "end": 11060,
                      "name": "PUSH",
                      "source": 15,
                      "value": "4E487B7100000000000000000000000000000000000000000000000000000000"
                    },
                    {
                      "begin": 10980,
                      "end": 10981,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 10973,
                      "end": 11061,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 11080,
                      "end": 11084,
                      "name": "PUSH",
                      "source": 15,
                      "value": "11"
                    },
                    {
                      "begin": 11077,
                      "end": 11078,
                      "name": "PUSH",
                      "source": 15,
                      "value": "4"
                    },
                    {
                      "begin": 11070,
                      "end": 11085,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 11104,
                      "end": 11108,
                      "name": "PUSH",
                      "source": 15,
                      "value": "24"
                    },
                    {
                      "begin": 11101,
                      "end": 11102,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 11094,
                      "end": 11109,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 11121,
                      "end": 11223,
                      "name": "tag",
                      "source": 15,
                      "value": "452"
                    },
                    {
                      "begin": 11121,
                      "end": 11223,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 11163,
                      "end": 11171,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 11210,
                      "end": 11215,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 11207,
                      "end": 11208,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 11203,
                      "end": 11216,
                      "name": "SHR",
                      "source": 15
                    },
                    {
                      "begin": 11182,
                      "end": 11216,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 11182,
                      "end": 11216,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 11121,
                      "end": 11223,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 11121,
                      "end": 11223,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 11121,
                      "end": 11223,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 11121,
                      "end": 11223,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 11229,
                      "end": 12077,
                      "name": "tag",
                      "source": 15,
                      "value": "453"
                    },
                    {
                      "begin": 11229,
                      "end": 12077,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 11290,
                      "end": 11295,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 11297,
                      "end": 11301,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 11321,
                      "end": 11327,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 11312,
                      "end": 11327,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 11312,
                      "end": 11327,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 11345,
                      "end": 11350,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 11336,
                      "end": 11350,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 11336,
                      "end": 11350,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 11359,
                      "end": 12071,
                      "name": "tag",
                      "source": 15,
                      "value": "601"
                    },
                    {
                      "begin": 11359,
                      "end": 12071,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 11380,
                      "end": 11381,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 11370,
                      "end": 11378,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 11367,
                      "end": 11382,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 11359,
                      "end": 12071,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 11359,
                      "end": 12071,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "603"
                    },
                    {
                      "begin": 11359,
                      "end": 12071,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 11475,
                      "end": 11479,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 11470,
                      "end": 11473,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 11466,
                      "end": 11480,
                      "name": "DIV",
                      "source": 15
                    },
                    {
                      "begin": 11460,
                      "end": 11464,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 11457,
                      "end": 11481,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 11454,
                      "end": 11504,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 11454,
                      "end": 11504,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "604"
                    },
                    {
                      "begin": 11454,
                      "end": 11504,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 11484,
                      "end": 11502,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "605"
                    },
                    {
                      "begin": 11484,
                      "end": 11502,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "451"
                    },
                    {
                      "begin": 11484,
                      "end": 11502,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 11484,
                      "end": 11502,
                      "name": "tag",
                      "source": 15,
                      "value": "605"
                    },
                    {
                      "begin": 11484,
                      "end": 11502,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 11454,
                      "end": 11504,
                      "name": "tag",
                      "source": 15,
                      "value": "604"
                    },
                    {
                      "begin": 11454,
                      "end": 11504,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 11534,
                      "end": 11535,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 11524,
                      "end": 11532,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 11520,
                      "end": 11536,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 11517,
                      "end": 11968,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 11517,
                      "end": 11968,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "606"
                    },
                    {
                      "begin": 11517,
                      "end": 11968,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 11949,
                      "end": 11953,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 11942,
                      "end": 11947,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 11938,
                      "end": 11954,
                      "name": "MUL",
                      "source": 15
                    },
                    {
                      "begin": 11929,
                      "end": 11954,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 11929,
                      "end": 11954,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 11517,
                      "end": 11968,
                      "name": "tag",
                      "source": 15,
                      "value": "606"
                    },
                    {
                      "begin": 11517,
                      "end": 11968,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 11999,
                      "end": 12003,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 11993,
                      "end": 11997,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 11989,
                      "end": 12004,
                      "name": "MUL",
                      "source": 15
                    },
                    {
                      "begin": 11981,
                      "end": 12004,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 11981,
                      "end": 12004,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12029,
                      "end": 12061,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "607"
                    },
                    {
                      "begin": 12052,
                      "end": 12060,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 12029,
                      "end": 12061,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "452"
                    },
                    {
                      "begin": 12029,
                      "end": 12061,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12029,
                      "end": 12061,
                      "name": "tag",
                      "source": 15,
                      "value": "607"
                    },
                    {
                      "begin": 12029,
                      "end": 12061,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12017,
                      "end": 12061,
                      "name": "SWAP5",
                      "source": 15
                    },
                    {
                      "begin": 12017,
                      "end": 12061,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 11359,
                      "end": 12071,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "601"
                    },
                    {
                      "begin": 11359,
                      "end": 12071,
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 11359,
                      "end": 12071,
                      "name": "tag",
                      "source": 15,
                      "value": "603"
                    },
                    {
                      "begin": 11359,
                      "end": 12071,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 11229,
                      "end": 12077,
                      "name": "SWAP5",
                      "source": 15
                    },
                    {
                      "begin": 11229,
                      "end": 12077,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 11229,
                      "end": 12077,
                      "name": "SWAP5",
                      "source": 15
                    },
                    {
                      "begin": 11229,
                      "end": 12077,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 11229,
                      "end": 12077,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 11229,
                      "end": 12077,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 11229,
                      "end": 12077,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 11229,
                      "end": 12077,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12083,
                      "end": 13156,
                      "name": "tag",
                      "source": 15,
                      "value": "454"
                    },
                    {
                      "begin": 12083,
                      "end": 13156,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12137,
                      "end": 12142,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 12328,
                      "end": 12336,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 12318,
                      "end": 12358,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "609"
                    },
                    {
                      "begin": 12318,
                      "end": 12358,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 12349,
                      "end": 12350,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 12340,
                      "end": 12350,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 12340,
                      "end": 12350,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12351,
                      "end": 12356,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "608"
                    },
                    {
                      "begin": 12351,
                      "end": 12356,
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12318,
                      "end": 12358,
                      "name": "tag",
                      "source": 15,
                      "value": "609"
                    },
                    {
                      "begin": 12318,
                      "end": 12358,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12377,
                      "end": 12381,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 12367,
                      "end": 12403,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "610"
                    },
                    {
                      "begin": 12367,
                      "end": 12403,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 12394,
                      "end": 12395,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 12385,
                      "end": 12395,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 12385,
                      "end": 12395,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12396,
                      "end": 12401,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "608"
                    },
                    {
                      "begin": 12396,
                      "end": 12401,
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12367,
                      "end": 12403,
                      "name": "tag",
                      "source": 15,
                      "value": "610"
                    },
                    {
                      "begin": 12367,
                      "end": 12403,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12463,
                      "end": 12467,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 12511,
                      "end": 12512,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 12506,
                      "end": 12533,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 12506,
                      "end": 12533,
                      "name": "EQ",
                      "source": 15
                    },
                    {
                      "begin": 12506,
                      "end": 12533,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "612"
                    },
                    {
                      "begin": 12506,
                      "end": 12533,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 12547,
                      "end": 12548,
                      "name": "PUSH",
                      "source": 15,
                      "value": "2"
                    },
                    {
                      "begin": 12542,
                      "end": 12733,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 12542,
                      "end": 12733,
                      "name": "EQ",
                      "source": 15
                    },
                    {
                      "begin": 12542,
                      "end": 12733,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "613"
                    },
                    {
                      "begin": 12542,
                      "end": 12733,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 12456,
                      "end": 12733,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "611"
                    },
                    {
                      "begin": 12456,
                      "end": 12733,
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12506,
                      "end": 12533,
                      "name": "tag",
                      "source": 15,
                      "value": "612"
                    },
                    {
                      "begin": 12506,
                      "end": 12533,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12524,
                      "end": 12525,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 12515,
                      "end": 12525,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 12515,
                      "end": 12525,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12526,
                      "end": 12531,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12526,
                      "end": 12531,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "608"
                    },
                    {
                      "begin": 12526,
                      "end": 12531,
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12542,
                      "end": 12733,
                      "name": "tag",
                      "source": 15,
                      "value": "613"
                    },
                    {
                      "begin": 12542,
                      "end": 12733,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12587,
                      "end": 12590,
                      "name": "PUSH",
                      "source": 15,
                      "value": "FF"
                    },
                    {
                      "begin": 12577,
                      "end": 12585,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 12574,
                      "end": 12591,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 12571,
                      "end": 12614,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 12571,
                      "end": 12614,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "614"
                    },
                    {
                      "begin": 12571,
                      "end": 12614,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 12594,
                      "end": 12612,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "615"
                    },
                    {
                      "begin": 12594,
                      "end": 12612,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "451"
                    },
                    {
                      "begin": 12594,
                      "end": 12612,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12594,
                      "end": 12612,
                      "name": "tag",
                      "source": 15,
                      "value": "615"
                    },
                    {
                      "begin": 12594,
                      "end": 12612,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12571,
                      "end": 12614,
                      "name": "tag",
                      "source": 15,
                      "value": "614"
                    },
                    {
                      "begin": 12571,
                      "end": 12614,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12643,
                      "end": 12651,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 12640,
                      "end": 12641,
                      "name": "PUSH",
                      "source": 15,
                      "value": "2"
                    },
                    {
                      "begin": 12636,
                      "end": 12652,
                      "name": "EXP",
                      "source": 15
                    },
                    {
                      "begin": 12627,
                      "end": 12652,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 12627,
                      "end": 12652,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12678,
                      "end": 12681,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 12671,
                      "end": 12676,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 12668,
                      "end": 12682,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 12665,
                      "end": 12705,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 12665,
                      "end": 12705,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "616"
                    },
                    {
                      "begin": 12665,
                      "end": 12705,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 12685,
                      "end": 12703,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "617"
                    },
                    {
                      "begin": 12685,
                      "end": 12703,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "451"
                    },
                    {
                      "begin": 12685,
                      "end": 12703,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12685,
                      "end": 12703,
                      "name": "tag",
                      "source": 15,
                      "value": "617"
                    },
                    {
                      "begin": 12685,
                      "end": 12703,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12665,
                      "end": 12705,
                      "name": "tag",
                      "source": 15,
                      "value": "616"
                    },
                    {
                      "begin": 12665,
                      "end": 12705,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12718,
                      "end": 12723,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12718,
                      "end": 12723,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "608"
                    },
                    {
                      "begin": 12718,
                      "end": 12723,
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12456,
                      "end": 12733,
                      "name": "tag",
                      "source": 15,
                      "value": "611"
                    },
                    {
                      "begin": 12456,
                      "end": 12733,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12456,
                      "end": 12733,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12842,
                      "end": 12844,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 12832,
                      "end": 12840,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 12829,
                      "end": 12845,
                      "name": "LT",
                      "source": 15
                    },
                    {
                      "begin": 12823,
                      "end": 12826,
                      "name": "PUSH",
                      "source": 15,
                      "value": "133"
                    },
                    {
                      "begin": 12817,
                      "end": 12821,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 12814,
                      "end": 12827,
                      "name": "LT",
                      "source": 15
                    },
                    {
                      "begin": 12810,
                      "end": 12846,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 12792,
                      "end": 12794,
                      "name": "PUSH",
                      "source": 15,
                      "value": "4E"
                    },
                    {
                      "begin": 12782,
                      "end": 12790,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 12779,
                      "end": 12795,
                      "name": "LT",
                      "source": 15
                    },
                    {
                      "begin": 12774,
                      "end": 12776,
                      "name": "PUSH",
                      "source": 15,
                      "value": "B"
                    },
                    {
                      "begin": 12768,
                      "end": 12772,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 12765,
                      "end": 12777,
                      "name": "LT",
                      "source": 15
                    },
                    {
                      "begin": 12761,
                      "end": 12796,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 12745,
                      "end": 12856,
                      "name": "OR",
                      "source": 15
                    },
                    {
                      "begin": 12742,
                      "end": 12988,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 12742,
                      "end": 12988,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "618"
                    },
                    {
                      "begin": 12742,
                      "end": 12988,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 12898,
                      "end": 12906,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 12892,
                      "end": 12896,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 12888,
                      "end": 12907,
                      "name": "EXP",
                      "source": 15
                    },
                    {
                      "begin": 12879,
                      "end": 12907,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 12879,
                      "end": 12907,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12933,
                      "end": 12936,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 12926,
                      "end": 12931,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 12923,
                      "end": 12937,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 12920,
                      "end": 12960,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 12920,
                      "end": 12960,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "619"
                    },
                    {
                      "begin": 12920,
                      "end": 12960,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 12940,
                      "end": 12958,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "620"
                    },
                    {
                      "begin": 12940,
                      "end": 12958,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "451"
                    },
                    {
                      "begin": 12940,
                      "end": 12958,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12940,
                      "end": 12958,
                      "name": "tag",
                      "source": 15,
                      "value": "620"
                    },
                    {
                      "begin": 12940,
                      "end": 12958,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12920,
                      "end": 12960,
                      "name": "tag",
                      "source": 15,
                      "value": "619"
                    },
                    {
                      "begin": 12920,
                      "end": 12960,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12973,
                      "end": 12978,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "608"
                    },
                    {
                      "begin": 12973,
                      "end": 12978,
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 12742,
                      "end": 12988,
                      "name": "tag",
                      "source": 15,
                      "value": "618"
                    },
                    {
                      "begin": 12742,
                      "end": 12988,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13013,
                      "end": 13055,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "621"
                    },
                    {
                      "begin": 13051,
                      "end": 13054,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 13041,
                      "end": 13049,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 13035,
                      "end": 13039,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 13032,
                      "end": 13033,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 13013,
                      "end": 13055,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "453"
                    },
                    {
                      "begin": 13013,
                      "end": 13055,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13013,
                      "end": 13055,
                      "name": "tag",
                      "source": 15,
                      "value": "621"
                    },
                    {
                      "begin": 13013,
                      "end": 13055,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12998,
                      "end": 13055,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 12998,
                      "end": 13055,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12998,
                      "end": 13055,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 12998,
                      "end": 13055,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13087,
                      "end": 13091,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 13082,
                      "end": 13085,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 13078,
                      "end": 13092,
                      "name": "DIV",
                      "source": 15
                    },
                    {
                      "begin": 13071,
                      "end": 13076,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 13068,
                      "end": 13093,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 13065,
                      "end": 13116,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 13065,
                      "end": 13116,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "622"
                    },
                    {
                      "begin": 13065,
                      "end": 13116,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 13096,
                      "end": 13114,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "623"
                    },
                    {
                      "begin": 13096,
                      "end": 13114,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "451"
                    },
                    {
                      "begin": 13096,
                      "end": 13114,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13096,
                      "end": 13114,
                      "name": "tag",
                      "source": 15,
                      "value": "623"
                    },
                    {
                      "begin": 13096,
                      "end": 13114,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13065,
                      "end": 13116,
                      "name": "tag",
                      "source": 15,
                      "value": "622"
                    },
                    {
                      "begin": 13065,
                      "end": 13116,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13145,
                      "end": 13149,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 13138,
                      "end": 13143,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 13134,
                      "end": 13150,
                      "name": "MUL",
                      "source": 15
                    },
                    {
                      "begin": 13125,
                      "end": 13150,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 13125,
                      "end": 13150,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12083,
                      "end": 13156,
                      "name": "tag",
                      "source": 15,
                      "value": "608"
                    },
                    {
                      "begin": 12083,
                      "end": 13156,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 12083,
                      "end": 13156,
                      "name": "SWAP4",
                      "source": 15
                    },
                    {
                      "begin": 12083,
                      "end": 13156,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 12083,
                      "end": 13156,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12083,
                      "end": 13156,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12083,
                      "end": 13156,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 12083,
                      "end": 13156,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13162,
                      "end": 13443,
                      "name": "tag",
                      "source": 15,
                      "value": "189"
                    },
                    {
                      "begin": 13162,
                      "end": 13443,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13220,
                      "end": 13225,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 13244,
                      "end": 13267,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "625"
                    },
                    {
                      "begin": 13262,
                      "end": 13266,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 13244,
                      "end": 13267,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 13244,
                      "end": 13267,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13244,
                      "end": 13267,
                      "name": "tag",
                      "source": 15,
                      "value": "625"
                    },
                    {
                      "begin": 13244,
                      "end": 13267,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13236,
                      "end": 13267,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 13236,
                      "end": 13267,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13288,
                      "end": 13313,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "626"
                    },
                    {
                      "begin": 13304,
                      "end": 13312,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 13288,
                      "end": 13313,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "434"
                    },
                    {
                      "begin": 13288,
                      "end": 13313,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13288,
                      "end": 13313,
                      "name": "tag",
                      "source": 15,
                      "value": "626"
                    },
                    {
                      "begin": 13288,
                      "end": 13313,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13276,
                      "end": 13313,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 13276,
                      "end": 13313,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13332,
                      "end": 13436,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "627"
                    },
                    {
                      "begin": 13369,
                      "end": 13435,
                      "name": "PUSH",
                      "source": 15,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 13359,
                      "end": 13367,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 13353,
                      "end": 13357,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 13332,
                      "end": 13436,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "454"
                    },
                    {
                      "begin": 13332,
                      "end": 13436,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13332,
                      "end": 13436,
                      "name": "tag",
                      "source": 15,
                      "value": "627"
                    },
                    {
                      "begin": 13332,
                      "end": 13436,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13323,
                      "end": 13436,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 13323,
                      "end": 13436,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13162,
                      "end": 13443,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 13162,
                      "end": 13443,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 13162,
                      "end": 13443,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13162,
                      "end": 13443,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13162,
                      "end": 13443,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13449,
                      "end": 13859,
                      "name": "tag",
                      "source": 15,
                      "value": "191"
                    },
                    {
                      "begin": 13449,
                      "end": 13859,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13489,
                      "end": 13496,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 13512,
                      "end": 13532,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "629"
                    },
                    {
                      "begin": 13530,
                      "end": 13531,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 13512,
                      "end": 13532,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 13512,
                      "end": 13532,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13512,
                      "end": 13532,
                      "name": "tag",
                      "source": 15,
                      "value": "629"
                    },
                    {
                      "begin": 13512,
                      "end": 13532,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13507,
                      "end": 13532,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 13507,
                      "end": 13532,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13546,
                      "end": 13566,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "630"
                    },
                    {
                      "begin": 13564,
                      "end": 13565,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 13546,
                      "end": 13566,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 13546,
                      "end": 13566,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13546,
                      "end": 13566,
                      "name": "tag",
                      "source": 15,
                      "value": "630"
                    },
                    {
                      "begin": 13546,
                      "end": 13566,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13541,
                      "end": 13566,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 13541,
                      "end": 13566,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13601,
                      "end": 13602,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 13598,
                      "end": 13599,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 13594,
                      "end": 13603,
                      "name": "MUL",
                      "source": 15
                    },
                    {
                      "begin": 13623,
                      "end": 13653,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "631"
                    },
                    {
                      "begin": 13641,
                      "end": 13652,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 13623,
                      "end": 13653,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 13623,
                      "end": 13653,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13623,
                      "end": 13653,
                      "name": "tag",
                      "source": 15,
                      "value": "631"
                    },
                    {
                      "begin": 13623,
                      "end": 13653,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13612,
                      "end": 13653,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 13612,
                      "end": 13653,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13802,
                      "end": 13803,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 13793,
                      "end": 13800,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 13789,
                      "end": 13804,
                      "name": "DIV",
                      "source": 15
                    },
                    {
                      "begin": 13786,
                      "end": 13787,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 13783,
                      "end": 13805,
                      "name": "EQ",
                      "source": 15
                    },
                    {
                      "begin": 13763,
                      "end": 13764,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 13756,
                      "end": 13765,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 13736,
                      "end": 13819,
                      "name": "OR",
                      "source": 15
                    },
                    {
                      "begin": 13713,
                      "end": 13852,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "632"
                    },
                    {
                      "begin": 13713,
                      "end": 13852,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 13832,
                      "end": 13850,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "633"
                    },
                    {
                      "begin": 13832,
                      "end": 13850,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "451"
                    },
                    {
                      "begin": 13832,
                      "end": 13850,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13832,
                      "end": 13850,
                      "name": "tag",
                      "source": 15,
                      "value": "633"
                    },
                    {
                      "begin": 13832,
                      "end": 13850,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13713,
                      "end": 13852,
                      "name": "tag",
                      "source": 15,
                      "value": "632"
                    },
                    {
                      "begin": 13713,
                      "end": 13852,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13497,
                      "end": 13859,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13449,
                      "end": 13859,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 13449,
                      "end": 13859,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 13449,
                      "end": 13859,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13449,
                      "end": 13859,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13449,
                      "end": 13859,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13865,
                      "end": 13950,
                      "name": "tag",
                      "source": 15,
                      "value": "455"
                    },
                    {
                      "begin": 13865,
                      "end": 13950,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13910,
                      "end": 13917,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 13939,
                      "end": 13944,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 13928,
                      "end": 13944,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 13928,
                      "end": 13944,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13865,
                      "end": 13950,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 13865,
                      "end": 13950,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 13865,
                      "end": 13950,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13865,
                      "end": 13950,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 13956,
                      "end": 14057,
                      "name": "tag",
                      "source": 15,
                      "value": "456"
                    },
                    {
                      "begin": 13956,
                      "end": 14057,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 13992,
                      "end": 13999,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 14032,
                      "end": 14050,
                      "name": "PUSH",
                      "source": 15,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 14025,
                      "end": 14030,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 14021,
                      "end": 14051,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 14010,
                      "end": 14051,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 14010,
                      "end": 14051,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13956,
                      "end": 14057,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 13956,
                      "end": 14057,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 13956,
                      "end": 14057,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 13956,
                      "end": 14057,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14063,
                      "end": 14123,
                      "name": "tag",
                      "source": 15,
                      "value": "457"
                    },
                    {
                      "begin": 14063,
                      "end": 14123,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14091,
                      "end": 14094,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 14112,
                      "end": 14117,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 14105,
                      "end": 14117,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 14105,
                      "end": 14117,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14063,
                      "end": 14123,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 14063,
                      "end": 14123,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 14063,
                      "end": 14123,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14063,
                      "end": 14123,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14129,
                      "end": 14285,
                      "name": "tag",
                      "source": 15,
                      "value": "458"
                    },
                    {
                      "begin": 14129,
                      "end": 14285,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14186,
                      "end": 14195,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 14219,
                      "end": 14279,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "638"
                    },
                    {
                      "begin": 14236,
                      "end": 14278,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "639"
                    },
                    {
                      "begin": 14245,
                      "end": 14277,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "640"
                    },
                    {
                      "begin": 14271,
                      "end": 14276,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 14245,
                      "end": 14277,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "455"
                    },
                    {
                      "begin": 14245,
                      "end": 14277,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14245,
                      "end": 14277,
                      "name": "tag",
                      "source": 15,
                      "value": "640"
                    },
                    {
                      "begin": 14245,
                      "end": 14277,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14236,
                      "end": 14278,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "457"
                    },
                    {
                      "begin": 14236,
                      "end": 14278,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14236,
                      "end": 14278,
                      "name": "tag",
                      "source": 15,
                      "value": "639"
                    },
                    {
                      "begin": 14236,
                      "end": 14278,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14219,
                      "end": 14279,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "456"
                    },
                    {
                      "begin": 14219,
                      "end": 14279,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14219,
                      "end": 14279,
                      "name": "tag",
                      "source": 15,
                      "value": "638"
                    },
                    {
                      "begin": 14219,
                      "end": 14279,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14206,
                      "end": 14279,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 14206,
                      "end": 14279,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14129,
                      "end": 14285,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 14129,
                      "end": 14285,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 14129,
                      "end": 14285,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14129,
                      "end": 14285,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14291,
                      "end": 14436,
                      "name": "tag",
                      "source": 15,
                      "value": "459"
                    },
                    {
                      "begin": 14291,
                      "end": 14436,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14385,
                      "end": 14429,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "642"
                    },
                    {
                      "begin": 14423,
                      "end": 14428,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 14385,
                      "end": 14429,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "458"
                    },
                    {
                      "begin": 14385,
                      "end": 14429,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14385,
                      "end": 14429,
                      "name": "tag",
                      "source": 15,
                      "value": "642"
                    },
                    {
                      "begin": 14385,
                      "end": 14429,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14380,
                      "end": 14383,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 14373,
                      "end": 14430,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 14291,
                      "end": 14436,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14291,
                      "end": 14436,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14291,
                      "end": 14436,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14442,
                      "end": 14678,
                      "name": "tag",
                      "source": 15,
                      "value": "256"
                    },
                    {
                      "begin": 14442,
                      "end": 14678,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14542,
                      "end": 14546,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 14580,
                      "end": 14582,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 14569,
                      "end": 14578,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 14565,
                      "end": 14583,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 14557,
                      "end": 14583,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 14557,
                      "end": 14583,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14593,
                      "end": 14671,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "644"
                    },
                    {
                      "begin": 14668,
                      "end": 14669,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 14657,
                      "end": 14666,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 14653,
                      "end": 14670,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 14644,
                      "end": 14650,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 14593,
                      "end": 14671,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "459"
                    },
                    {
                      "begin": 14593,
                      "end": 14671,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14593,
                      "end": 14671,
                      "name": "tag",
                      "source": 15,
                      "value": "644"
                    },
                    {
                      "begin": 14593,
                      "end": 14671,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14442,
                      "end": 14678,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 14442,
                      "end": 14678,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 14442,
                      "end": 14678,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14442,
                      "end": 14678,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14442,
                      "end": 14678,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14684,
                      "end": 14806,
                      "name": "tag",
                      "source": 15,
                      "value": "460"
                    },
                    {
                      "begin": 14684,
                      "end": 14806,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14757,
                      "end": 14781,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "646"
                    },
                    {
                      "begin": 14775,
                      "end": 14780,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 14757,
                      "end": 14781,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "446"
                    },
                    {
                      "begin": 14757,
                      "end": 14781,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14757,
                      "end": 14781,
                      "name": "tag",
                      "source": 15,
                      "value": "646"
                    },
                    {
                      "begin": 14757,
                      "end": 14781,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14750,
                      "end": 14755,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 14747,
                      "end": 14782,
                      "name": "EQ",
                      "source": 15
                    },
                    {
                      "begin": 14737,
                      "end": 14800,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "647"
                    },
                    {
                      "begin": 14737,
                      "end": 14800,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 14796,
                      "end": 14797,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 14793,
                      "end": 14794,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 14786,
                      "end": 14798,
                      "name": "REVERT",
                      "source": 15
                    },
                    {
                      "begin": 14737,
                      "end": 14800,
                      "name": "tag",
                      "source": 15,
                      "value": "647"
                    },
                    {
                      "begin": 14737,
                      "end": 14800,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14684,
                      "end": 14806,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14684,
                      "end": 14806,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14812,
                      "end": 14955,
                      "name": "tag",
                      "source": 15,
                      "value": "461"
                    },
                    {
                      "begin": 14812,
                      "end": 14955,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14869,
                      "end": 14874,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 14900,
                      "end": 14906,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 14894,
                      "end": 14907,
                      "name": "MLOAD",
                      "source": 15
                    },
                    {
                      "begin": 14885,
                      "end": 14907,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 14885,
                      "end": 14907,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14916,
                      "end": 14949,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "649"
                    },
                    {
                      "begin": 14943,
                      "end": 14948,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 14916,
                      "end": 14949,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "460"
                    },
                    {
                      "begin": 14916,
                      "end": 14949,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14916,
                      "end": 14949,
                      "name": "tag",
                      "source": 15,
                      "value": "649"
                    },
                    {
                      "begin": 14916,
                      "end": 14949,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 14812,
                      "end": 14955,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 14812,
                      "end": 14955,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 14812,
                      "end": 14955,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14812,
                      "end": 14955,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14812,
                      "end": 14955,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 14961,
                      "end": 15312,
                      "name": "tag",
                      "source": 15,
                      "value": "299"
                    },
                    {
                      "begin": 14961,
                      "end": 15312,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15031,
                      "end": 15037,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 15080,
                      "end": 15082,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 15068,
                      "end": 15077,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 15059,
                      "end": 15066,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 15055,
                      "end": 15078,
                      "name": "SUB",
                      "source": 15
                    },
                    {
                      "begin": 15051,
                      "end": 15083,
                      "name": "SLT",
                      "source": 15
                    },
                    {
                      "begin": 15048,
                      "end": 15167,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 15048,
                      "end": 15167,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "651"
                    },
                    {
                      "begin": 15048,
                      "end": 15167,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 15086,
                      "end": 15165,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "652"
                    },
                    {
                      "begin": 15086,
                      "end": 15165,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "422"
                    },
                    {
                      "begin": 15086,
                      "end": 15165,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15086,
                      "end": 15165,
                      "name": "tag",
                      "source": 15,
                      "value": "652"
                    },
                    {
                      "begin": 15086,
                      "end": 15165,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15048,
                      "end": 15167,
                      "name": "tag",
                      "source": 15,
                      "value": "651"
                    },
                    {
                      "begin": 15048,
                      "end": 15167,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15206,
                      "end": 15207,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 15231,
                      "end": 15295,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "653"
                    },
                    {
                      "begin": 15287,
                      "end": 15294,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 15278,
                      "end": 15284,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 15267,
                      "end": 15276,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 15263,
                      "end": 15285,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 15231,
                      "end": 15295,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "461"
                    },
                    {
                      "begin": 15231,
                      "end": 15295,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15231,
                      "end": 15295,
                      "name": "tag",
                      "source": 15,
                      "value": "653"
                    },
                    {
                      "begin": 15231,
                      "end": 15295,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15221,
                      "end": 15295,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 15221,
                      "end": 15295,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15177,
                      "end": 15305,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14961,
                      "end": 15312,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 14961,
                      "end": 15312,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 14961,
                      "end": 15312,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14961,
                      "end": 15312,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 14961,
                      "end": 15312,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15318,
                      "end": 15760,
                      "name": "tag",
                      "source": 15,
                      "value": "319"
                    },
                    {
                      "begin": 15318,
                      "end": 15760,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15467,
                      "end": 15471,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 15505,
                      "end": 15507,
                      "name": "PUSH",
                      "source": 15,
                      "value": "60"
                    },
                    {
                      "begin": 15494,
                      "end": 15503,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 15490,
                      "end": 15508,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 15482,
                      "end": 15508,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 15482,
                      "end": 15508,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15518,
                      "end": 15589,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "655"
                    },
                    {
                      "begin": 15586,
                      "end": 15587,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 15575,
                      "end": 15584,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 15571,
                      "end": 15588,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 15562,
                      "end": 15568,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 15518,
                      "end": 15589,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "436"
                    },
                    {
                      "begin": 15518,
                      "end": 15589,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15518,
                      "end": 15589,
                      "name": "tag",
                      "source": 15,
                      "value": "655"
                    },
                    {
                      "begin": 15518,
                      "end": 15589,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15599,
                      "end": 15671,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "656"
                    },
                    {
                      "begin": 15667,
                      "end": 15669,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 15656,
                      "end": 15665,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 15652,
                      "end": 15670,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 15643,
                      "end": 15649,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 15599,
                      "end": 15671,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "433"
                    },
                    {
                      "begin": 15599,
                      "end": 15671,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15599,
                      "end": 15671,
                      "name": "tag",
                      "source": 15,
                      "value": "656"
                    },
                    {
                      "begin": 15599,
                      "end": 15671,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15681,
                      "end": 15753,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "657"
                    },
                    {
                      "begin": 15749,
                      "end": 15751,
                      "name": "PUSH",
                      "source": 15,
                      "value": "40"
                    },
                    {
                      "begin": 15738,
                      "end": 15747,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 15734,
                      "end": 15752,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 15725,
                      "end": 15731,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 15681,
                      "end": 15753,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "433"
                    },
                    {
                      "begin": 15681,
                      "end": 15753,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15681,
                      "end": 15753,
                      "name": "tag",
                      "source": 15,
                      "value": "657"
                    },
                    {
                      "begin": 15681,
                      "end": 15753,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15318,
                      "end": 15760,
                      "name": "SWAP5",
                      "source": 15
                    },
                    {
                      "begin": 15318,
                      "end": 15760,
                      "name": "SWAP4",
                      "source": 15
                    },
                    {
                      "begin": 15318,
                      "end": 15760,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15318,
                      "end": 15760,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15318,
                      "end": 15760,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15318,
                      "end": 15760,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15318,
                      "end": 15760,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15766,
                      "end": 15957,
                      "name": "tag",
                      "source": 15,
                      "value": "352"
                    },
                    {
                      "begin": 15766,
                      "end": 15957,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15806,
                      "end": 15809,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 15825,
                      "end": 15845,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "659"
                    },
                    {
                      "begin": 15843,
                      "end": 15844,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 15825,
                      "end": 15845,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 15825,
                      "end": 15845,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15825,
                      "end": 15845,
                      "name": "tag",
                      "source": 15,
                      "value": "659"
                    },
                    {
                      "begin": 15825,
                      "end": 15845,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15820,
                      "end": 15845,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 15820,
                      "end": 15845,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15859,
                      "end": 15879,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "660"
                    },
                    {
                      "begin": 15877,
                      "end": 15878,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 15859,
                      "end": 15879,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 15859,
                      "end": 15879,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15859,
                      "end": 15879,
                      "name": "tag",
                      "source": 15,
                      "value": "660"
                    },
                    {
                      "begin": 15859,
                      "end": 15879,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15854,
                      "end": 15879,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 15854,
                      "end": 15879,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15902,
                      "end": 15903,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 15899,
                      "end": 15900,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 15895,
                      "end": 15904,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 15888,
                      "end": 15904,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 15888,
                      "end": 15904,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15923,
                      "end": 15926,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 15920,
                      "end": 15921,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 15917,
                      "end": 15927,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 15914,
                      "end": 15950,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 15914,
                      "end": 15950,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "661"
                    },
                    {
                      "begin": 15914,
                      "end": 15950,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 15930,
                      "end": 15948,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "662"
                    },
                    {
                      "begin": 15930,
                      "end": 15948,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "451"
                    },
                    {
                      "begin": 15930,
                      "end": 15948,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15930,
                      "end": 15948,
                      "name": "tag",
                      "source": 15,
                      "value": "662"
                    },
                    {
                      "begin": 15930,
                      "end": 15948,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15914,
                      "end": 15950,
                      "name": "tag",
                      "source": 15,
                      "value": "661"
                    },
                    {
                      "begin": 15914,
                      "end": 15950,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 15766,
                      "end": 15957,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 15766,
                      "end": 15957,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 15766,
                      "end": 15957,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15766,
                      "end": 15957,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15766,
                      "end": 15957,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 15963,
                      "end": 16104,
                      "name": "tag",
                      "source": 15,
                      "value": "462"
                    },
                    {
                      "begin": 15963,
                      "end": 16104,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16012,
                      "end": 16016,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 16035,
                      "end": 16038,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 16027,
                      "end": 16038,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 16027,
                      "end": 16038,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16058,
                      "end": 16061,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 16055,
                      "end": 16056,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 16048,
                      "end": 16062,
                      "name": "MSTORE",
                      "source": 15
                    },
                    {
                      "begin": 16092,
                      "end": 16096,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 16089,
                      "end": 16090,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 16079,
                      "end": 16097,
                      "name": "KECCAK256",
                      "source": 15
                    },
                    {
                      "begin": 16071,
                      "end": 16097,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 16071,
                      "end": 16097,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15963,
                      "end": 16104,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 15963,
                      "end": 16104,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 15963,
                      "end": 16104,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 15963,
                      "end": 16104,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16110,
                      "end": 16203,
                      "name": "tag",
                      "source": 15,
                      "value": "463"
                    },
                    {
                      "begin": 16110,
                      "end": 16203,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16147,
                      "end": 16153,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 16194,
                      "end": 16196,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 16189,
                      "end": 16191,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1F"
                    },
                    {
                      "begin": 16182,
                      "end": 16187,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 16178,
                      "end": 16192,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 16174,
                      "end": 16197,
                      "name": "DIV",
                      "source": 15
                    },
                    {
                      "begin": 16164,
                      "end": 16197,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 16164,
                      "end": 16197,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16110,
                      "end": 16203,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 16110,
                      "end": 16203,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 16110,
                      "end": 16203,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16110,
                      "end": 16203,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16209,
                      "end": 16316,
                      "name": "tag",
                      "source": 15,
                      "value": "464"
                    },
                    {
                      "begin": 16209,
                      "end": 16316,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16253,
                      "end": 16261,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 16303,
                      "end": 16308,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 16297,
                      "end": 16301,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 16293,
                      "end": 16309,
                      "name": "SHL",
                      "source": 15
                    },
                    {
                      "begin": 16272,
                      "end": 16309,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 16272,
                      "end": 16309,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16209,
                      "end": 16316,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 16209,
                      "end": 16316,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 16209,
                      "end": 16316,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16209,
                      "end": 16316,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16209,
                      "end": 16316,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16322,
                      "end": 16715,
                      "name": "tag",
                      "source": 15,
                      "value": "465"
                    },
                    {
                      "begin": 16322,
                      "end": 16715,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16391,
                      "end": 16397,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 16441,
                      "end": 16442,
                      "name": "PUSH",
                      "source": 15,
                      "value": "8"
                    },
                    {
                      "begin": 16429,
                      "end": 16439,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 16425,
                      "end": 16443,
                      "name": "MUL",
                      "source": 15
                    },
                    {
                      "begin": 16464,
                      "end": 16561,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "667"
                    },
                    {
                      "begin": 16494,
                      "end": 16560,
                      "name": "PUSH",
                      "source": 15,
                      "value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 16483,
                      "end": 16492,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 16464,
                      "end": 16561,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "464"
                    },
                    {
                      "begin": 16464,
                      "end": 16561,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16464,
                      "end": 16561,
                      "name": "tag",
                      "source": 15,
                      "value": "667"
                    },
                    {
                      "begin": 16464,
                      "end": 16561,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16582,
                      "end": 16621,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "668"
                    },
                    {
                      "begin": 16612,
                      "end": 16620,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 16601,
                      "end": 16610,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 16582,
                      "end": 16621,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "464"
                    },
                    {
                      "begin": 16582,
                      "end": 16621,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16582,
                      "end": 16621,
                      "name": "tag",
                      "source": 15,
                      "value": "668"
                    },
                    {
                      "begin": 16582,
                      "end": 16621,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16570,
                      "end": 16621,
                      "name": "SWAP6",
                      "source": 15
                    },
                    {
                      "begin": 16570,
                      "end": 16621,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16654,
                      "end": 16658,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 16650,
                      "end": 16659,
                      "name": "NOT",
                      "source": 15
                    },
                    {
                      "begin": 16643,
                      "end": 16648,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 16639,
                      "end": 16660,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 16630,
                      "end": 16660,
                      "name": "SWAP4",
                      "source": 15
                    },
                    {
                      "begin": 16630,
                      "end": 16660,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16703,
                      "end": 16707,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 16693,
                      "end": 16701,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 16689,
                      "end": 16708,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 16682,
                      "end": 16687,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 16679,
                      "end": 16709,
                      "name": "OR",
                      "source": 15
                    },
                    {
                      "begin": 16669,
                      "end": 16709,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 16669,
                      "end": 16709,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16398,
                      "end": 16715,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16398,
                      "end": 16715,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16322,
                      "end": 16715,
                      "name": "SWAP4",
                      "source": 15
                    },
                    {
                      "begin": 16322,
                      "end": 16715,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 16322,
                      "end": 16715,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16322,
                      "end": 16715,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16322,
                      "end": 16715,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16322,
                      "end": 16715,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16721,
                      "end": 16863,
                      "name": "tag",
                      "source": 15,
                      "value": "466"
                    },
                    {
                      "begin": 16721,
                      "end": 16863,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16771,
                      "end": 16780,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 16804,
                      "end": 16857,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "670"
                    },
                    {
                      "begin": 16822,
                      "end": 16856,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "671"
                    },
                    {
                      "begin": 16831,
                      "end": 16855,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "672"
                    },
                    {
                      "begin": 16849,
                      "end": 16854,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 16831,
                      "end": 16855,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 16831,
                      "end": 16855,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16831,
                      "end": 16855,
                      "name": "tag",
                      "source": 15,
                      "value": "672"
                    },
                    {
                      "begin": 16831,
                      "end": 16855,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16822,
                      "end": 16856,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "457"
                    },
                    {
                      "begin": 16822,
                      "end": 16856,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16822,
                      "end": 16856,
                      "name": "tag",
                      "source": 15,
                      "value": "671"
                    },
                    {
                      "begin": 16822,
                      "end": 16856,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16804,
                      "end": 16857,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "428"
                    },
                    {
                      "begin": 16804,
                      "end": 16857,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16804,
                      "end": 16857,
                      "name": "tag",
                      "source": 15,
                      "value": "670"
                    },
                    {
                      "begin": 16804,
                      "end": 16857,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16791,
                      "end": 16857,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 16791,
                      "end": 16857,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16721,
                      "end": 16863,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 16721,
                      "end": 16863,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 16721,
                      "end": 16863,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16721,
                      "end": 16863,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16869,
                      "end": 16944,
                      "name": "tag",
                      "source": 15,
                      "value": "467"
                    },
                    {
                      "begin": 16869,
                      "end": 16944,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 16912,
                      "end": 16915,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 16933,
                      "end": 16938,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 16926,
                      "end": 16938,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 16926,
                      "end": 16938,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16869,
                      "end": 16944,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 16869,
                      "end": 16944,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 16869,
                      "end": 16944,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16869,
                      "end": 16944,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 16950,
                      "end": 17219,
                      "name": "tag",
                      "source": 15,
                      "value": "468"
                    },
                    {
                      "begin": 16950,
                      "end": 17219,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17060,
                      "end": 17099,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "675"
                    },
                    {
                      "begin": 17091,
                      "end": 17098,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 17060,
                      "end": 17099,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "466"
                    },
                    {
                      "begin": 17060,
                      "end": 17099,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17060,
                      "end": 17099,
                      "name": "tag",
                      "source": 15,
                      "value": "675"
                    },
                    {
                      "begin": 17060,
                      "end": 17099,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17121,
                      "end": 17212,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "676"
                    },
                    {
                      "begin": 17170,
                      "end": 17211,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "677"
                    },
                    {
                      "begin": 17194,
                      "end": 17210,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 17170,
                      "end": 17211,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "467"
                    },
                    {
                      "begin": 17170,
                      "end": 17211,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17170,
                      "end": 17211,
                      "name": "tag",
                      "source": 15,
                      "value": "677"
                    },
                    {
                      "begin": 17170,
                      "end": 17211,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17162,
                      "end": 17168,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 17155,
                      "end": 17159,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 17149,
                      "end": 17160,
                      "name": "SLOAD",
                      "source": 15
                    },
                    {
                      "begin": 17121,
                      "end": 17212,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "465"
                    },
                    {
                      "begin": 17121,
                      "end": 17212,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17121,
                      "end": 17212,
                      "name": "tag",
                      "source": 15,
                      "value": "676"
                    },
                    {
                      "begin": 17121,
                      "end": 17212,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17115,
                      "end": 17119,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 17108,
                      "end": 17213,
                      "name": "SSTORE",
                      "source": 15
                    },
                    {
                      "begin": 17026,
                      "end": 17219,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16950,
                      "end": 17219,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16950,
                      "end": 17219,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16950,
                      "end": 17219,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 16950,
                      "end": 17219,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17225,
                      "end": 17298,
                      "name": "tag",
                      "source": 15,
                      "value": "469"
                    },
                    {
                      "begin": 17225,
                      "end": 17298,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17270,
                      "end": 17273,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 17225,
                      "end": 17298,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 17225,
                      "end": 17298,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17304,
                      "end": 17493,
                      "name": "tag",
                      "source": 15,
                      "value": "470"
                    },
                    {
                      "begin": 17304,
                      "end": 17493,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17381,
                      "end": 17413,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "680"
                    },
                    {
                      "begin": 17381,
                      "end": 17413,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "469"
                    },
                    {
                      "begin": 17381,
                      "end": 17413,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17381,
                      "end": 17413,
                      "name": "tag",
                      "source": 15,
                      "value": "680"
                    },
                    {
                      "begin": 17381,
                      "end": 17413,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17422,
                      "end": 17487,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "681"
                    },
                    {
                      "begin": 17480,
                      "end": 17486,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 17472,
                      "end": 17478,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 17466,
                      "end": 17470,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 17422,
                      "end": 17487,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "468"
                    },
                    {
                      "begin": 17422,
                      "end": 17487,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17422,
                      "end": 17487,
                      "name": "tag",
                      "source": 15,
                      "value": "681"
                    },
                    {
                      "begin": 17422,
                      "end": 17487,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17357,
                      "end": 17493,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17304,
                      "end": 17493,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17304,
                      "end": 17493,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17304,
                      "end": 17493,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17499,
                      "end": 17685,
                      "name": "tag",
                      "source": 15,
                      "value": "471"
                    },
                    {
                      "begin": 17499,
                      "end": 17685,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17559,
                      "end": 17679,
                      "name": "tag",
                      "source": 15,
                      "value": "683"
                    },
                    {
                      "begin": 17559,
                      "end": 17679,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17576,
                      "end": 17579,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 17569,
                      "end": 17574,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 17566,
                      "end": 17580,
                      "name": "LT",
                      "source": 15
                    },
                    {
                      "begin": 17559,
                      "end": 17679,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 17559,
                      "end": 17679,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "685"
                    },
                    {
                      "begin": 17559,
                      "end": 17679,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 17630,
                      "end": 17669,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "686"
                    },
                    {
                      "begin": 17667,
                      "end": 17668,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 17660,
                      "end": 17665,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 17630,
                      "end": 17669,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "470"
                    },
                    {
                      "begin": 17630,
                      "end": 17669,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17630,
                      "end": 17669,
                      "name": "tag",
                      "source": 15,
                      "value": "686"
                    },
                    {
                      "begin": 17630,
                      "end": 17669,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17603,
                      "end": 17604,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 17596,
                      "end": 17601,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 17592,
                      "end": 17605,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 17583,
                      "end": 17605,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 17583,
                      "end": 17605,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17559,
                      "end": 17679,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "683"
                    },
                    {
                      "begin": 17559,
                      "end": 17679,
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17559,
                      "end": 17679,
                      "name": "tag",
                      "source": 15,
                      "value": "685"
                    },
                    {
                      "begin": 17559,
                      "end": 17679,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17499,
                      "end": 17685,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17499,
                      "end": 17685,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17499,
                      "end": 17685,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17691,
                      "end": 18234,
                      "name": "tag",
                      "source": 15,
                      "value": "472"
                    },
                    {
                      "begin": 17691,
                      "end": 18234,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17792,
                      "end": 17794,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1F"
                    },
                    {
                      "begin": 17787,
                      "end": 17790,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 17784,
                      "end": 17795,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 17781,
                      "end": 18227,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 17781,
                      "end": 18227,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "688"
                    },
                    {
                      "begin": 17781,
                      "end": 18227,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 17826,
                      "end": 17864,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "689"
                    },
                    {
                      "begin": 17858,
                      "end": 17863,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 17826,
                      "end": 17864,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "462"
                    },
                    {
                      "begin": 17826,
                      "end": 17864,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17826,
                      "end": 17864,
                      "name": "tag",
                      "source": 15,
                      "value": "689"
                    },
                    {
                      "begin": 17826,
                      "end": 17864,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17910,
                      "end": 17939,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "690"
                    },
                    {
                      "begin": 17928,
                      "end": 17938,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 17910,
                      "end": 17939,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "463"
                    },
                    {
                      "begin": 17910,
                      "end": 17939,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 17910,
                      "end": 17939,
                      "name": "tag",
                      "source": 15,
                      "value": "690"
                    },
                    {
                      "begin": 17910,
                      "end": 17939,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17900,
                      "end": 17908,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 17896,
                      "end": 17940,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 18093,
                      "end": 18095,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 18081,
                      "end": 18091,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 18078,
                      "end": 18096,
                      "name": "LT",
                      "source": 15
                    },
                    {
                      "begin": 18075,
                      "end": 18124,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 18075,
                      "end": 18124,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "691"
                    },
                    {
                      "begin": 18075,
                      "end": 18124,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 18114,
                      "end": 18122,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 18099,
                      "end": 18122,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 18099,
                      "end": 18122,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18075,
                      "end": 18124,
                      "name": "tag",
                      "source": 15,
                      "value": "691"
                    },
                    {
                      "begin": 18075,
                      "end": 18124,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 18137,
                      "end": 18217,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "692"
                    },
                    {
                      "begin": 18193,
                      "end": 18215,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "693"
                    },
                    {
                      "begin": 18211,
                      "end": 18214,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 18193,
                      "end": 18215,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "463"
                    },
                    {
                      "begin": 18193,
                      "end": 18215,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 18193,
                      "end": 18215,
                      "name": "tag",
                      "source": 15,
                      "value": "693"
                    },
                    {
                      "begin": 18193,
                      "end": 18215,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 18183,
                      "end": 18191,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 18179,
                      "end": 18216,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 18166,
                      "end": 18177,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 18137,
                      "end": 18217,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "471"
                    },
                    {
                      "begin": 18137,
                      "end": 18217,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 18137,
                      "end": 18217,
                      "name": "tag",
                      "source": 15,
                      "value": "692"
                    },
                    {
                      "begin": 18137,
                      "end": 18217,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17796,
                      "end": 18227,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17796,
                      "end": 18227,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17781,
                      "end": 18227,
                      "name": "tag",
                      "source": 15,
                      "value": "688"
                    },
                    {
                      "begin": 17781,
                      "end": 18227,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 17691,
                      "end": 18234,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17691,
                      "end": 18234,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17691,
                      "end": 18234,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 17691,
                      "end": 18234,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 18240,
                      "end": 18357,
                      "name": "tag",
                      "source": 15,
                      "value": "473"
                    },
                    {
                      "begin": 18240,
                      "end": 18357,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 18294,
                      "end": 18302,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 18344,
                      "end": 18349,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 18338,
                      "end": 18342,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 18334,
                      "end": 18350,
                      "name": "SHR",
                      "source": 15
                    },
                    {
                      "begin": 18313,
                      "end": 18350,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 18313,
                      "end": 18350,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18240,
                      "end": 18357,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 18240,
                      "end": 18357,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 18240,
                      "end": 18357,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18240,
                      "end": 18357,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18240,
                      "end": 18357,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 18363,
                      "end": 18532,
                      "name": "tag",
                      "source": 15,
                      "value": "474"
                    },
                    {
                      "begin": 18363,
                      "end": 18532,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 18407,
                      "end": 18413,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 18440,
                      "end": 18491,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "696"
                    },
                    {
                      "begin": 18488,
                      "end": 18489,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 18484,
                      "end": 18490,
                      "name": "NOT",
                      "source": 15
                    },
                    {
                      "begin": 18476,
                      "end": 18481,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 18473,
                      "end": 18474,
                      "name": "PUSH",
                      "source": 15,
                      "value": "8"
                    },
                    {
                      "begin": 18469,
                      "end": 18482,
                      "name": "MUL",
                      "source": 15
                    },
                    {
                      "begin": 18440,
                      "end": 18491,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "473"
                    },
                    {
                      "begin": 18440,
                      "end": 18491,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 18440,
                      "end": 18491,
                      "name": "tag",
                      "source": 15,
                      "value": "696"
                    },
                    {
                      "begin": 18440,
                      "end": 18491,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 18436,
                      "end": 18492,
                      "name": "NOT",
                      "source": 15
                    },
                    {
                      "begin": 18521,
                      "end": 18525,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 18515,
                      "end": 18519,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 18511,
                      "end": 18526,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 18501,
                      "end": 18526,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 18501,
                      "end": 18526,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18414,
                      "end": 18532,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18363,
                      "end": 18532,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 18363,
                      "end": 18532,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 18363,
                      "end": 18532,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18363,
                      "end": 18532,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18363,
                      "end": 18532,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 18537,
                      "end": 18832,
                      "name": "tag",
                      "source": 15,
                      "value": "475"
                    },
                    {
                      "begin": 18537,
                      "end": 18832,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 18613,
                      "end": 18617,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 18759,
                      "end": 18788,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "698"
                    },
                    {
                      "begin": 18784,
                      "end": 18787,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 18778,
                      "end": 18782,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 18759,
                      "end": 18788,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "474"
                    },
                    {
                      "begin": 18759,
                      "end": 18788,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 18759,
                      "end": 18788,
                      "name": "tag",
                      "source": 15,
                      "value": "698"
                    },
                    {
                      "begin": 18759,
                      "end": 18788,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 18751,
                      "end": 18788,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 18751,
                      "end": 18788,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18821,
                      "end": 18824,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 18818,
                      "end": 18819,
                      "name": "PUSH",
                      "source": 15,
                      "value": "2"
                    },
                    {
                      "begin": 18814,
                      "end": 18825,
                      "name": "MUL",
                      "source": 15
                    },
                    {
                      "begin": 18808,
                      "end": 18812,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 18805,
                      "end": 18826,
                      "name": "OR",
                      "source": 15
                    },
                    {
                      "begin": 18797,
                      "end": 18826,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 18797,
                      "end": 18826,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18537,
                      "end": 18832,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 18537,
                      "end": 18832,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 18537,
                      "end": 18832,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18537,
                      "end": 18832,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18537,
                      "end": 18832,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 18837,
                      "end": 20232,
                      "name": "tag",
                      "source": 15,
                      "value": "380"
                    },
                    {
                      "begin": 18837,
                      "end": 20232,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 18954,
                      "end": 18991,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "700"
                    },
                    {
                      "begin": 18987,
                      "end": 18990,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 18954,
                      "end": 18991,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "416"
                    },
                    {
                      "begin": 18954,
                      "end": 18991,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 18954,
                      "end": 18991,
                      "name": "tag",
                      "source": 15,
                      "value": "700"
                    },
                    {
                      "begin": 18954,
                      "end": 18991,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19056,
                      "end": 19074,
                      "name": "PUSH",
                      "source": 15,
                      "value": "FFFFFFFFFFFFFFFF"
                    },
                    {
                      "begin": 19048,
                      "end": 19054,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 19045,
                      "end": 19075,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 19042,
                      "end": 19098,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 19042,
                      "end": 19098,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "701"
                    },
                    {
                      "begin": 19042,
                      "end": 19098,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 19078,
                      "end": 19096,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "702"
                    },
                    {
                      "begin": 19078,
                      "end": 19096,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "439"
                    },
                    {
                      "begin": 19078,
                      "end": 19096,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 19078,
                      "end": 19096,
                      "name": "tag",
                      "source": 15,
                      "value": "702"
                    },
                    {
                      "begin": 19078,
                      "end": 19096,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19042,
                      "end": 19098,
                      "name": "tag",
                      "source": 15,
                      "value": "701"
                    },
                    {
                      "begin": 19042,
                      "end": 19098,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19122,
                      "end": 19160,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "703"
                    },
                    {
                      "begin": 19154,
                      "end": 19158,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 19148,
                      "end": 19159,
                      "name": "SLOAD",
                      "source": 15
                    },
                    {
                      "begin": 19122,
                      "end": 19160,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "162"
                    },
                    {
                      "begin": 19122,
                      "end": 19160,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 19122,
                      "end": 19160,
                      "name": "tag",
                      "source": 15,
                      "value": "703"
                    },
                    {
                      "begin": 19122,
                      "end": 19160,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19207,
                      "end": 19274,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "704"
                    },
                    {
                      "begin": 19267,
                      "end": 19273,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 19259,
                      "end": 19265,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 19253,
                      "end": 19257,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 19207,
                      "end": 19274,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "472"
                    },
                    {
                      "begin": 19207,
                      "end": 19274,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 19207,
                      "end": 19274,
                      "name": "tag",
                      "source": 15,
                      "value": "704"
                    },
                    {
                      "begin": 19207,
                      "end": 19274,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19301,
                      "end": 19302,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 19325,
                      "end": 19329,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 19312,
                      "end": 19329,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 19312,
                      "end": 19329,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 19357,
                      "end": 19359,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1F"
                    },
                    {
                      "begin": 19349,
                      "end": 19355,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 19346,
                      "end": 19360,
                      "name": "GT",
                      "source": 15
                    },
                    {
                      "begin": 19374,
                      "end": 19375,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 19369,
                      "end": 19987,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 19369,
                      "end": 19987,
                      "name": "EQ",
                      "source": 15
                    },
                    {
                      "begin": 19369,
                      "end": 19987,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "706"
                    },
                    {
                      "begin": 19369,
                      "end": 19987,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 20031,
                      "end": 20032,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 20048,
                      "end": 20054,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 20045,
                      "end": 20122,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 20045,
                      "end": 20122,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "707"
                    },
                    {
                      "begin": 20045,
                      "end": 20122,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 20097,
                      "end": 20106,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 20092,
                      "end": 20095,
                      "name": "DUP8",
                      "source": 15
                    },
                    {
                      "begin": 20088,
                      "end": 20107,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 20082,
                      "end": 20108,
                      "name": "MLOAD",
                      "source": 15
                    },
                    {
                      "begin": 20073,
                      "end": 20108,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 20073,
                      "end": 20108,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20045,
                      "end": 20122,
                      "name": "tag",
                      "source": 15,
                      "value": "707"
                    },
                    {
                      "begin": 20045,
                      "end": 20122,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 20148,
                      "end": 20215,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "708"
                    },
                    {
                      "begin": 20208,
                      "end": 20214,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 20201,
                      "end": 20206,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 20148,
                      "end": 20215,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "475"
                    },
                    {
                      "begin": 20148,
                      "end": 20215,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 20148,
                      "end": 20215,
                      "name": "tag",
                      "source": 15,
                      "value": "708"
                    },
                    {
                      "begin": 20148,
                      "end": 20215,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 20142,
                      "end": 20146,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 20135,
                      "end": 20216,
                      "name": "SSTORE",
                      "source": 15
                    },
                    {
                      "begin": 20004,
                      "end": 20226,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 19339,
                      "end": 20226,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "705"
                    },
                    {
                      "begin": 19339,
                      "end": 20226,
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 19369,
                      "end": 19987,
                      "name": "tag",
                      "source": 15,
                      "value": "706"
                    },
                    {
                      "begin": 19369,
                      "end": 19987,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19421,
                      "end": 19425,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1F"
                    },
                    {
                      "begin": 19417,
                      "end": 19426,
                      "name": "NOT",
                      "source": 15
                    },
                    {
                      "begin": 19409,
                      "end": 19415,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 19405,
                      "end": 19427,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 19455,
                      "end": 19492,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "709"
                    },
                    {
                      "begin": 19487,
                      "end": 19491,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 19455,
                      "end": 19492,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "462"
                    },
                    {
                      "begin": 19455,
                      "end": 19492,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 19455,
                      "end": 19492,
                      "name": "tag",
                      "source": 15,
                      "value": "709"
                    },
                    {
                      "begin": 19455,
                      "end": 19492,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19514,
                      "end": 19515,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 19528,
                      "end": 19736,
                      "name": "tag",
                      "source": 15,
                      "value": "710"
                    },
                    {
                      "begin": 19528,
                      "end": 19736,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19542,
                      "end": 19549,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 19539,
                      "end": 19540,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 19536,
                      "end": 19550,
                      "name": "LT",
                      "source": 15
                    },
                    {
                      "begin": 19528,
                      "end": 19736,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 19528,
                      "end": 19736,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "712"
                    },
                    {
                      "begin": 19528,
                      "end": 19736,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 19621,
                      "end": 19630,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 19616,
                      "end": 19619,
                      "name": "DUP10",
                      "source": 15
                    },
                    {
                      "begin": 19612,
                      "end": 19631,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 19606,
                      "end": 19632,
                      "name": "MLOAD",
                      "source": 15
                    },
                    {
                      "begin": 19598,
                      "end": 19604,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 19591,
                      "end": 19633,
                      "name": "SSTORE",
                      "source": 15
                    },
                    {
                      "begin": 19672,
                      "end": 19673,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 19664,
                      "end": 19670,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 19660,
                      "end": 19674,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 19650,
                      "end": 19674,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 19650,
                      "end": 19674,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 19719,
                      "end": 19721,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 19708,
                      "end": 19717,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 19704,
                      "end": 19722,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 19691,
                      "end": 19722,
                      "name": "SWAP5",
                      "source": 15
                    },
                    {
                      "begin": 19691,
                      "end": 19722,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 19565,
                      "end": 19569,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 19562,
                      "end": 19563,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 19558,
                      "end": 19570,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 19553,
                      "end": 19570,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 19553,
                      "end": 19570,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 19528,
                      "end": 19736,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "710"
                    },
                    {
                      "begin": 19528,
                      "end": 19736,
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 19528,
                      "end": 19736,
                      "name": "tag",
                      "source": 15,
                      "value": "712"
                    },
                    {
                      "begin": 19528,
                      "end": 19736,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19764,
                      "end": 19770,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 19755,
                      "end": 19762,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 19752,
                      "end": 19771,
                      "name": "LT",
                      "source": 15
                    },
                    {
                      "begin": 19749,
                      "end": 19928,
                      "name": "ISZERO",
                      "source": 15
                    },
                    {
                      "begin": 19749,
                      "end": 19928,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "713"
                    },
                    {
                      "begin": 19749,
                      "end": 19928,
                      "name": "JUMPI",
                      "source": 15
                    },
                    {
                      "begin": 19822,
                      "end": 19831,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 19817,
                      "end": 19820,
                      "name": "DUP10",
                      "source": 15
                    },
                    {
                      "begin": 19813,
                      "end": 19832,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 19807,
                      "end": 19833,
                      "name": "MLOAD",
                      "source": 15
                    },
                    {
                      "begin": 19865,
                      "end": 19913,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "714"
                    },
                    {
                      "begin": 19907,
                      "end": 19911,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1F"
                    },
                    {
                      "begin": 19899,
                      "end": 19905,
                      "name": "DUP10",
                      "source": 15
                    },
                    {
                      "begin": 19895,
                      "end": 19912,
                      "name": "AND",
                      "source": 15
                    },
                    {
                      "begin": 19884,
                      "end": 19893,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 19865,
                      "end": 19913,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "474"
                    },
                    {
                      "begin": 19865,
                      "end": 19913,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 19865,
                      "end": 19913,
                      "name": "tag",
                      "source": 15,
                      "value": "714"
                    },
                    {
                      "begin": 19865,
                      "end": 19913,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19857,
                      "end": 19863,
                      "name": "DUP4",
                      "source": 15
                    },
                    {
                      "begin": 19850,
                      "end": 19914,
                      "name": "SSTORE",
                      "source": 15
                    },
                    {
                      "begin": 19772,
                      "end": 19928,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 19749,
                      "end": 19928,
                      "name": "tag",
                      "source": 15,
                      "value": "713"
                    },
                    {
                      "begin": 19749,
                      "end": 19928,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19974,
                      "end": 19975,
                      "name": "PUSH",
                      "source": 15,
                      "value": "1"
                    },
                    {
                      "begin": 19970,
                      "end": 19971,
                      "name": "PUSH",
                      "source": 15,
                      "value": "2"
                    },
                    {
                      "begin": 19962,
                      "end": 19968,
                      "name": "DUP9",
                      "source": 15
                    },
                    {
                      "begin": 19958,
                      "end": 19972,
                      "name": "MUL",
                      "source": 15
                    },
                    {
                      "begin": 19954,
                      "end": 19976,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 19948,
                      "end": 19952,
                      "name": "DUP9",
                      "source": 15
                    },
                    {
                      "begin": 19941,
                      "end": 19977,
                      "name": "SSTORE",
                      "source": 15
                    },
                    {
                      "begin": 19376,
                      "end": 19987,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 19376,
                      "end": 19987,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 19376,
                      "end": 19987,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 19339,
                      "end": 20226,
                      "name": "tag",
                      "source": 15,
                      "value": "705"
                    },
                    {
                      "begin": 19339,
                      "end": 20226,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 19339,
                      "end": 20226,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18929,
                      "end": 20232,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18929,
                      "end": 20232,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18929,
                      "end": 20232,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18837,
                      "end": 20232,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18837,
                      "end": 20232,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 18837,
                      "end": 20232,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 20238,
                      "end": 20336,
                      "name": "tag",
                      "source": 15,
                      "value": "476"
                    },
                    {
                      "begin": 20238,
                      "end": 20336,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 20289,
                      "end": 20295,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 20323,
                      "end": 20328,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 20317,
                      "end": 20329,
                      "name": "MLOAD",
                      "source": 15
                    },
                    {
                      "begin": 20307,
                      "end": 20329,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 20307,
                      "end": 20329,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20238,
                      "end": 20336,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 20238,
                      "end": 20336,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 20238,
                      "end": 20336,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20238,
                      "end": 20336,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 20342,
                      "end": 20489,
                      "name": "tag",
                      "source": 15,
                      "value": "477"
                    },
                    {
                      "begin": 20342,
                      "end": 20489,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 20443,
                      "end": 20454,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 20480,
                      "end": 20483,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 20465,
                      "end": 20483,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 20465,
                      "end": 20483,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20342,
                      "end": 20489,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 20342,
                      "end": 20489,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 20342,
                      "end": 20489,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20342,
                      "end": 20489,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20342,
                      "end": 20489,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 20495,
                      "end": 20881,
                      "name": "tag",
                      "source": 15,
                      "value": "478"
                    },
                    {
                      "begin": 20495,
                      "end": 20881,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 20599,
                      "end": 20602,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 20627,
                      "end": 20665,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "718"
                    },
                    {
                      "begin": 20659,
                      "end": 20664,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 20627,
                      "end": 20665,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "476"
                    },
                    {
                      "begin": 20627,
                      "end": 20665,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 20627,
                      "end": 20665,
                      "name": "tag",
                      "source": 15,
                      "value": "718"
                    },
                    {
                      "begin": 20627,
                      "end": 20665,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 20681,
                      "end": 20769,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "719"
                    },
                    {
                      "begin": 20762,
                      "end": 20768,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 20757,
                      "end": 20760,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 20681,
                      "end": 20769,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "477"
                    },
                    {
                      "begin": 20681,
                      "end": 20769,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 20681,
                      "end": 20769,
                      "name": "tag",
                      "source": 15,
                      "value": "719"
                    },
                    {
                      "begin": 20681,
                      "end": 20769,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 20674,
                      "end": 20769,
                      "name": "SWAP4",
                      "source": 15
                    },
                    {
                      "begin": 20674,
                      "end": 20769,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20778,
                      "end": 20843,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "720"
                    },
                    {
                      "begin": 20836,
                      "end": 20842,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 20831,
                      "end": 20834,
                      "name": "DUP6",
                      "source": 15
                    },
                    {
                      "begin": 20824,
                      "end": 20828,
                      "name": "PUSH",
                      "source": 15,
                      "value": "20"
                    },
                    {
                      "begin": 20817,
                      "end": 20822,
                      "name": "DUP7",
                      "source": 15
                    },
                    {
                      "begin": 20813,
                      "end": 20829,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 20778,
                      "end": 20843,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "418"
                    },
                    {
                      "begin": 20778,
                      "end": 20843,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 20778,
                      "end": 20843,
                      "name": "tag",
                      "source": 15,
                      "value": "720"
                    },
                    {
                      "begin": 20778,
                      "end": 20843,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 20868,
                      "end": 20874,
                      "name": "DUP1",
                      "source": 15
                    },
                    {
                      "begin": 20863,
                      "end": 20866,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 20859,
                      "end": 20875,
                      "name": "ADD",
                      "source": 15
                    },
                    {
                      "begin": 20852,
                      "end": 20875,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 20852,
                      "end": 20875,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20603,
                      "end": 20881,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20495,
                      "end": 20881,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 20495,
                      "end": 20881,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 20495,
                      "end": 20881,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20495,
                      "end": 20881,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20495,
                      "end": 20881,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 20887,
                      "end": 21158,
                      "name": "tag",
                      "source": 15,
                      "value": "395"
                    },
                    {
                      "begin": 20887,
                      "end": 21158,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 21017,
                      "end": 21020,
                      "name": "PUSH",
                      "source": 15,
                      "value": "0"
                    },
                    {
                      "begin": 21039,
                      "end": 21132,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "722"
                    },
                    {
                      "begin": 21128,
                      "end": 21131,
                      "name": "DUP3",
                      "source": 15
                    },
                    {
                      "begin": 21119,
                      "end": 21125,
                      "name": "DUP5",
                      "source": 15
                    },
                    {
                      "begin": 21039,
                      "end": 21132,
                      "name": "PUSH [tag]",
                      "source": 15,
                      "value": "478"
                    },
                    {
                      "begin": 21039,
                      "end": 21132,
                      "jumpType": "[in]",
                      "name": "JUMP",
                      "source": 15
                    },
                    {
                      "begin": 21039,
                      "end": 21132,
                      "name": "tag",
                      "source": 15,
                      "value": "722"
                    },
                    {
                      "begin": 21039,
                      "end": 21132,
                      "name": "JUMPDEST",
                      "source": 15
                    },
                    {
                      "begin": 21032,
                      "end": 21132,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 21032,
                      "end": 21132,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 21149,
                      "end": 21152,
                      "name": "DUP2",
                      "source": 15
                    },
                    {
                      "begin": 21142,
                      "end": 21152,
                      "name": "SWAP1",
                      "source": 15
                    },
                    {
                      "begin": 21142,
                      "end": 21152,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20887,
                      "end": 21158,
                      "name": "SWAP3",
                      "source": 15
                    },
                    {
                      "begin": 20887,
                      "end": 21158,
                      "name": "SWAP2",
                      "source": 15
                    },
                    {
                      "begin": 20887,
                      "end": 21158,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20887,
                      "end": 21158,
                      "name": "POP",
                      "source": 15
                    },
                    {
                      "begin": 20887,
                      "end": 21158,
                      "jumpType": "[out]",
                      "name": "JUMP",
                      "source": 15
                    }
                  ]
                }
              },
              "sourceList": [
                "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
                "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
                "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
                "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
                "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
                "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
                "@openzeppelin/contracts/token/ERC20/IERC20.sol",
                "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
                "@openzeppelin/contracts/utils/Address.sol",
                "@openzeppelin/contracts/utils/StorageSlot.sol",
                "DragonDrink.sol",
                "#utility.yul"
              ]
            },
            "methodIdentifiers": {
              "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "battleContract()": "423b1ca3",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "dailyCheckContract()": "fe5a45d0",
              "decimals()": "313ce567",
              "exploreContract()": "55ccbff7",
              "initialize(address)": "c4d66de8",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "proxiableUUID()": "52d1902d",
              "questContract()": "6a6940cc",
              "renounceOwnership()": "715018a6",
              "setBattleContract(address)": "0db6dff7",
              "setDailyCheckContract(address)": "21098461",
              "setExploreContract(address)": "e4b8c4d4",
              "setQuestContract(address)": "7fae588d",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "upgradeToAndCall(address,bytes)": "4f1ef286"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"battleContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyCheckContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exploreContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"questContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_battleContract\",\"type\":\"address\"}],\"name\":\"setBattleContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dailyCheckContract\",\"type\":\"address\"}],\"name\":\"setDailyCheckContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exploreContract\",\"type\":\"address\"}],\"name\":\"setExploreContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_questContract\",\"type\":\"address\"}],\"name\":\"setQuestContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DragonDrink.sol\":\"DragonDrink\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol\":{\"keccak256\":\"0xe74dd150d031e8ecf9755893a2aae02dec954158140424f11c28ff689a48492f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://554e0934aecff6725e10d4aeb2e70ff214384b68782b1ba9f9322a0d16105a2f\",\"dweb:/ipfs/QmVvmHc7xPftEkWvJRNAqv7mXihKLEAVXpiebG7RT5rhMW\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"DragonDrink.sol\":{\"keccak256\":\"0x4050e5c78c100ba4e05e7d3d0384abdc118dd683ad0d0b444e9a22654b68b951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ee22c4402f3c374fb6ccca7559b2632d167494cf86c3db5ed823125e84c162b\",\"dweb:/ipfs/QmbXbpExgcSHvddU7X6ibzzGzfWxPE7RAcJ8A389D8fNB6\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 2301,
                "contract": "DragonDrink.sol:DragonDrink",
                "label": "questContract",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 2303,
                "contract": "DragonDrink.sol:DragonDrink",
                "label": "dailyCheckContract",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 2305,
                "contract": "DragonDrink.sol:DragonDrink",
                "label": "battleContract",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
              },
              {
                "astId": 2307,
                "contract": "DragonDrink.sol:DragonDrink",
                "label": "exploreContract",
                "offset": 0,
                "slot": "3",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> DragonDrink.sol:58:23:\n   |\n58 |     function transfer(address recipient, uint256 amount) public override returns (bool) {\n   |                       ^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 2206,
          "file": "DragonDrink.sol",
          "start": 2189
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> DragonDrink.sol:58:42:\n   |\n58 |     function transfer(address recipient, uint256 amount) public override returns (bool) {\n   |                                          ^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 2222,
          "file": "DragonDrink.sol",
          "start": 2208
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> DragonDrink.sol:62:27:\n   |\n62 |     function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n   |                           ^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 2350,
          "file": "DragonDrink.sol",
          "start": 2336
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> DragonDrink.sol:62:43:\n   |\n62 |     function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n   |                                           ^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 2369,
          "file": "DragonDrink.sol",
          "start": 2352
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> DragonDrink.sol:62:62:\n   |\n62 |     function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n   |                                                              ^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 2385,
          "file": "DragonDrink.sol",
          "start": 2371
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2018",
        "formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> DragonDrink.sol:58:5:\n   |\n58 |     function transfer(address recipient, uint256 amount) public override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 2306,
          "file": "DragonDrink.sol",
          "start": 2171
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2018",
        "formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> DragonDrink.sol:62:5:\n   |\n62 |     function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 2469,
          "file": "DragonDrink.sol",
          "start": 2314
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              1355
            ],
            "Initializable": [
              448
            ],
            "OwnableUpgradeable": [
              194
            ]
          },
          "id": 195,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
              "file": "../utils/ContextUpgradeable.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 195,
              "sourceUnit": 1356,
              "src": "128:67:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "ContextUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1355,
                    "src": "136:18:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 195,
              "sourceUnit": 449,
              "src": "196:63:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 448,
                    "src": "204:13:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 7,
                    "name": "Initializable",
                    "nameLocations": [
                      "789:13:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 448,
                    "src": "789:13:0"
                  },
                  "id": 8,
                  "nodeType": "InheritanceSpecifier",
                  "src": "789:13:0"
                },
                {
                  "baseName": {
                    "id": 9,
                    "name": "ContextUpgradeable",
                    "nameLocations": [
                      "804:18:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1355,
                    "src": "804:18:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "804:18:0"
                }
              ],
              "canonicalName": "OwnableUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 6,
                "nodeType": "StructuredDocumentation",
                "src": "261:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 194,
              "linearizedBaseContracts": [
                194,
                1355,
                448
              ],
              "name": "OwnableUpgradeable",
              "nameLocation": "767:18:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "OwnableUpgradeable.OwnableStorage",
                  "documentation": {
                    "id": 11,
                    "nodeType": "StructuredDocumentation",
                    "src": "829:65:0",
                    "text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
                  },
                  "id": 14,
                  "members": [
                    {
                      "constant": false,
                      "id": 13,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "939:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 14,
                      "src": "931:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "931:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "OwnableStorage",
                  "nameLocation": "906:14:0",
                  "nodeType": "StructDefinition",
                  "scope": 194,
                  "src": "899:53:0",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 17,
                  "mutability": "constant",
                  "name": "OwnableStorageLocation",
                  "nameLocation": "1094:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "1069:116:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1119:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
                      "typeString": "int_const 6517...(69 digits omitted)...7328"
                    },
                    "value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 24,
                    "nodeType": "Block",
                    "src": "1270:81:0",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "1289:56:0",
                          "nodeType": "YulBlock",
                          "src": "1289:56:0",
                          "statements": [
                            {
                              "nativeSrc": "1303:32:0",
                              "nodeType": "YulAssignment",
                              "src": "1303:32:0",
                              "value": {
                                "name": "OwnableStorageLocation",
                                "nativeSrc": "1313:22:0",
                                "nodeType": "YulIdentifier",
                                "src": "1313:22:0"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "1303:6:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1303:6:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 21,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "1303:6:0",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 17,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1313:22:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 23,
                        "nodeType": "InlineAssembly",
                        "src": "1280:65:0"
                      }
                    ]
                  },
                  "id": 25,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getOwnableStorage",
                  "nameLocation": "1201:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1219:2:0"
                  },
                  "returnParameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "1267:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "1244:24:0",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                          "typeString": "struct OwnableUpgradeable.OwnableStorage"
                        },
                        "typeName": {
                          "id": 20,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 19,
                            "name": "OwnableStorage",
                            "nameLocations": [
                              "1244:14:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 14,
                            "src": "1244:14:0"
                          },
                          "referencedDeclaration": 14,
                          "src": "1244:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1243:26:0"
                  },
                  "scope": 194,
                  "src": "1192:159:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 26,
                    "nodeType": "StructuredDocumentation",
                    "src": "1357:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 30,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "1453:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1488:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1480:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1480:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1479:17:0"
                  },
                  "src": "1447:50:0"
                },
                {
                  "documentation": {
                    "id": 31,
                    "nodeType": "StructuredDocumentation",
                    "src": "1503:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 35,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "1596:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1624:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "1616:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1616:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1615:15:0"
                  },
                  "src": "1590:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 41,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1643:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 37,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1680:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 41,
                        "src": "1664:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 39,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1711:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 41,
                        "src": "1695:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1695:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:57:0"
                  },
                  "src": "1637:84:0"
                },
                {
                  "body": {
                    "id": 53,
                    "nodeType": "Block",
                    "src": "1919:55:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 49,
                            "name": "__Ownable_init_unchained",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "1929:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1929:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:38:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 42,
                    "nodeType": "StructuredDocumentation",
                    "src": "1727:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 54,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 47,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 46,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "1902:16:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "1902:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1902:16:0"
                    }
                  ],
                  "name": "__Ownable_init",
                  "nameLocation": "1856:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1879:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1871:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1871:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1870:22:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1919:0:0"
                  },
                  "scope": 194,
                  "src": "1847:127:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 80,
                    "nodeType": "Block",
                    "src": "2062:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2076:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 64,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2100:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2092:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 62,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2092:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2092:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2076:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 75,
                        "nodeType": "IfStatement",
                        "src": "2072:95:0",
                        "trueBody": {
                          "id": 74,
                          "nodeType": "Block",
                          "src": "2104:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 70,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2153:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 69,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2145:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 68,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2145:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 71,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2145:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 67,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "2125:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 72,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2125:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 73,
                              "nodeType": "RevertStatement",
                              "src": "2118:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 77,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "2195:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 76,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "2176:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2176:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79,
                        "nodeType": "ExpressionStatement",
                        "src": "2176:32:0"
                      }
                    ]
                  },
                  "id": 81,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 59,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 58,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2045:16:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "2045:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2045:16:0"
                    }
                  ],
                  "name": "__Ownable_init_unchained",
                  "nameLocation": "1989:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "2022:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2014:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2014:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2013:22:0"
                  },
                  "returnParameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2062:0:0"
                  },
                  "scope": 194,
                  "src": "1980:235:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "2324:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 84,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "2334:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2334:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86,
                        "nodeType": "ExpressionStatement",
                        "src": "2334:13:0"
                      },
                      {
                        "id": 87,
                        "nodeType": "PlaceholderStatement",
                        "src": "2357:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 82,
                    "nodeType": "StructuredDocumentation",
                    "src": "2221:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 89,
                  "name": "onlyOwner",
                  "nameLocation": "2312:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 83,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2321:2:0"
                  },
                  "src": "2303:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 104,
                    "nodeType": "Block",
                    "src": "2496:89:0",
                    "statements": [
                      {
                        "assignments": [
                          97
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 97,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2529:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 104,
                            "src": "2506:24:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage"
                            },
                            "typeName": {
                              "id": 96,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 95,
                                "name": "OwnableStorage",
                                "nameLocations": [
                                  "2506:14:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14,
                                "src": "2506:14:0"
                              },
                              "referencedDeclaration": 14,
                              "src": "2506:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 98,
                            "name": "_getOwnableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "2533:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
                              "typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2533:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2506:47:0"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 101,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "2570:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2572:6:0",
                          "memberName": "_owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "2570:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 94,
                        "id": 103,
                        "nodeType": "Return",
                        "src": "2563:15:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 90,
                    "nodeType": "StructuredDocumentation",
                    "src": "2371:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 105,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "2450:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 91,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2455:2:0"
                  },
                  "returnParameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 105,
                        "src": "2487:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2487:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2486:9:0"
                  },
                  "scope": 194,
                  "src": "2441:144:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 121,
                    "nodeType": "Block",
                    "src": "2703:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 109,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "2717:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2717:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 111,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1337,
                              "src": "2728:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2728:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2717:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2713:101:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2742:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 115,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1337,
                                      "src": "2790:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2790:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 114,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "2763:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2763:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2756:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 106,
                    "nodeType": "StructuredDocumentation",
                    "src": "2591:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 122,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "2667:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 107,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2678:2:0"
                  },
                  "returnParameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2703:0:0"
                  },
                  "scope": 194,
                  "src": "2658:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 135,
                    "nodeType": "Block",
                    "src": "3209:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3246:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3238:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 129,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3238:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3238:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 128,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "3219:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3219:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "3219:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 123,
                    "nodeType": "StructuredDocumentation",
                    "src": "2826:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 136,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 126,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 125,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3199:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "3199:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3199:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "3164:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3181:2:0"
                  },
                  "returnParameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3209:0:0"
                  },
                  "scope": 194,
                  "src": "3155:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 163,
                    "nodeType": "Block",
                    "src": "3475:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 144,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "3489:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3509:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3501:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 145,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3501:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3501:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3489:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 158,
                        "nodeType": "IfStatement",
                        "src": "3485:91:0",
                        "trueBody": {
                          "id": 157,
                          "nodeType": "Block",
                          "src": "3513:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3562:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 152,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3554:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 151,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3554:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3554:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 150,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "3534:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3534:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 156,
                              "nodeType": "RevertStatement",
                              "src": "3527:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 160,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "3604:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 159,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "3585:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3585:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "3585:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 137,
                    "nodeType": "StructuredDocumentation",
                    "src": "3262:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 164,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 142,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 141,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3465:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "3465:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3465:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "3414:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "3440:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "3432:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3432:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3431:18:0"
                  },
                  "returnParameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3475:0:0"
                  },
                  "scope": 194,
                  "src": "3405:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 192,
                    "nodeType": "Block",
                    "src": "3837:185:0",
                    "statements": [
                      {
                        "assignments": [
                          172
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 172,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3870:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 192,
                            "src": "3847:24:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage"
                            },
                            "typeName": {
                              "id": 171,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 170,
                                "name": "OwnableStorage",
                                "nameLocations": [
                                  "3847:14:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14,
                                "src": "3847:14:0"
                              },
                              "referencedDeclaration": 14,
                              "src": "3847:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 175,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 173,
                            "name": "_getOwnableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "3874:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
                              "typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3874:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3847:47:0"
                      },
                      {
                        "assignments": [
                          177
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 177,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "3912:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 192,
                            "src": "3904:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 176,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3904:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 180,
                        "initialValue": {
                          "expression": {
                            "id": 178,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "3923:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3925:6:0",
                          "memberName": "_owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "3923:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3904:27:0"
                      },
                      {
                        "expression": {
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 181,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "3941:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3943:6:0",
                            "memberName": "_owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "3941:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 184,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "3952:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3941:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "3941:19:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 188,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "3996:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 189,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "4006:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 187,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "3975:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3975:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 191,
                        "nodeType": "EmitStatement",
                        "src": "3970:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "3626:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 193,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "3783:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "3810:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "3802:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3802:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3801:18:0"
                  },
                  "returnParameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3837:0:0"
                  },
                  "scope": 194,
                  "src": "3774:248:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 195,
              "src": "749:3275:0",
              "usedErrors": [
                30,
                35,
                211,
                214
              ],
              "usedEvents": [
                41,
                219
              ]
            }
          ],
          "src": "102:3923:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
          "exportedSymbols": {
            "Initializable": [
              448
            ]
          },
          "id": 449,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 196,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "113:24:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Initializable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 197,
                "nodeType": "StructuredDocumentation",
                "src": "139:2209:1",
                "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
              },
              "fullyImplemented": true,
              "id": 448,
              "linearizedBaseContracts": [
                448
              ],
              "name": "Initializable",
              "nameLocation": "2367:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Initializable.InitializableStorage",
                  "documentation": {
                    "id": 198,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:293:1",
                    "text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
                  },
                  "id": 205,
                  "members": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "_initialized",
                      "nameLocation": "2820:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2813:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2813:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "_initializing",
                      "nameLocation": "2955:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2950:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2950:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "InitializableStorage",
                  "nameLocation": "2692:20:1",
                  "nodeType": "StructDefinition",
                  "scope": 448,
                  "src": "2685:290:1",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 208,
                  "mutability": "constant",
                  "name": "INITIALIZABLE_STORAGE",
                  "nameLocation": "3123:21:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 448,
                  "src": "3098:115:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3147:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
                      "typeString": "int_const 1089...(70 digits omitted)...9600"
                    },
                    "value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 209,
                    "nodeType": "StructuredDocumentation",
                    "src": "3220:60:1",
                    "text": " @dev The contract is already initialized."
                  },
                  "errorSelector": "f92ee8a9",
                  "id": 211,
                  "name": "InvalidInitialization",
                  "nameLocation": "3291:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 210,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3312:2:1"
                  },
                  "src": "3285:30:1"
                },
                {
                  "documentation": {
                    "id": 212,
                    "nodeType": "StructuredDocumentation",
                    "src": "3321:57:1",
                    "text": " @dev The contract is not initializing."
                  },
                  "errorSelector": "d7e6bcf8",
                  "id": 214,
                  "name": "NotInitializing",
                  "nameLocation": "3389:15:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3404:2:1"
                  },
                  "src": "3383:24:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 215,
                    "nodeType": "StructuredDocumentation",
                    "src": "3413:90:1",
                    "text": " @dev Triggered when the contract has been initialized or reinitialized."
                  },
                  "eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
                  "id": 219,
                  "name": "Initialized",
                  "nameLocation": "3514:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "3533:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "3526:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "3526:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3525:16:1"
                  },
                  "src": "3508:34:1"
                },
                {
                  "body": {
                    "id": 301,
                    "nodeType": "Block",
                    "src": "4092:1081:1",
                    "statements": [
                      {
                        "assignments": [
                          224
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 224,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4187:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4158:30:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 223,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 222,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "4158:20:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 205,
                                "src": "4158:20:1"
                              },
                              "referencedDeclaration": 205,
                              "src": "4158:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 227,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 225,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "4191:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4191:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4158:59:1"
                      },
                      {
                        "assignments": [
                          229
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 229,
                            "mutability": "mutable",
                            "name": "isTopLevelCall",
                            "nameLocation": "4284:14:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4279:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 228,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4279:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 233,
                        "initialValue": {
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4301:16:1",
                          "subExpression": {
                            "expression": {
                              "id": 230,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "4302:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4304:13:1",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 204,
                            "src": "4302:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4279:38:1"
                      },
                      {
                        "assignments": [
                          235
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 235,
                            "mutability": "mutable",
                            "name": "initialized",
                            "nameLocation": "4334:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4327:18:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 234,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "4327:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 238,
                        "initialValue": {
                          "expression": {
                            "id": 236,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4348:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4350:12:1",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 201,
                          "src": "4348:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4327:35:1"
                      },
                      {
                        "assignments": [
                          240
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 240,
                            "mutability": "mutable",
                            "name": "initialSetup",
                            "nameLocation": "4711:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4706:17:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 239,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4706:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 246,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 241,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "4726:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4741:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4726:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 244,
                            "name": "isTopLevelCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "4746:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4726:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4706:54:1"
                      },
                      {
                        "assignments": [
                          248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 248,
                            "mutability": "mutable",
                            "name": "construction",
                            "nameLocation": "4775:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4770:17:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 247,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4770:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 261,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 249,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "4790:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4805:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4790:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 254,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967268,
                                      "src": "4818:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Initializable_$448",
                                        "typeString": "contract Initializable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Initializable_$448",
                                        "typeString": "contract Initializable"
                                      }
                                    ],
                                    "id": 253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4810:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 252,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4810:7:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 255,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4810:13:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4824:4:1",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "4810:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4829:6:1",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4810:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4839:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4810:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4790:50:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4770:70:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4855:13:1",
                            "subExpression": {
                              "id": 262,
                              "name": "initialSetup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "4856:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4872:13:1",
                            "subExpression": {
                              "id": 264,
                              "name": "construction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "4873:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4855:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 271,
                        "nodeType": "IfStatement",
                        "src": "4851:91:1",
                        "trueBody": {
                          "id": 270,
                          "nodeType": "Block",
                          "src": "4887:55:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 267,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 211,
                                  "src": "4908:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4908:23:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 269,
                              "nodeType": "RevertStatement",
                              "src": "4901:30:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 272,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "4951:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4953:12:1",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 201,
                            "src": "4951:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4968:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4951:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 277,
                        "nodeType": "ExpressionStatement",
                        "src": "4951:18:1"
                      },
                      {
                        "condition": {
                          "id": 278,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "4983:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 286,
                        "nodeType": "IfStatement",
                        "src": "4979:67:1",
                        "trueBody": {
                          "id": 285,
                          "nodeType": "Block",
                          "src": "4999:47:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 279,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 224,
                                    "src": "5013:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 281,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5015:13:1",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 204,
                                  "src": "5013:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5031:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5013:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 284,
                              "nodeType": "ExpressionStatement",
                              "src": "5013:22:1"
                            }
                          ]
                        }
                      },
                      {
                        "id": 287,
                        "nodeType": "PlaceholderStatement",
                        "src": "5055:1:1"
                      },
                      {
                        "condition": {
                          "id": 288,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "5070:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 300,
                        "nodeType": "IfStatement",
                        "src": "5066:101:1",
                        "trueBody": {
                          "id": 299,
                          "nodeType": "Block",
                          "src": "5086:81:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 289,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 224,
                                    "src": "5100:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 291,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5102:13:1",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 204,
                                  "src": "5100:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5118:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "5100:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 294,
                              "nodeType": "ExpressionStatement",
                              "src": "5100:23:1"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5154:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 295,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "5142:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5142:14:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 298,
                              "nodeType": "EmitStatement",
                              "src": "5137:19:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "3548:516:1",
                    "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
                  },
                  "id": 302,
                  "name": "initializer",
                  "nameLocation": "4078:11:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 221,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4089:2:1"
                  },
                  "src": "4069:1104:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 348,
                    "nodeType": "Block",
                    "src": "6291:392:1",
                    "statements": [
                      {
                        "assignments": [
                          309
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 309,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "6386:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 348,
                            "src": "6357:30:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 308,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 307,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "6357:20:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 205,
                                "src": "6357:20:1"
                              },
                              "referencedDeclaration": 205,
                              "src": "6357:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 312,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 310,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "6390:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6390:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6357:59:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 313,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "6431:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6433:13:1",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 204,
                            "src": "6431:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 315,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "6450:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage storage pointer"
                                }
                              },
                              "id": 316,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6452:12:1",
                              "memberName": "_initialized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 201,
                              "src": "6450:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 317,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "6468:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "6450:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6431:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 324,
                        "nodeType": "IfStatement",
                        "src": "6427:105:1",
                        "trueBody": {
                          "id": 323,
                          "nodeType": "Block",
                          "src": "6477:55:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 320,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 211,
                                  "src": "6498:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6498:23:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 322,
                              "nodeType": "RevertStatement",
                              "src": "6491:30:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 325,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "6541:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 327,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6543:12:1",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 201,
                            "src": "6541:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 328,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "6558:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "6541:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "6541:24:1"
                      },
                      {
                        "expression": {
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 331,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "6575:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6577:13:1",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 204,
                            "src": "6575:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6593:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6575:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 336,
                        "nodeType": "ExpressionStatement",
                        "src": "6575:22:1"
                      },
                      {
                        "id": 337,
                        "nodeType": "PlaceholderStatement",
                        "src": "6607:1:1"
                      },
                      {
                        "expression": {
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 338,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "6618:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6620:13:1",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 204,
                            "src": "6618:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6636:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6618:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 343,
                        "nodeType": "ExpressionStatement",
                        "src": "6618:23:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 345,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "6668:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 344,
                            "name": "Initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "6656:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                              "typeString": "function (uint64)"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6656:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 347,
                        "nodeType": "EmitStatement",
                        "src": "6651:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 303,
                    "nodeType": "StructuredDocumentation",
                    "src": "5179:1068:1",
                    "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
                  },
                  "id": 349,
                  "name": "reinitializer",
                  "nameLocation": "6261:13:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "6282:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "6275:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6275:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6274:16:1"
                  },
                  "src": "6252:431:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 356,
                    "nodeType": "Block",
                    "src": "6921:48:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 352,
                            "name": "_checkInitializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "6931:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6931:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 354,
                        "nodeType": "ExpressionStatement",
                        "src": "6931:20:1"
                      },
                      {
                        "id": 355,
                        "nodeType": "PlaceholderStatement",
                        "src": "6961:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 350,
                    "nodeType": "StructuredDocumentation",
                    "src": "6689:199:1",
                    "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                  },
                  "id": 357,
                  "name": "onlyInitializing",
                  "nameLocation": "6902:16:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6918:2:1"
                  },
                  "src": "6893:76:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 369,
                    "nodeType": "Block",
                    "src": "7136:89:1",
                    "statements": [
                      {
                        "condition": {
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7150:18:1",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 361,
                              "name": "_isInitializing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "7151:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7151:17:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 368,
                        "nodeType": "IfStatement",
                        "src": "7146:73:1",
                        "trueBody": {
                          "id": 367,
                          "nodeType": "Block",
                          "src": "7170:49:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 364,
                                  "name": "NotInitializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 214,
                                  "src": "7191:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7191:17:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 366,
                              "nodeType": "RevertStatement",
                              "src": "7184:24:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 358,
                    "nodeType": "StructuredDocumentation",
                    "src": "6975:104:1",
                    "text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
                  },
                  "id": 370,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkInitializing",
                  "nameLocation": "7093:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7111:2:1"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7136:0:1"
                  },
                  "scope": 448,
                  "src": "7084:141:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 415,
                    "nodeType": "Block",
                    "src": "7760:373:1",
                    "statements": [
                      {
                        "assignments": [
                          376
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 376,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "7855:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 415,
                            "src": "7826:30:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 375,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 374,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "7826:20:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 205,
                                "src": "7826:20:1"
                              },
                              "referencedDeclaration": 205,
                              "src": "7826:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 379,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 377,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "7859:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7859:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7826:59:1"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 380,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "7900:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7902:13:1",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 204,
                          "src": "7900:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 386,
                        "nodeType": "IfStatement",
                        "src": "7896:76:1",
                        "trueBody": {
                          "id": 385,
                          "nodeType": "Block",
                          "src": "7917:55:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 382,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 211,
                                  "src": "7938:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7938:23:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 384,
                              "nodeType": "RevertStatement",
                              "src": "7931:30:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 387,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "7985:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7987:12:1",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 201,
                            "src": "7985:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 391,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8008:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  },
                                  "typeName": {
                                    "id": 390,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8008:6:1",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  }
                                ],
                                "id": 389,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "8003:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8003:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint64",
                                "typeString": "type(uint64)"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8016:3:1",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8003:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "7985:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 414,
                        "nodeType": "IfStatement",
                        "src": "7981:146:1",
                        "trueBody": {
                          "id": 413,
                          "nodeType": "Block",
                          "src": "8021:106:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 395,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 376,
                                    "src": "8035:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 397,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8037:12:1",
                                  "memberName": "_initialized",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 201,
                                  "src": "8035:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 400,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8057:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        },
                                        "typeName": {
                                          "id": 399,
                                          "name": "uint64",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8057:6:1",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        }
                                      ],
                                      "id": 398,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967269,
                                      "src": "8052:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 401,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8052:12:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint64",
                                      "typeString": "type(uint64)"
                                    }
                                  },
                                  "id": 402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8065:3:1",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "8052:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "8035:33:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 404,
                              "nodeType": "ExpressionStatement",
                              "src": "8035:33:1"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 408,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "8104:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          },
                                          "typeName": {
                                            "id": 407,
                                            "name": "uint64",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "8104:6:1",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          }
                                        ],
                                        "id": 406,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967269,
                                        "src": "8099:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 409,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8099:12:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_uint64",
                                        "typeString": "type(uint64)"
                                      }
                                    },
                                    "id": 410,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "8112:3:1",
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "8099:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 405,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "8087:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8087:29:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 412,
                              "nodeType": "EmitStatement",
                              "src": "8082:34:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 371,
                    "nodeType": "StructuredDocumentation",
                    "src": "7231:475:1",
                    "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
                  },
                  "id": 416,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_disableInitializers",
                  "nameLocation": "7720:20:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7740:2:1"
                  },
                  "returnParameters": {
                    "id": 373,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7760:0:1"
                  },
                  "scope": 448,
                  "src": "7711:422:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 426,
                    "nodeType": "Block",
                    "src": "8308:63:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 422,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 447,
                              "src": "8325:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8325:26:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8352:12:1",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 201,
                          "src": "8325:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 421,
                        "id": 425,
                        "nodeType": "Return",
                        "src": "8318:46:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 417,
                    "nodeType": "StructuredDocumentation",
                    "src": "8139:99:1",
                    "text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
                  },
                  "id": 427,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializedVersion",
                  "nameLocation": "8252:22:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8274:2:1"
                  },
                  "returnParameters": {
                    "id": 421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 420,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "8300:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 419,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "8300:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8299:8:1"
                  },
                  "scope": 448,
                  "src": "8243:128:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 437,
                    "nodeType": "Block",
                    "src": "8543:64:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 433,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 447,
                              "src": "8560:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8560:26:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8587:13:1",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 204,
                          "src": "8560:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 432,
                        "id": 436,
                        "nodeType": "Return",
                        "src": "8553:47:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 428,
                    "nodeType": "StructuredDocumentation",
                    "src": "8377:105:1",
                    "text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
                  },
                  "id": 438,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isInitializing",
                  "nameLocation": "8496:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 429,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8511:2:1"
                  },
                  "returnParameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "8537:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8537:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8536:6:1"
                  },
                  "scope": 448,
                  "src": "8487:120:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 446,
                    "nodeType": "Block",
                    "src": "8827:80:1",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "8846:55:1",
                          "nodeType": "YulBlock",
                          "src": "8846:55:1",
                          "statements": [
                            {
                              "nativeSrc": "8860:31:1",
                              "nodeType": "YulAssignment",
                              "src": "8860:31:1",
                              "value": {
                                "name": "INITIALIZABLE_STORAGE",
                                "nativeSrc": "8870:21:1",
                                "nodeType": "YulIdentifier",
                                "src": "8870:21:1"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "8860:6:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8860:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 443,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "8860:6:1",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 208,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "8870:21:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 445,
                        "nodeType": "InlineAssembly",
                        "src": "8837:64:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 439,
                    "nodeType": "StructuredDocumentation",
                    "src": "8613:67:1",
                    "text": " @dev Returns a pointer to the storage namespace."
                  },
                  "id": 447,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializableStorage",
                  "nameLocation": "8746:24:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8770:2:1"
                  },
                  "returnParameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "8824:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 447,
                        "src": "8795:30:1",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                          "typeString": "struct Initializable.InitializableStorage"
                        },
                        "typeName": {
                          "id": 442,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 441,
                            "name": "InitializableStorage",
                            "nameLocations": [
                              "8795:20:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 205,
                            "src": "8795:20:1"
                          },
                          "referencedDeclaration": 205,
                          "src": "8795:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8794:32:1"
                  },
                  "scope": 448,
                  "src": "8737:170:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 449,
              "src": "2349:6560:1",
              "usedErrors": [
                211,
                214
              ],
              "usedEvents": [
                219
              ]
            }
          ],
          "src": "113:8797:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
          "exportedSymbols": {
            "ERC1967Utils": [
              1805
            ],
            "IERC1822Proxiable": [
              1365
            ],
            "Initializable": [
              448
            ],
            "UUPSUpgradeable": [
              630
            ]
          },
          "id": 631,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 450,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
              "file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
              "id": 452,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 631,
              "sourceUnit": 1366,
              "src": "141:88:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 451,
                    "name": "IERC1822Proxiable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1365,
                    "src": "149:17:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
              "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
              "id": 454,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 631,
              "sourceUnit": 1806,
              "src": "230:84:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 453,
                    "name": "ERC1967Utils",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1805,
                    "src": "238:12:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "./Initializable.sol",
              "id": 456,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 631,
              "sourceUnit": 449,
              "src": "315:50:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 455,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 448,
                    "src": "323:13:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 458,
                    "name": "Initializable",
                    "nameLocations": [
                      "1023:13:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 448,
                    "src": "1023:13:2"
                  },
                  "id": 459,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1023:13:2"
                },
                {
                  "baseName": {
                    "id": 460,
                    "name": "IERC1822Proxiable",
                    "nameLocations": [
                      "1038:17:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1365,
                    "src": "1038:17:2"
                  },
                  "id": 461,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1038:17:2"
                }
              ],
              "canonicalName": "UUPSUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 457,
                "nodeType": "StructuredDocumentation",
                "src": "367:618:2",
                "text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
              },
              "fullyImplemented": false,
              "id": 630,
              "linearizedBaseContracts": [
                630,
                1365,
                448
              ],
              "name": "UUPSUpgradeable",
              "nameLocation": "1004:15:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 462,
                    "nodeType": "StructuredDocumentation",
                    "src": "1062:61:2",
                    "text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
                  },
                  "id": 468,
                  "mutability": "immutable",
                  "name": "__self",
                  "nameLocation": "1154:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "1128:48:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "id": 466,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "1171:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                          "typeString": "contract UUPSUpgradeable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                          "typeString": "contract UUPSUpgradeable"
                        }
                      ],
                      "id": 465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1163:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 464,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1163:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 469,
                    "nodeType": "StructuredDocumentation",
                    "src": "1183:631:2",
                    "text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
                  },
                  "functionSelector": "ad3cb1cc",
                  "id": 472,
                  "mutability": "constant",
                  "name": "UPGRADE_INTERFACE_VERSION",
                  "nameLocation": "1842:25:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "1819:58:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "352e302e30",
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1870:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
                      "typeString": "literal_string \"5.0.0\""
                    },
                    "value": "5.0.0"
                  },
                  "visibility": "public"
                },
                {
                  "documentation": {
                    "id": 473,
                    "nodeType": "StructuredDocumentation",
                    "src": "1884:65:2",
                    "text": " @dev The call is from an unauthorized context."
                  },
                  "errorSelector": "e07c8dba",
                  "id": 475,
                  "name": "UUPSUnauthorizedCallContext",
                  "nameLocation": "1960:27:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 474,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1987:2:2"
                  },
                  "src": "1954:36:2"
                },
                {
                  "documentation": {
                    "id": 476,
                    "nodeType": "StructuredDocumentation",
                    "src": "1996:68:2",
                    "text": " @dev The storage `slot` is unsupported as a UUID."
                  },
                  "errorSelector": "aa1d49a4",
                  "id": 480,
                  "name": "UUPSUnsupportedProxiableUUID",
                  "nameLocation": "2075:28:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2112:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "2104:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2104:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2103:14:2"
                  },
                  "src": "2069:49:2"
                },
                {
                  "body": {
                    "id": 487,
                    "nodeType": "Block",
                    "src": "2643:41:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 483,
                            "name": "_checkProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 562,
                            "src": "2653:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2653:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 485,
                        "nodeType": "ExpressionStatement",
                        "src": "2653:13:2"
                      },
                      {
                        "id": 486,
                        "nodeType": "PlaceholderStatement",
                        "src": "2676:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 481,
                    "nodeType": "StructuredDocumentation",
                    "src": "2124:493:2",
                    "text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
                  },
                  "id": 488,
                  "name": "onlyProxy",
                  "nameLocation": "2631:9:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2640:2:2"
                  },
                  "src": "2622:62:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 495,
                    "nodeType": "Block",
                    "src": "2914:48:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 491,
                            "name": "_checkNotDelegated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 578,
                            "src": "2924:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2924:20:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 493,
                        "nodeType": "ExpressionStatement",
                        "src": "2924:20:2"
                      },
                      {
                        "id": 494,
                        "nodeType": "PlaceholderStatement",
                        "src": "2954:1:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 489,
                    "nodeType": "StructuredDocumentation",
                    "src": "2690:195:2",
                    "text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
                  },
                  "id": 496,
                  "name": "notDelegated",
                  "nameLocation": "2899:12:2",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2911:2:2"
                  },
                  "src": "2890:72:2",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 501,
                    "nodeType": "Block",
                    "src": "3028:7:2",
                    "statements": []
                  },
                  "id": 502,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 499,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 498,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "3011:16:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "3011:16:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3011:16:2"
                    }
                  ],
                  "name": "__UUPSUpgradeable_init",
                  "nameLocation": "2977:22:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2999:2:2"
                  },
                  "returnParameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3028:0:2"
                  },
                  "scope": 630,
                  "src": "2968:67:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 507,
                    "nodeType": "Block",
                    "src": "3111:7:2",
                    "statements": []
                  },
                  "id": 508,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 505,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 504,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "3094:16:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "3094:16:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3094:16:2"
                    }
                  ],
                  "name": "__UUPSUpgradeable_init_unchained",
                  "nameLocation": "3050:32:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 503,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3082:2:2"
                  },
                  "returnParameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3111:0:2"
                  },
                  "scope": 630,
                  "src": "3041:77:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1364
                  ],
                  "body": {
                    "id": 519,
                    "nodeType": "Block",
                    "src": "3783:56:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 516,
                            "name": "ERC1967Utils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1805,
                            "src": "3800:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1805_$",
                              "typeString": "type(library ERC1967Utils)"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3813:19:2",
                          "memberName": "IMPLEMENTATION_SLOT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1532,
                          "src": "3800:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 515,
                        "id": 518,
                        "nodeType": "Return",
                        "src": "3793:39:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 509,
                    "nodeType": "StructuredDocumentation",
                    "src": "3123:577:2",
                    "text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
                  },
                  "functionSelector": "52d1902d",
                  "id": 520,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 512,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 511,
                        "name": "notDelegated",
                        "nameLocations": [
                          "3752:12:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 496,
                        "src": "3752:12:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3752:12:2"
                    }
                  ],
                  "name": "proxiableUUID",
                  "nameLocation": "3714:13:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 510,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3727:2:2"
                  },
                  "returnParameters": {
                    "id": 515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 520,
                        "src": "3774:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3773:9:2"
                  },
                  "scope": 630,
                  "src": "3705:134:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 539,
                    "nodeType": "Block",
                    "src": "4263:109:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 531,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 523,
                              "src": "4291:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 530,
                            "name": "_authorizeUpgrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "4273:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4273:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 533,
                        "nodeType": "ExpressionStatement",
                        "src": "4273:36:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 535,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 523,
                              "src": "4341:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 536,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 525,
                              "src": "4360:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 534,
                            "name": "_upgradeToAndCallUUPS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 629,
                            "src": "4319:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes memory)"
                            }
                          },
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4319:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 538,
                        "nodeType": "ExpressionStatement",
                        "src": "4319:46:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 521,
                    "nodeType": "StructuredDocumentation",
                    "src": "3845:308:2",
                    "text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
                  },
                  "functionSelector": "4f1ef286",
                  "id": 540,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 528,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 527,
                        "name": "onlyProxy",
                        "nameLocations": [
                          "4253:9:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 488,
                        "src": "4253:9:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4253:9:2"
                    }
                  ],
                  "name": "upgradeToAndCall",
                  "nameLocation": "4167:16:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 526,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "4192:17:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "4184:25:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4184:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 525,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4224:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "4211:17:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 524,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4211:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4183:46:2"
                  },
                  "returnParameters": {
                    "id": 529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4263:0:2"
                  },
                  "scope": 630,
                  "src": "4158:214:2",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 561,
                    "nodeType": "Block",
                    "src": "4644:267:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 546,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "4679:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                                    "typeString": "contract UUPSUpgradeable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                                    "typeString": "contract UUPSUpgradeable"
                                  }
                                ],
                                "id": 545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4671:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 544,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4671:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4671:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 548,
                              "name": "__self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 468,
                              "src": "4688:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4671:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 550,
                                  "name": "ERC1967Utils",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1805,
                                  "src": "4749:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1805_$",
                                    "typeString": "type(library ERC1967Utils)"
                                  }
                                },
                                "id": 551,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4762:17:2",
                                "memberName": "getImplementation",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1563,
                                "src": "4749:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4749:32:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 553,
                              "name": "__self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 468,
                              "src": "4785:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4749:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4671:120:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 560,
                        "nodeType": "IfStatement",
                        "src": "4654:251:2",
                        "trueBody": {
                          "id": 559,
                          "nodeType": "Block",
                          "src": "4844:61:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 556,
                                  "name": "UUPSUnauthorizedCallContext",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 475,
                                  "src": "4865:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4865:29:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 558,
                              "nodeType": "RevertStatement",
                              "src": "4858:36:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 541,
                    "nodeType": "StructuredDocumentation",
                    "src": "4378:216:2",
                    "text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
                  },
                  "id": 562,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkProxy",
                  "nameLocation": "4608:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 542,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4619:2:2"
                  },
                  "returnParameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4644:0:2"
                  },
                  "scope": 630,
                  "src": "4599:312:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 577,
                    "nodeType": "Block",
                    "src": "5080:161:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 568,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "5102:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                                  "typeString": "contract UUPSUpgradeable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
                                  "typeString": "contract UUPSUpgradeable"
                                }
                              ],
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5094:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 566,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5094:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5094:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 570,
                            "name": "__self",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 468,
                            "src": "5111:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5094:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 576,
                        "nodeType": "IfStatement",
                        "src": "5090:145:2",
                        "trueBody": {
                          "id": 575,
                          "nodeType": "Block",
                          "src": "5119:116:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 572,
                                  "name": "UUPSUnauthorizedCallContext",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 475,
                                  "src": "5195:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5195:29:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 574,
                              "nodeType": "RevertStatement",
                              "src": "5188:36:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 563,
                    "nodeType": "StructuredDocumentation",
                    "src": "4917:106:2",
                    "text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
                  },
                  "id": 578,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkNotDelegated",
                  "nameLocation": "5037:18:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5055:2:2"
                  },
                  "returnParameters": {
                    "id": 565,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5080:0:2"
                  },
                  "scope": 630,
                  "src": "5028:213:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "documentation": {
                    "id": 579,
                    "nodeType": "StructuredDocumentation",
                    "src": "5247:372:2",
                    "text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
                  },
                  "id": 584,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_authorizeUpgrade",
                  "nameLocation": "5633:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 581,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "5659:17:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 584,
                        "src": "5651:25:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 580,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:27:2"
                  },
                  "returnParameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5694:0:2"
                  },
                  "scope": 630,
                  "src": "5624:71:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 628,
                    "nodeType": "Block",
                    "src": "6137:453:2",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 617,
                              "nodeType": "Block",
                              "src": "6227:212:2",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    "id": 603,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 600,
                                      "name": "slot",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 598,
                                      "src": "6245:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 601,
                                        "name": "ERC1967Utils",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1805,
                                        "src": "6253:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1805_$",
                                          "typeString": "type(library ERC1967Utils)"
                                        }
                                      },
                                      "id": 602,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "6266:19:2",
                                      "memberName": "IMPLEMENTATION_SLOT",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1532,
                                      "src": "6253:32:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "src": "6245:40:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 609,
                                  "nodeType": "IfStatement",
                                  "src": "6241:120:2",
                                  "trueBody": {
                                    "id": 608,
                                    "nodeType": "Block",
                                    "src": "6287:74:2",
                                    "statements": [
                                      {
                                        "errorCall": {
                                          "arguments": [
                                            {
                                              "id": 605,
                                              "name": "slot",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 598,
                                              "src": "6341:4:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 604,
                                            "name": "UUPSUnsupportedProxiableUUID",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 480,
                                            "src": "6312:28:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
                                              "typeString": "function (bytes32) pure returns (error)"
                                            }
                                          },
                                          "id": 606,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "6312:34:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_error",
                                            "typeString": "error"
                                          }
                                        },
                                        "id": 607,
                                        "nodeType": "RevertStatement",
                                        "src": "6305:41:2"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 613,
                                        "name": "newImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 587,
                                        "src": "6404:17:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 614,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 589,
                                        "src": "6423:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 610,
                                        "name": "ERC1967Utils",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1805,
                                        "src": "6374:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1805_$",
                                          "typeString": "type(library ERC1967Utils)"
                                        }
                                      },
                                      "id": 612,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6387:16:2",
                                      "memberName": "upgradeToAndCall",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1624,
                                      "src": "6374:29:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                        "typeString": "function (address,bytes memory)"
                                      }
                                    },
                                    "id": 615,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6374:54:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 616,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6374:54:2"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 618,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 599,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 598,
                                  "mutability": "mutable",
                                  "name": "slot",
                                  "nameLocation": "6221:4:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 618,
                                  "src": "6213:12:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 597,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6213:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "6212:14:2"
                            },
                            "src": "6204:235:2"
                          },
                          {
                            "block": {
                              "id": 625,
                              "nodeType": "Block",
                              "src": "6446:138:2",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 622,
                                        "name": "newImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 587,
                                        "src": "6555:17:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 619,
                                        "name": "ERC1967Utils",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1805,
                                        "src": "6513:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1805_$",
                                          "typeString": "type(library ERC1967Utils)"
                                        }
                                      },
                                      "id": 621,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6526:28:2",
                                      "memberName": "ERC1967InvalidImplementation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1537,
                                      "src": "6513:41:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                        "typeString": "function (address) pure returns (error)"
                                      }
                                    },
                                    "id": 623,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6513:60:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 624,
                                  "nodeType": "RevertStatement",
                                  "src": "6506:67:2"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 626,
                            "nodeType": "TryCatchClause",
                            "src": "6440:144:2"
                          }
                        ],
                        "externalCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 593,
                                  "name": "newImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 587,
                                  "src": "6169:17:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 592,
                                "name": "IERC1822Proxiable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1365,
                                "src": "6151:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1365_$",
                                  "typeString": "type(contract IERC1822Proxiable)"
                                }
                              },
                              "id": 594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6151:36:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1822Proxiable_$1365",
                                "typeString": "contract IERC1822Proxiable"
                              }
                            },
                            "id": 595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6188:13:2",
                            "memberName": "proxiableUUID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1364,
                            "src": "6151:50:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view external returns (bytes32)"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6151:52:2",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 627,
                        "nodeType": "TryStatement",
                        "src": "6147:437:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 585,
                    "nodeType": "StructuredDocumentation",
                    "src": "5701:346:2",
                    "text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
                  },
                  "id": 629,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_upgradeToAndCallUUPS",
                  "nameLocation": "6061:21:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "6091:17:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 629,
                        "src": "6083:25:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6083:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6123:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 629,
                        "src": "6110:17:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6110:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6082:46:2"
                  },
                  "returnParameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6137:0:2"
                  },
                  "scope": 630,
                  "src": "6052:538:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 631,
              "src": "986:5606:2",
              "usedErrors": [
                211,
                214,
                475,
                480,
                1537,
                1550,
                1932,
                1935
              ],
              "usedEvents": [
                219,
                1516
              ]
            }
          ],
          "src": "115:6478:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              1355
            ],
            "ERC20Upgradeable": [
              1247
            ],
            "IERC20": [
              1893
            ],
            "IERC20Errors": [
              1407
            ],
            "IERC20Metadata": [
              1919
            ],
            "Initializable": [
              448
            ]
          },
          "id": 1248,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 632,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 634,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1248,
              "sourceUnit": 1894,
              "src": "131:70:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 633,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1893,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 636,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1248,
              "sourceUnit": 1920,
              "src": "202:97:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 635,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1919,
                    "src": "210:14:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
              "file": "../../utils/ContextUpgradeable.sol",
              "id": 638,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1248,
              "sourceUnit": 1356,
              "src": "300:70:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 637,
                    "name": "ContextUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1355,
                    "src": "308:18:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "id": 640,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1248,
              "sourceUnit": 1503,
              "src": "371:83:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 639,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1407,
                    "src": "379:12:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../../proxy/utils/Initializable.sol",
              "id": 642,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1248,
              "sourceUnit": 449,
              "src": "455:66:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 641,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 448,
                    "src": "463:13:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 644,
                    "name": "Initializable",
                    "nameLocations": [
                      "1614:13:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 448,
                    "src": "1614:13:3"
                  },
                  "id": 645,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1614:13:3"
                },
                {
                  "baseName": {
                    "id": 646,
                    "name": "ContextUpgradeable",
                    "nameLocations": [
                      "1629:18:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1355,
                    "src": "1629:18:3"
                  },
                  "id": 647,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1629:18:3"
                },
                {
                  "baseName": {
                    "id": 648,
                    "name": "IERC20",
                    "nameLocations": [
                      "1649:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1893,
                    "src": "1649:6:3"
                  },
                  "id": 649,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1649:6:3"
                },
                {
                  "baseName": {
                    "id": 650,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1657:14:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1919,
                    "src": "1657:14:3"
                  },
                  "id": 651,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1657:14:3"
                },
                {
                  "baseName": {
                    "id": 652,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1673:12:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1407,
                    "src": "1673:12:3"
                  },
                  "id": 653,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1673:12:3"
                }
              ],
              "canonicalName": "ERC20Upgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 643,
                "nodeType": "StructuredDocumentation",
                "src": "523:1052:3",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
              },
              "fullyImplemented": true,
              "id": 1247,
              "linearizedBaseContracts": [
                1247,
                1407,
                1919,
                1893,
                1355,
                448
              ],
              "name": "ERC20Upgradeable",
              "nameLocation": "1594:16:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ERC20Upgradeable.ERC20Storage",
                  "documentation": {
                    "id": 654,
                    "nodeType": "StructuredDocumentation",
                    "src": "1692:63:3",
                    "text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
                  },
                  "id": 671,
                  "members": [
                    {
                      "constant": false,
                      "id": 658,
                      "mutability": "mutable",
                      "name": "_balances",
                      "nameLocation": "1826:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 671,
                      "src": "1790:45:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "typeName": {
                        "id": 657,
                        "keyName": "account",
                        "keyNameLocation": "1806:7:3",
                        "keyType": {
                          "id": 655,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1798:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1790:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1817:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 664,
                      "mutability": "mutable",
                      "name": "_allowances",
                      "nameLocation": "1910:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 671,
                      "src": "1846:75:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                        "typeString": "mapping(address => mapping(address => uint256))"
                      },
                      "typeName": {
                        "id": 663,
                        "keyName": "account",
                        "keyNameLocation": "1862:7:3",
                        "keyType": {
                          "id": 659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1854:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1846:63:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 662,
                          "keyName": "spender",
                          "keyNameLocation": "1889:7:3",
                          "keyType": {
                            "id": 660,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1881:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "1873:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          },
                          "valueName": "",
                          "valueNameLocation": "-1:-1:-1",
                          "valueType": {
                            "id": 661,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1900:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 666,
                      "mutability": "mutable",
                      "name": "_totalSupply",
                      "nameLocation": "1940:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 671,
                      "src": "1932:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 665,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1932:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 668,
                      "mutability": "mutable",
                      "name": "_name",
                      "nameLocation": "1970:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 671,
                      "src": "1963:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 667,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1963:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 670,
                      "mutability": "mutable",
                      "name": "_symbol",
                      "nameLocation": "1992:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 671,
                      "src": "1985:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 669,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1985:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ERC20Storage",
                  "nameLocation": "1767:12:3",
                  "nodeType": "StructDefinition",
                  "scope": 1247,
                  "src": "1760:246:3",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 674,
                  "mutability": "constant",
                  "name": "ERC20StorageLocation",
                  "nameLocation": "2146:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1247,
                  "src": "2121:114:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2169:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
                      "typeString": "int_const 3743...(69 digits omitted)...2592"
                    },
                    "value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 681,
                    "nodeType": "Block",
                    "src": "2316:79:3",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2335:54:3",
                          "nodeType": "YulBlock",
                          "src": "2335:54:3",
                          "statements": [
                            {
                              "nativeSrc": "2349:30:3",
                              "nodeType": "YulAssignment",
                              "src": "2349:30:3",
                              "value": {
                                "name": "ERC20StorageLocation",
                                "nativeSrc": "2359:20:3",
                                "nodeType": "YulIdentifier",
                                "src": "2359:20:3"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "2349:6:3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2349:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 678,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2349:6:3",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 674,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2359:20:3",
                            "valueSize": 1
                          }
                        ],
                        "id": 680,
                        "nodeType": "InlineAssembly",
                        "src": "2326:63:3"
                      }
                    ]
                  },
                  "id": 682,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getERC20Storage",
                  "nameLocation": "2251:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2267:2:3"
                  },
                  "returnParameters": {
                    "id": 679,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 678,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "2313:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "2292:22:3",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                          "typeString": "struct ERC20Upgradeable.ERC20Storage"
                        },
                        "typeName": {
                          "id": 677,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 676,
                            "name": "ERC20Storage",
                            "nameLocations": [
                              "2292:12:3"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 671,
                            "src": "2292:12:3"
                          },
                          "referencedDeclaration": 671,
                          "src": "2292:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2291:24:3"
                  },
                  "scope": 1247,
                  "src": "2242:153:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 697,
                    "nodeType": "Block",
                    "src": "2669:55:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 693,
                              "name": "name_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 685,
                              "src": "2702:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 694,
                              "name": "symbol_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 687,
                              "src": "2709:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 692,
                            "name": "__ERC20_init_unchained",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 726,
                            "src": "2679:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2679:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 696,
                        "nodeType": "ExpressionStatement",
                        "src": "2679:38:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 683,
                    "nodeType": "StructuredDocumentation",
                    "src": "2401:171:3",
                    "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
                  },
                  "id": 698,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 690,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 689,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2652:16:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "2652:16:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2652:16:3"
                    }
                  ],
                  "name": "__ERC20_init",
                  "nameLocation": "2586:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 688,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 685,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "2613:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 698,
                        "src": "2599:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 684,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2599:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 687,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "2634:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 698,
                        "src": "2620:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 686,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2620:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2598:44:3"
                  },
                  "returnParameters": {
                    "id": 691,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2669:0:3"
                  },
                  "scope": 1247,
                  "src": "2577:147:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 725,
                    "nodeType": "Block",
                    "src": "2832:114:3",
                    "statements": [
                      {
                        "assignments": [
                          709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 709,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2863:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 725,
                            "src": "2842:22:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 708,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 707,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "2842:12:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 671,
                                "src": "2842:12:3"
                              },
                              "referencedDeclaration": 671,
                              "src": "2842:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 712,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 710,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "2867:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2867:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2842:43:3"
                      },
                      {
                        "expression": {
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 713,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "2895:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                              }
                            },
                            "id": 715,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2897:5:3",
                            "memberName": "_name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 668,
                            "src": "2895:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 716,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 700,
                            "src": "2905:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2895:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 718,
                        "nodeType": "ExpressionStatement",
                        "src": "2895:15:3"
                      },
                      {
                        "expression": {
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 719,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "2920:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2922:7:3",
                            "memberName": "_symbol",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 670,
                            "src": "2920:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 722,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "2932:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2920:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "2920:19:3"
                      }
                    ]
                  },
                  "id": 726,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 705,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 704,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2815:16:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "2815:16:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2815:16:3"
                    }
                  ],
                  "name": "__ERC20_init_unchained",
                  "nameLocation": "2739:22:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 700,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "2776:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 726,
                        "src": "2762:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 699,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2762:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 702,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "2797:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 726,
                        "src": "2783:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 701,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2783:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2761:44:3"
                  },
                  "returnParameters": {
                    "id": 706,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2832:0:3"
                  },
                  "scope": 1247,
                  "src": "2730:216:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1906
                  ],
                  "body": {
                    "id": 741,
                    "nodeType": "Block",
                    "src": "3071:84:3",
                    "statements": [
                      {
                        "assignments": [
                          734
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 734,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3102:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 741,
                            "src": "3081:22:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 733,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 732,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "3081:12:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 671,
                                "src": "3081:12:3"
                              },
                              "referencedDeclaration": 671,
                              "src": "3081:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 737,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 735,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "3106:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3106:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3081:43:3"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 738,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 734,
                            "src": "3141:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3143:5:3",
                          "memberName": "_name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 668,
                          "src": "3141:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 731,
                        "id": 740,
                        "nodeType": "Return",
                        "src": "3134:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 727,
                    "nodeType": "StructuredDocumentation",
                    "src": "2952:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 742,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "3020:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 728,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3024:2:3"
                  },
                  "returnParameters": {
                    "id": 731,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 730,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 742,
                        "src": "3056:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 729,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3056:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3055:15:3"
                  },
                  "scope": 1247,
                  "src": "3011:144:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1912
                  ],
                  "body": {
                    "id": 757,
                    "nodeType": "Block",
                    "src": "3330:86:3",
                    "statements": [
                      {
                        "assignments": [
                          750
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 750,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3361:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 757,
                            "src": "3340:22:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 749,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 748,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "3340:12:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 671,
                                "src": "3340:12:3"
                              },
                              "referencedDeclaration": 671,
                              "src": "3340:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 753,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 751,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "3365:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3365:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3340:43:3"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 754,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 750,
                            "src": "3400:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                            }
                          },
                          "id": 755,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3402:7:3",
                          "memberName": "_symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 670,
                          "src": "3400:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 747,
                        "id": 756,
                        "nodeType": "Return",
                        "src": "3393:16:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 743,
                    "nodeType": "StructuredDocumentation",
                    "src": "3161:102:3",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 758,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "3277:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3283:2:3"
                  },
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 758,
                        "src": "3315:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3315:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3314:15:3"
                  },
                  "scope": 1247,
                  "src": "3268:148:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1918
                  ],
                  "body": {
                    "id": 766,
                    "nodeType": "Block",
                    "src": "4105:26:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4122:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 763,
                        "id": 765,
                        "nodeType": "Return",
                        "src": "4115:9:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 759,
                    "nodeType": "StructuredDocumentation",
                    "src": "3422:622:3",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 767,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "4058:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 760,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4066:2:3"
                  },
                  "returnParameters": {
                    "id": 763,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 762,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 767,
                        "src": "4098:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 761,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4098:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4097:7:3"
                  },
                  "scope": 1247,
                  "src": "4049:82:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1842
                  ],
                  "body": {
                    "id": 782,
                    "nodeType": "Block",
                    "src": "4252:91:3",
                    "statements": [
                      {
                        "assignments": [
                          775
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 775,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4283:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 782,
                            "src": "4262:22:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 774,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 773,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "4262:12:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 671,
                                "src": "4262:12:3"
                              },
                              "referencedDeclaration": 671,
                              "src": "4262:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 778,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 776,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "4287:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4287:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4262:43:3"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 779,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "4322:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                            }
                          },
                          "id": 780,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4324:12:3",
                          "memberName": "_totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 666,
                          "src": "4322:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 772,
                        "id": 781,
                        "nodeType": "Return",
                        "src": "4315:21:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 768,
                    "nodeType": "StructuredDocumentation",
                    "src": "4137:49:3",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 783,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "4200:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 769,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4211:2:3"
                  },
                  "returnParameters": {
                    "id": 772,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 771,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 783,
                        "src": "4243:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 770,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4243:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4242:9:3"
                  },
                  "scope": 1247,
                  "src": "4191:152:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1850
                  ],
                  "body": {
                    "id": 802,
                    "nodeType": "Block",
                    "src": "4475:97:3",
                    "statements": [
                      {
                        "assignments": [
                          793
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 793,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4506:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 802,
                            "src": "4485:22:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 792,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 791,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "4485:12:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 671,
                                "src": "4485:12:3"
                              },
                              "referencedDeclaration": 671,
                              "src": "4485:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 796,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 794,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "4510:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4510:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4485:43:3"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "id": 797,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "4545:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                              }
                            },
                            "id": 798,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4547:9:3",
                            "memberName": "_balances",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 658,
                            "src": "4545:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 800,
                          "indexExpression": {
                            "id": 799,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 786,
                            "src": "4557:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4545:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 790,
                        "id": 801,
                        "nodeType": "Return",
                        "src": "4538:27:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 784,
                    "nodeType": "StructuredDocumentation",
                    "src": "4349:47:3",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 803,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "4410:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 787,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 786,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4428:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 803,
                        "src": "4420:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 785,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4420:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4419:17:3"
                  },
                  "returnParameters": {
                    "id": 790,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 789,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 803,
                        "src": "4466:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4466:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4465:9:3"
                  },
                  "scope": 1247,
                  "src": "4401:171:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1860
                  ],
                  "body": {
                    "id": 826,
                    "nodeType": "Block",
                    "src": "4842:103:3",
                    "statements": [
                      {
                        "assignments": [
                          814
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 814,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4860:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 826,
                            "src": "4852:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 813,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4852:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 817,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 815,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1337,
                            "src": "4868:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4868:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4852:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 819,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 814,
                              "src": "4900:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 820,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 806,
                              "src": "4907:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 821,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "4911:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 818,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "4890:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4890:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 823,
                        "nodeType": "ExpressionStatement",
                        "src": "4890:27:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4934:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 812,
                        "id": 825,
                        "nodeType": "Return",
                        "src": "4927:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 804,
                    "nodeType": "StructuredDocumentation",
                    "src": "4578:184:3",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 827,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "4776:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 809,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 806,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4793:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "4785:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4785:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 808,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4805:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "4797:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 807,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4797:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4784:27:3"
                  },
                  "returnParameters": {
                    "id": 812,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 811,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "4836:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 810,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4836:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4835:6:3"
                  },
                  "scope": 1247,
                  "src": "4767:178:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1870
                  ],
                  "body": {
                    "id": 850,
                    "nodeType": "Block",
                    "src": "5092:106:3",
                    "statements": [
                      {
                        "assignments": [
                          839
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 839,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "5123:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 850,
                            "src": "5102:22:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 838,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 837,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "5102:12:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 671,
                                "src": "5102:12:3"
                              },
                              "referencedDeclaration": 671,
                              "src": "5102:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 842,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 840,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "5127:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5127:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5102:43:3"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 843,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 839,
                                "src": "5162:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                  "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                }
                              },
                              "id": 844,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5164:11:3",
                              "memberName": "_allowances",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 664,
                              "src": "5162:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 846,
                            "indexExpression": {
                              "id": 845,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 830,
                              "src": "5176:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5162:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 848,
                          "indexExpression": {
                            "id": 847,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 832,
                            "src": "5183:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5162:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 836,
                        "id": 849,
                        "nodeType": "Return",
                        "src": "5155:36:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 828,
                    "nodeType": "StructuredDocumentation",
                    "src": "4951:47:3",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 851,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "5012:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 830,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5030:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 851,
                        "src": "5022:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5022:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5045:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 851,
                        "src": "5037:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5037:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5021:32:3"
                  },
                  "returnParameters": {
                    "id": 836,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 835,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 851,
                        "src": "5083:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 834,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5083:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5082:9:3"
                  },
                  "scope": 1247,
                  "src": "5003:195:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1880
                  ],
                  "body": {
                    "id": 874,
                    "nodeType": "Block",
                    "src": "5584:107:3",
                    "statements": [
                      {
                        "assignments": [
                          862
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 862,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "5602:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 874,
                            "src": "5594:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 861,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5594:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 865,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 863,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1337,
                            "src": "5610:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5610:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5594:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 867,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 862,
                              "src": "5641:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 868,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 854,
                              "src": "5648:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 869,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "5657:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 866,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1130,
                              1198
                            ],
                            "referencedDeclaration": 1130,
                            "src": "5632:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5632:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 871,
                        "nodeType": "ExpressionStatement",
                        "src": "5632:31:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5680:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 860,
                        "id": 873,
                        "nodeType": "Return",
                        "src": "5673:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 852,
                    "nodeType": "StructuredDocumentation",
                    "src": "5204:296:3",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 875,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "5514:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 857,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 854,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "5530:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "5522:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 853,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5522:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 856,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5547:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "5539:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 855,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5539:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5521:32:3"
                  },
                  "returnParameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 875,
                        "src": "5578:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5578:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5577:6:3"
                  },
                  "scope": 1247,
                  "src": "5505:186:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1892
                  ],
                  "body": {
                    "id": 906,
                    "nodeType": "Block",
                    "src": "6344:151:3",
                    "statements": [
                      {
                        "assignments": [
                          888
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 888,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "6362:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 906,
                            "src": "6354:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 887,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6354:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 891,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 889,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1337,
                            "src": "6372:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6372:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6354:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 893,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 878,
                              "src": "6410:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 894,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "6416:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 895,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 882,
                              "src": "6425:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 892,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1246,
                            "src": "6394:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6394:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 897,
                        "nodeType": "ExpressionStatement",
                        "src": "6394:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 899,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 878,
                              "src": "6451:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 900,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "6457:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 901,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 882,
                              "src": "6461:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 898,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 954,
                            "src": "6441:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6441:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 903,
                        "nodeType": "ExpressionStatement",
                        "src": "6441:26:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6484:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 886,
                        "id": 905,
                        "nodeType": "Return",
                        "src": "6477:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 876,
                    "nodeType": "StructuredDocumentation",
                    "src": "5697:549:3",
                    "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 907,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "6260:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 883,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 878,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6281:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 907,
                        "src": "6273:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6273:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 880,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6295:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 907,
                        "src": "6287:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 879,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6287:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 882,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6307:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 907,
                        "src": "6299:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 881,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6299:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6272:41:3"
                  },
                  "returnParameters": {
                    "id": 886,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 885,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 907,
                        "src": "6338:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 884,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6338:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6337:6:3"
                  },
                  "scope": 1247,
                  "src": "6251:244:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 953,
                    "nodeType": "Block",
                    "src": "6937:231:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 917,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "6951:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6967:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6959:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 918,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6959:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6959:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6951:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 931,
                        "nodeType": "IfStatement",
                        "src": "6947:86:3",
                        "trueBody": {
                          "id": 930,
                          "nodeType": "Block",
                          "src": "6971:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 926,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7019:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 925,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7011:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 924,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7011:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 927,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7011:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 923,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1382,
                                  "src": "6992:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6992:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 929,
                              "nodeType": "RevertStatement",
                              "src": "6985:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 932,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 912,
                            "src": "7046:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7060:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7052:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 933,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7052:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7052:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7046:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 946,
                        "nodeType": "IfStatement",
                        "src": "7042:86:3",
                        "trueBody": {
                          "id": 945,
                          "nodeType": "Block",
                          "src": "7064:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 941,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7114:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 940,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7106:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 939,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7106:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 942,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7106:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 938,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1387,
                                  "src": "7085:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7085:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 944,
                              "nodeType": "RevertStatement",
                              "src": "7078:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 948,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "7145:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 949,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 912,
                              "src": "7151:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 950,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "7155:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 947,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1046,
                            "src": "7137:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7137:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 952,
                        "nodeType": "ExpressionStatement",
                        "src": "7137:24:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 908,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:362:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 954,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "6877:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6895:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 954,
                        "src": "6887:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6887:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 912,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6909:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 954,
                        "src": "6901:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 911,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6901:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6921:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 954,
                        "src": "6913:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6913:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6886:41:3"
                  },
                  "returnParameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6937:0:3"
                  },
                  "scope": 1247,
                  "src": "6868:300:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1045,
                    "nodeType": "Block",
                    "src": "7558:1095:3",
                    "statements": [
                      {
                        "assignments": [
                          966
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 966,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "7589:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1045,
                            "src": "7568:22:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 965,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 964,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "7568:12:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 671,
                                "src": "7568:12:3"
                              },
                              "referencedDeclaration": 671,
                              "src": "7568:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 969,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 967,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "7593:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7593:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7568:43:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 970,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 957,
                            "src": "7625:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7641:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7633:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 971,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7633:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7633:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7625:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1012,
                          "nodeType": "Block",
                          "src": "7801:366:3",
                          "statements": [
                            {
                              "assignments": [
                                984
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 984,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "7823:11:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1012,
                                  "src": "7815:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 983,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7815:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 989,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 985,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 966,
                                    "src": "7837:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                      "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                    }
                                  },
                                  "id": 986,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7839:9:3",
                                  "memberName": "_balances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 658,
                                  "src": "7837:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 988,
                                "indexExpression": {
                                  "id": 987,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 957,
                                  "src": "7849:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7837:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7815:39:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 990,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 984,
                                  "src": "7872:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 991,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 961,
                                  "src": "7886:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7872:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1000,
                              "nodeType": "IfStatement",
                              "src": "7868:115:3",
                              "trueBody": {
                                "id": 999,
                                "nodeType": "Block",
                                "src": "7893:90:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 994,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 957,
                                          "src": "7943:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 995,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 984,
                                          "src": "7949:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 996,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 961,
                                          "src": "7962:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 993,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1377,
                                        "src": "7918:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 997,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7918:50:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 998,
                                    "nodeType": "RevertStatement",
                                    "src": "7911:57:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1011,
                              "nodeType": "UncheckedBlock",
                              "src": "7996:161:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1009,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1001,
                                          "name": "$",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 966,
                                          "src": "8103:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                          }
                                        },
                                        "id": 1004,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8105:9:3",
                                        "memberName": "_balances",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 658,
                                        "src": "8103:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1005,
                                      "indexExpression": {
                                        "id": 1003,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 957,
                                        "src": "8115:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "8103:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1008,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1006,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 984,
                                        "src": "8123:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1007,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 961,
                                        "src": "8137:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8123:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8103:39:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1010,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8103:39:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 1013,
                        "nodeType": "IfStatement",
                        "src": "7621:546:3",
                        "trueBody": {
                          "id": 982,
                          "nodeType": "Block",
                          "src": "7645:150:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 976,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 966,
                                    "src": "7761:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                      "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                    }
                                  },
                                  "id": 978,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7763:12:3",
                                  "memberName": "_totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 666,
                                  "src": "7761:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 979,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 961,
                                  "src": "7779:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7761:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 981,
                              "nodeType": "ExpressionStatement",
                              "src": "7761:23:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1014,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 959,
                            "src": "8181:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8195:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8187:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1015,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8187:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8187:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8181:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1037,
                          "nodeType": "Block",
                          "src": "8398:208:3",
                          "statements": [
                            {
                              "id": 1036,
                              "nodeType": "UncheckedBlock",
                              "src": "8412:184:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1034,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 1028,
                                          "name": "$",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 966,
                                          "src": "8557:1:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                          }
                                        },
                                        "id": 1031,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8559:9:3",
                                        "memberName": "_balances",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 658,
                                        "src": "8557:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1032,
                                      "indexExpression": {
                                        "id": 1030,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 959,
                                        "src": "8569:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "8557:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 1033,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 961,
                                      "src": "8576:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8557:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1035,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8557:24:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 1038,
                        "nodeType": "IfStatement",
                        "src": "8177:429:3",
                        "trueBody": {
                          "id": 1027,
                          "nodeType": "Block",
                          "src": "8199:193:3",
                          "statements": [
                            {
                              "id": 1026,
                              "nodeType": "UncheckedBlock",
                              "src": "8213:169:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1024,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "expression": {
                                        "id": 1020,
                                        "name": "$",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 966,
                                        "src": "8344:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                          "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                        }
                                      },
                                      "id": 1022,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "memberLocation": "8346:12:3",
                                      "memberName": "_totalSupply",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 666,
                                      "src": "8344:14:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 1023,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 961,
                                      "src": "8362:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8344:23:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1025,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8344:23:3"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1040,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 957,
                              "src": "8630:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1041,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 959,
                              "src": "8636:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1042,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "8640:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1039,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1827,
                            "src": "8621:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8621:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1044,
                        "nodeType": "EmitStatement",
                        "src": "8616:30:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 955,
                    "nodeType": "StructuredDocumentation",
                    "src": "7174:304:3",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 1046,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "7492:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 962,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 957,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "7508:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "7500:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 956,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7500:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 959,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7522:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "7514:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 958,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7514:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 961,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7534:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "7526:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 960,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7526:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7499:41:3"
                  },
                  "returnParameters": {
                    "id": 963,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7558:0:3"
                  },
                  "scope": 1247,
                  "src": "7483:1170:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1078,
                    "nodeType": "Block",
                    "src": "9052:152:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1054,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "9066:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9085:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9077:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1055,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9077:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9077:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9066:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1068,
                        "nodeType": "IfStatement",
                        "src": "9062:91:3",
                        "trueBody": {
                          "id": 1067,
                          "nodeType": "Block",
                          "src": "9089:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1063,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9139:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1062,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9131:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1061,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9131:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1064,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9131:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1060,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1387,
                                  "src": "9110:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1065,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9110:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1066,
                              "nodeType": "RevertStatement",
                              "src": "9103:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9178:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9170:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1070,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9170:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9170:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1074,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1049,
                              "src": "9182:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1075,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1051,
                              "src": "9191:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1069,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1046,
                            "src": "9162:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9162:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1077,
                        "nodeType": "ExpressionStatement",
                        "src": "9162:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1047,
                    "nodeType": "StructuredDocumentation",
                    "src": "8659:332:3",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 1079,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "9005:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1052,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1049,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "9019:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1079,
                        "src": "9011:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9011:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1051,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9036:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1079,
                        "src": "9028:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9028:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9010:32:3"
                  },
                  "returnParameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9052:0:3"
                  },
                  "scope": 1247,
                  "src": "8996:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1111,
                    "nodeType": "Block",
                    "src": "9578:150:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1087,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "9592:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9611:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9603:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1088,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9603:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9603:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9592:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1101,
                        "nodeType": "IfStatement",
                        "src": "9588:89:3",
                        "trueBody": {
                          "id": 1100,
                          "nodeType": "Block",
                          "src": "9615:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1096,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9663:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1095,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9655:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1094,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9655:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1097,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9655:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1093,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1382,
                                  "src": "9636:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9636:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1099,
                              "nodeType": "RevertStatement",
                              "src": "9629:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1103,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1082,
                              "src": "9694:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9711:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9703:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1104,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9703:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9703:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1108,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1084,
                              "src": "9715:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1102,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1046,
                            "src": "9686:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9686:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1110,
                        "nodeType": "ExpressionStatement",
                        "src": "9686:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1080,
                    "nodeType": "StructuredDocumentation",
                    "src": "9210:307:3",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 1112,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "9531:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1085,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1082,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "9545:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "9537:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1081,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9537:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1084,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9562:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "9554:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1083,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9554:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9536:32:3"
                  },
                  "returnParameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9578:0:3"
                  },
                  "scope": 1247,
                  "src": "9522:206:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1129,
                    "nodeType": "Block",
                    "src": "10338:54:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1123,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1115,
                              "src": "10357:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1124,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1117,
                              "src": "10364:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1125,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1119,
                              "src": "10373:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10380:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1122,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1130,
                              1198
                            ],
                            "referencedDeclaration": 1198,
                            "src": "10348:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10348:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1128,
                        "nodeType": "ExpressionStatement",
                        "src": "10348:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1113,
                    "nodeType": "StructuredDocumentation",
                    "src": "9734:525:3",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 1130,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "10273:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1115,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10290:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "10282:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1114,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10282:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1117,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10305:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "10297:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1116,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10297:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1119,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10322:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1130,
                        "src": "10314:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1118,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10314:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10281:47:3"
                  },
                  "returnParameters": {
                    "id": 1121,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10338:0:3"
                  },
                  "scope": 1247,
                  "src": "10264:128:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1197,
                    "nodeType": "Block",
                    "src": "11322:389:3",
                    "statements": [
                      {
                        "assignments": [
                          1144
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1144,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "11353:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1197,
                            "src": "11332:22:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                              "typeString": "struct ERC20Upgradeable.ERC20Storage"
                            },
                            "typeName": {
                              "id": 1143,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1142,
                                "name": "ERC20Storage",
                                "nameLocations": [
                                  "11332:12:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 671,
                                "src": "11332:12:3"
                              },
                              "referencedDeclaration": 671,
                              "src": "11332:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                "typeString": "struct ERC20Upgradeable.ERC20Storage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1147,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1145,
                            "name": "_getERC20Storage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "11357:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
                              "typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
                            }
                          },
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11357:18:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                            "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11332:43:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1148,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1133,
                            "src": "11389:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11406:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11398:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1149,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11398:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11398:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11389:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1162,
                        "nodeType": "IfStatement",
                        "src": "11385:89:3",
                        "trueBody": {
                          "id": 1161,
                          "nodeType": "Block",
                          "src": "11410:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1157,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11460:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1156,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11452:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1155,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11452:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1158,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11452:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1154,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1401,
                                  "src": "11431:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11431:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1160,
                              "nodeType": "RevertStatement",
                              "src": "11424:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1163,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1135,
                            "src": "11487:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11506:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11498:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1164,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11498:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11498:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11487:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1177,
                        "nodeType": "IfStatement",
                        "src": "11483:90:3",
                        "trueBody": {
                          "id": 1176,
                          "nodeType": "Block",
                          "src": "11510:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1172,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11559:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1171,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11551:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1170,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11551:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1173,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11551:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1169,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1406,
                                  "src": "11531:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11531:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1175,
                              "nodeType": "RevertStatement",
                              "src": "11524:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1178,
                                  "name": "$",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1144,
                                  "src": "11582:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
                                    "typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
                                  }
                                },
                                "id": 1182,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11584:11:3",
                                "memberName": "_allowances",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 664,
                                "src": "11582:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1183,
                              "indexExpression": {
                                "id": 1180,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1133,
                                "src": "11596:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11582:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1184,
                            "indexExpression": {
                              "id": 1181,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "11603:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11582:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1185,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1137,
                            "src": "11614:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11582:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1187,
                        "nodeType": "ExpressionStatement",
                        "src": "11582:37:3"
                      },
                      {
                        "condition": {
                          "id": 1188,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1139,
                          "src": "11633:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1196,
                        "nodeType": "IfStatement",
                        "src": "11629:76:3",
                        "trueBody": {
                          "id": 1195,
                          "nodeType": "Block",
                          "src": "11644:61:3",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1190,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1133,
                                    "src": "11672:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1191,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1135,
                                    "src": "11679:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1192,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1137,
                                    "src": "11688:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1189,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1836,
                                  "src": "11663:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11663:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1194,
                              "nodeType": "EmitStatement",
                              "src": "11658:36:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1131,
                    "nodeType": "StructuredDocumentation",
                    "src": "10398:821:3",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 1198,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "11233:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1133,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "11250:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1198,
                        "src": "11242:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11242:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "11265:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1198,
                        "src": "11257:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11257:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "11282:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1198,
                        "src": "11274:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11274:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1139,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "11294:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1198,
                        "src": "11289:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1138,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11289:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11241:63:3"
                  },
                  "returnParameters": {
                    "id": 1141,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11322:0:3"
                  },
                  "scope": 1247,
                  "src": "11224:487:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1245,
                    "nodeType": "Block",
                    "src": "12082:388:3",
                    "statements": [
                      {
                        "assignments": [
                          1209
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1209,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "12100:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1245,
                            "src": "12092:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1208,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12092:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1214,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1211,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "12129:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1212,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1203,
                              "src": "12136:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1210,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 851,
                            "src": "12119:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12119:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12092:52:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1215,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1209,
                            "src": "12158:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12183:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1217,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12183:7:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 1216,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "12178:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12178:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12192:3:3",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "12178:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12158:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1244,
                        "nodeType": "IfStatement",
                        "src": "12154:310:3",
                        "trueBody": {
                          "id": 1243,
                          "nodeType": "Block",
                          "src": "12197:267:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1222,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1209,
                                  "src": "12215:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1223,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1205,
                                  "src": "12234:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12215:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1232,
                              "nodeType": "IfStatement",
                              "src": "12211:130:3",
                              "trueBody": {
                                "id": 1231,
                                "nodeType": "Block",
                                "src": "12241:100:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1226,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1203,
                                          "src": "12293:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1227,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1209,
                                          "src": "12302:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1228,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1205,
                                          "src": "12320:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1225,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1396,
                                        "src": "12266:26:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1229,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "12266:60:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1230,
                                    "nodeType": "RevertStatement",
                                    "src": "12259:67:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1242,
                              "nodeType": "UncheckedBlock",
                              "src": "12354:100:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1234,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1201,
                                        "src": "12391:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1235,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1203,
                                        "src": "12398:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1238,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1236,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1209,
                                          "src": "12407:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1237,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1205,
                                          "src": "12426:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12407:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 1239,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12433:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1233,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        1130,
                                        1198
                                      ],
                                      "referencedDeclaration": 1198,
                                      "src": "12382:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 1240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12382:57:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1241,
                                  "nodeType": "ExpressionStatement",
                                  "src": "12382:57:3"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1199,
                    "nodeType": "StructuredDocumentation",
                    "src": "11717:271:3",
                    "text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 1246,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "12002:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1201,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "12026:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1246,
                        "src": "12018:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12018:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1203,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "12041:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1246,
                        "src": "12033:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12033:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1205,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "12058:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1246,
                        "src": "12050:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12050:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12017:47:3"
                  },
                  "returnParameters": {
                    "id": 1207,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12082:0:3"
                  },
                  "scope": 1247,
                  "src": "11993:477:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1248,
              "src": "1576:10896:3",
              "usedErrors": [
                211,
                214,
                1377,
                1382,
                1387,
                1396,
                1401,
                1406
              ],
              "usedEvents": [
                219,
                1827,
                1836
              ]
            }
          ],
          "src": "105:12368:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              1355
            ],
            "ERC20BurnableUpgradeable": [
              1309
            ],
            "ERC20Upgradeable": [
              1247
            ],
            "Initializable": [
              448
            ]
          },
          "id": 1310,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1249,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
              "file": "../ERC20Upgradeable.sol",
              "id": 1251,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1310,
              "sourceUnit": 1248,
              "src": "150:57:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1250,
                    "name": "ERC20Upgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1247,
                    "src": "158:16:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
              "file": "../../../utils/ContextUpgradeable.sol",
              "id": 1253,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1310,
              "sourceUnit": 1356,
              "src": "208:73:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1252,
                    "name": "ContextUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1355,
                    "src": "216:18:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../../../proxy/utils/Initializable.sol",
              "id": 1255,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1310,
              "sourceUnit": 449,
              "src": "282:69:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1254,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 448,
                    "src": "290:13:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1257,
                    "name": "Initializable",
                    "nameLocations": [
                      "608:13:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 448,
                    "src": "608:13:4"
                  },
                  "id": 1258,
                  "nodeType": "InheritanceSpecifier",
                  "src": "608:13:4"
                },
                {
                  "baseName": {
                    "id": 1259,
                    "name": "ContextUpgradeable",
                    "nameLocations": [
                      "623:18:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1355,
                    "src": "623:18:4"
                  },
                  "id": 1260,
                  "nodeType": "InheritanceSpecifier",
                  "src": "623:18:4"
                },
                {
                  "baseName": {
                    "id": 1261,
                    "name": "ERC20Upgradeable",
                    "nameLocations": [
                      "643:16:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1247,
                    "src": "643:16:4"
                  },
                  "id": 1262,
                  "nodeType": "InheritanceSpecifier",
                  "src": "643:16:4"
                }
              ],
              "canonicalName": "ERC20BurnableUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1256,
                "nodeType": "StructuredDocumentation",
                "src": "353:208:4",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 1309,
              "linearizedBaseContracts": [
                1309,
                1247,
                1407,
                1919,
                1893,
                1355,
                448
              ],
              "name": "ERC20BurnableUpgradeable",
              "nameLocation": "580:24:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1267,
                    "nodeType": "Block",
                    "src": "724:7:4",
                    "statements": []
                  },
                  "id": 1268,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1265,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1264,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "707:16:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "707:16:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "707:16:4"
                    }
                  ],
                  "name": "__ERC20Burnable_init",
                  "nameLocation": "675:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "695:2:4"
                  },
                  "returnParameters": {
                    "id": 1266,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "724:0:4"
                  },
                  "scope": 1309,
                  "src": "666:65:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1273,
                    "nodeType": "Block",
                    "src": "805:7:4",
                    "statements": []
                  },
                  "id": 1274,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1271,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1270,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "788:16:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "788:16:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "788:16:4"
                    }
                  ],
                  "name": "__ERC20Burnable_init_unchained",
                  "nameLocation": "746:30:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1269,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "776:2:4"
                  },
                  "returnParameters": {
                    "id": 1272,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "805:0:4"
                  },
                  "scope": 1309,
                  "src": "737:75:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1286,
                    "nodeType": "Block",
                    "src": "975:43:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1281,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1337,
                                "src": "991:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "991:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1283,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1277,
                              "src": "1005:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1280,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "985:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "985:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1285,
                        "nodeType": "ExpressionStatement",
                        "src": "985:26:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1275,
                    "nodeType": "StructuredDocumentation",
                    "src": "817:109:4",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 1287,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "940:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "953:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1287,
                        "src": "945:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "945:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "944:15:4"
                  },
                  "returnParameters": {
                    "id": 1279,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "975:0:4"
                  },
                  "scope": 1309,
                  "src": "931:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1307,
                    "nodeType": "Block",
                    "src": "1399:93:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1296,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1290,
                              "src": "1425:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1297,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1337,
                                "src": "1434:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1434:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1299,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1292,
                              "src": "1448:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1295,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1246,
                            "src": "1409:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1409:45:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1301,
                        "nodeType": "ExpressionStatement",
                        "src": "1409:45:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1303,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1290,
                              "src": "1470:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1304,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1292,
                              "src": "1479:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1302,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "1464:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1464:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1306,
                        "nodeType": "ExpressionStatement",
                        "src": "1464:21:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1288,
                    "nodeType": "StructuredDocumentation",
                    "src": "1024:305:4",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 1308,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1343:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1290,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1360:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "1352:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1289,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1352:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1292,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1377:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "1369:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1291,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1369:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1351:32:4"
                  },
                  "returnParameters": {
                    "id": 1294,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1399:0:4"
                  },
                  "scope": 1309,
                  "src": "1334:158:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1310,
              "src": "562:932:4",
              "usedErrors": [
                211,
                214,
                1377,
                1382,
                1387,
                1396,
                1401,
                1406
              ],
              "usedEvents": [
                219,
                1827,
                1836
              ]
            }
          ],
          "src": "124:1371:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              1355
            ],
            "Initializable": [
              448
            ]
          },
          "id": 1356,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1311,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 1313,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1356,
              "sourceUnit": 449,
              "src": "126:63:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1312,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 448,
                    "src": "134:13:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1315,
                    "name": "Initializable",
                    "nameLocations": [
                      "728:13:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 448,
                    "src": "728:13:5"
                  },
                  "id": 1316,
                  "nodeType": "InheritanceSpecifier",
                  "src": "728:13:5"
                }
              ],
              "canonicalName": "ContextUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1314,
                "nodeType": "StructuredDocumentation",
                "src": "191:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1355,
              "linearizedBaseContracts": [
                1355,
                448
              ],
              "name": "ContextUpgradeable",
              "nameLocation": "706:18:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1321,
                    "nodeType": "Block",
                    "src": "800:7:5",
                    "statements": []
                  },
                  "id": 1322,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1319,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1318,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "783:16:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "783:16:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "783:16:5"
                    }
                  ],
                  "name": "__Context_init",
                  "nameLocation": "757:14:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1317,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "771:2:5"
                  },
                  "returnParameters": {
                    "id": 1320,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "800:0:5"
                  },
                  "scope": 1355,
                  "src": "748:59:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1327,
                    "nodeType": "Block",
                    "src": "875:7:5",
                    "statements": []
                  },
                  "id": 1328,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1325,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1324,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "858:16:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "858:16:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "858:16:5"
                    }
                  ],
                  "name": "__Context_init_unchained",
                  "nameLocation": "822:24:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1323,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "846:2:5"
                  },
                  "returnParameters": {
                    "id": 1326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "875:0:5"
                  },
                  "scope": 1355,
                  "src": "813:69:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1336,
                    "nodeType": "Block",
                    "src": "949:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1333,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "966:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "970:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "966:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1332,
                        "id": 1335,
                        "nodeType": "Return",
                        "src": "959:17:5"
                      }
                    ]
                  },
                  "id": 1337,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "896:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "906:2:5"
                  },
                  "returnParameters": {
                    "id": 1332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "940:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:9:5"
                  },
                  "scope": 1355,
                  "src": "887:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1345,
                    "nodeType": "Block",
                    "src": "1056:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1342,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1073:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1077:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "1073:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1341,
                        "id": 1344,
                        "nodeType": "Return",
                        "src": "1066:15:5"
                      }
                    ]
                  },
                  "id": 1346,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "998:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1006:2:5"
                  },
                  "returnParameters": {
                    "id": 1341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "1040:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1040:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1039:16:5"
                  },
                  "scope": 1355,
                  "src": "989:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1353,
                    "nodeType": "Block",
                    "src": "1166:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1183:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1350,
                        "id": 1352,
                        "nodeType": "Return",
                        "src": "1176:8:5"
                      }
                    ]
                  },
                  "id": 1354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "1103:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1123:2:5"
                  },
                  "returnParameters": {
                    "id": 1350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1354,
                        "src": "1157:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1348,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1156:9:5"
                  },
                  "scope": 1355,
                  "src": "1094:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1356,
              "src": "688:505:5",
              "usedErrors": [
                211,
                214
              ],
              "usedEvents": [
                219
              ]
            }
          ],
          "src": "101:1093:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
          "exportedSymbols": {
            "IERC1822Proxiable": [
              1365
            ]
          },
          "id": 1366,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1357,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "113:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1822Proxiable",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1358,
                "nodeType": "StructuredDocumentation",
                "src": "139:203:6",
                "text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
              },
              "fullyImplemented": false,
              "id": 1365,
              "linearizedBaseContracts": [
                1365
              ],
              "name": "IERC1822Proxiable",
              "nameLocation": "353:17:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1359,
                    "nodeType": "StructuredDocumentation",
                    "src": "377:438:6",
                    "text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
                  },
                  "functionSelector": "52d1902d",
                  "id": 1364,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proxiableUUID",
                  "nameLocation": "829:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "842:2:6"
                  },
                  "returnParameters": {
                    "id": 1363,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1362,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1364,
                        "src": "868:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1361,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "868:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "867:9:6"
                  },
                  "scope": 1365,
                  "src": "820:57:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1366,
              "src": "343:536:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "113:767:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              1502
            ],
            "IERC20Errors": [
              1407
            ],
            "IERC721Errors": [
              1455
            ]
          },
          "id": 1503,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1367,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1368,
                "nodeType": "StructuredDocumentation",
                "src": "138:139:7",
                "text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
              },
              "fullyImplemented": true,
              "id": 1407,
              "linearizedBaseContracts": [
                1407
              ],
              "name": "IERC20Errors",
              "nameLocation": "288:12:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1369,
                    "nodeType": "StructuredDocumentation",
                    "src": "307:309:7",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 1377,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "627:24:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1371,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "660:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1377,
                        "src": "652:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1370,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1373,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "676:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1377,
                        "src": "668:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "668:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1375,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "693:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1377,
                        "src": "685:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "651:49:7"
                  },
                  "src": "621:80:7"
                },
                {
                  "documentation": {
                    "id": 1378,
                    "nodeType": "StructuredDocumentation",
                    "src": "707:152:7",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 1382,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "870:18:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1380,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "897:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1382,
                        "src": "889:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1379,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "889:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "888:16:7"
                  },
                  "src": "864:41:7"
                },
                {
                  "documentation": {
                    "id": 1383,
                    "nodeType": "StructuredDocumentation",
                    "src": "911:159:7",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 1387,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1081:20:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1385,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1110:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1387,
                        "src": "1102:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1384,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1102:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1101:18:7"
                  },
                  "src": "1075:45:7"
                },
                {
                  "documentation": {
                    "id": 1388,
                    "nodeType": "StructuredDocumentation",
                    "src": "1126:345:7",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 1396,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1482:26:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1390,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1517:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1396,
                        "src": "1509:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1509:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1392,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1534:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1396,
                        "src": "1526:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1391,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1526:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1394,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1553:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1396,
                        "src": "1545:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1393,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1545:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1508:52:7"
                  },
                  "src": "1476:85:7"
                },
                {
                  "documentation": {
                    "id": 1397,
                    "nodeType": "StructuredDocumentation",
                    "src": "1567:174:7",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 1401,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1752:20:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1400,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1399,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1781:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1401,
                        "src": "1773:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1398,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:18:7"
                  },
                  "src": "1746:45:7"
                },
                {
                  "documentation": {
                    "id": 1402,
                    "nodeType": "StructuredDocumentation",
                    "src": "1797:195:7",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 1406,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2003:19:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1405,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1404,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2031:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1406,
                        "src": "2023:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1403,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2023:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2022:17:7"
                  },
                  "src": "1997:43:7"
                }
              ],
              "scope": 1503,
              "src": "278:1764:7",
              "usedErrors": [
                1377,
                1382,
                1387,
                1396,
                1401,
                1406
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1408,
                "nodeType": "StructuredDocumentation",
                "src": "2044:141:7",
                "text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
              },
              "fullyImplemented": true,
              "id": 1455,
              "linearizedBaseContracts": [
                1455
              ],
              "name": "IERC721Errors",
              "nameLocation": "2196:13:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1409,
                    "nodeType": "StructuredDocumentation",
                    "src": "2216:219:7",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 1413,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2446:18:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1412,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1411,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2473:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1413,
                        "src": "2465:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1410,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2465:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2464:15:7"
                  },
                  "src": "2440:40:7"
                },
                {
                  "documentation": {
                    "id": 1414,
                    "nodeType": "StructuredDocumentation",
                    "src": "2486:132:7",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 1418,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2629:22:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1417,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1416,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2660:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1418,
                        "src": "2652:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1415,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2652:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2651:17:7"
                  },
                  "src": "2623:46:7"
                },
                {
                  "documentation": {
                    "id": 1419,
                    "nodeType": "StructuredDocumentation",
                    "src": "2675:289:7",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 1427,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2975:20:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1421,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3004:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1427,
                        "src": "2996:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2996:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1423,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3020:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1427,
                        "src": "3012:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1422,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1425,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3037:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1427,
                        "src": "3029:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1424,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3029:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2995:48:7"
                  },
                  "src": "2969:75:7"
                },
                {
                  "documentation": {
                    "id": 1428,
                    "nodeType": "StructuredDocumentation",
                    "src": "3050:152:7",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 1432,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3213:19:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1430,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3241:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1432,
                        "src": "3233:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1429,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3233:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3232:16:7"
                  },
                  "src": "3207:42:7"
                },
                {
                  "documentation": {
                    "id": 1433,
                    "nodeType": "StructuredDocumentation",
                    "src": "3255:159:7",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 1437,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3425:21:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1435,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3455:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1437,
                        "src": "3447:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3447:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3446:18:7"
                  },
                  "src": "3419:46:7"
                },
                {
                  "documentation": {
                    "id": 1438,
                    "nodeType": "StructuredDocumentation",
                    "src": "3471:247:7",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 1444,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3729:26:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1440,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3764:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "3756:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1439,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3756:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1442,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3782:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1444,
                        "src": "3774:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1441,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3755:35:7"
                  },
                  "src": "3723:68:7"
                },
                {
                  "documentation": {
                    "id": 1445,
                    "nodeType": "StructuredDocumentation",
                    "src": "3797:174:7",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 1449,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3982:21:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1448,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1447,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4012:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1449,
                        "src": "4004:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1446,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4004:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4003:18:7"
                  },
                  "src": "3976:46:7"
                },
                {
                  "documentation": {
                    "id": 1450,
                    "nodeType": "StructuredDocumentation",
                    "src": "4028:197:7",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 1454,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4236:21:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1453,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1452,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4266:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1454,
                        "src": "4258:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1451,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4258:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4257:18:7"
                  },
                  "src": "4230:46:7"
                }
              ],
              "scope": 1503,
              "src": "2186:2092:7",
              "usedErrors": [
                1413,
                1418,
                1427,
                1432,
                1437,
                1444,
                1449,
                1454
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1456,
                "nodeType": "StructuredDocumentation",
                "src": "4280:143:7",
                "text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
              },
              "fullyImplemented": true,
              "id": 1502,
              "linearizedBaseContracts": [
                1502
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4434:14:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1457,
                    "nodeType": "StructuredDocumentation",
                    "src": "4455:361:7",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 1467,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4827:26:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1459,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4862:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "4854:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4854:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1461,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4878:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "4870:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1460,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4870:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1463,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4895:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "4887:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4887:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1465,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4911:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "4903:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1464,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4903:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4853:66:7"
                  },
                  "src": "4821:99:7"
                },
                {
                  "documentation": {
                    "id": 1468,
                    "nodeType": "StructuredDocumentation",
                    "src": "4926:152:7",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 1472,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5089:20:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1470,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5118:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1472,
                        "src": "5110:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1469,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5110:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5109:16:7"
                  },
                  "src": "5083:43:7"
                },
                {
                  "documentation": {
                    "id": 1473,
                    "nodeType": "StructuredDocumentation",
                    "src": "5132:159:7",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 1477,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5302:22:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1476,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1475,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5333:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "5325:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1474,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5325:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5324:18:7"
                  },
                  "src": "5296:47:7"
                },
                {
                  "documentation": {
                    "id": 1478,
                    "nodeType": "StructuredDocumentation",
                    "src": "5349:256:7",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 1484,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5616:28:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1483,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1480,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5653:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1484,
                        "src": "5645:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5645:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1482,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5671:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1484,
                        "src": "5663:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1481,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5663:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5644:33:7"
                  },
                  "src": "5610:68:7"
                },
                {
                  "documentation": {
                    "id": 1485,
                    "nodeType": "StructuredDocumentation",
                    "src": "5684:174:7",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 1489,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5869:22:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1488,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1487,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5900:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1489,
                        "src": "5892:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5892:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5891:18:7"
                  },
                  "src": "5863:47:7"
                },
                {
                  "documentation": {
                    "id": 1490,
                    "nodeType": "StructuredDocumentation",
                    "src": "5916:197:7",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 1494,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6124:22:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1492,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6155:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1494,
                        "src": "6147:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1491,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6147:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6146:18:7"
                  },
                  "src": "6118:47:7"
                },
                {
                  "documentation": {
                    "id": 1495,
                    "nodeType": "StructuredDocumentation",
                    "src": "6171:280:7",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 1501,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6462:25:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1500,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1497,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6496:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1501,
                        "src": "6488:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1496,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6488:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1499,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6515:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1501,
                        "src": "6507:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1498,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6507:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6487:41:7"
                  },
                  "src": "6456:73:7"
                }
              ],
              "scope": 1503,
              "src": "4424:2107:7",
              "usedErrors": [
                1467,
                1472,
                1477,
                1484,
                1489,
                1494,
                1501
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6420:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
          "exportedSymbols": {
            "Address": [
              2172
            ],
            "ERC1967Utils": [
              1805
            ],
            "IBeacon": [
              1815
            ],
            "StorageSlot": [
              2282
            ]
          },
          "id": 1806,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1504,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
              "file": "../beacon/IBeacon.sol",
              "id": 1506,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1806,
              "sourceUnit": 1816,
              "src": "140:46:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1505,
                    "name": "IBeacon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1815,
                    "src": "148:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "../../utils/Address.sol",
              "id": 1508,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1806,
              "sourceUnit": 2173,
              "src": "187:48:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1507,
                    "name": "Address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2172,
                    "src": "195:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
              "file": "../../utils/StorageSlot.sol",
              "id": 1510,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1806,
              "sourceUnit": 2283,
              "src": "236:56:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1509,
                    "name": "StorageSlot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2282,
                    "src": "244:11:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ERC1967Utils",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1511,
                "nodeType": "StructuredDocumentation",
                "src": "294:154:8",
                "text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
              },
              "fullyImplemented": true,
              "id": 1805,
              "linearizedBaseContracts": [
                1805
              ],
              "name": "ERC1967Utils",
              "nameLocation": "457:12:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1512,
                    "nodeType": "StructuredDocumentation",
                    "src": "660:68:8",
                    "text": " @dev Emitted when the implementation is upgraded."
                  },
                  "eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
                  "id": 1516,
                  "name": "Upgraded",
                  "nameLocation": "739:8:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1514,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "764:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1516,
                        "src": "748:30:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "748:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "747:32:8"
                  },
                  "src": "733:47:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1517,
                    "nodeType": "StructuredDocumentation",
                    "src": "786:67:8",
                    "text": " @dev Emitted when the admin account has changed."
                  },
                  "eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
                  "id": 1523,
                  "name": "AdminChanged",
                  "nameLocation": "864:12:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1522,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1519,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "previousAdmin",
                        "nameLocation": "885:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1523,
                        "src": "877:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "877:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1521,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "908:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1523,
                        "src": "900:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1520,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "900:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "876:41:8"
                  },
                  "src": "858:60:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1524,
                    "nodeType": "StructuredDocumentation",
                    "src": "924:59:8",
                    "text": " @dev Emitted when the beacon is changed."
                  },
                  "eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
                  "id": 1528,
                  "name": "BeaconUpgraded",
                  "nameLocation": "994:14:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1527,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1526,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "beacon",
                        "nameLocation": "1025:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1528,
                        "src": "1009:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1525,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1009:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1008:24:8"
                  },
                  "src": "988:45:8"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1529,
                    "nodeType": "StructuredDocumentation",
                    "src": "1039:170:8",
                    "text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
                  },
                  "id": 1532,
                  "mutability": "constant",
                  "name": "IMPLEMENTATION_SLOT",
                  "nameLocation": "1305:19:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1805,
                  "src": "1279:114:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1530,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1327:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
                      "typeString": "int_const 2444...(69 digits omitted)...5612"
                    },
                    "value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
                  },
                  "visibility": "internal"
                },
                {
                  "documentation": {
                    "id": 1533,
                    "nodeType": "StructuredDocumentation",
                    "src": "1400:69:8",
                    "text": " @dev The `implementation` of the proxy is invalid."
                  },
                  "errorSelector": "4c9c8ce3",
                  "id": 1537,
                  "name": "ERC1967InvalidImplementation",
                  "nameLocation": "1480:28:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1535,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "1517:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "1509:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1534,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1509:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1508:24:8"
                  },
                  "src": "1474:59:8"
                },
                {
                  "documentation": {
                    "id": 1538,
                    "nodeType": "StructuredDocumentation",
                    "src": "1539:60:8",
                    "text": " @dev The `admin` of the proxy is invalid."
                  },
                  "errorSelector": "62e77ba2",
                  "id": 1542,
                  "name": "ERC1967InvalidAdmin",
                  "nameLocation": "1610:19:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1541,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1540,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "1638:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1542,
                        "src": "1630:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1539,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1630:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1629:15:8"
                  },
                  "src": "1604:41:8"
                },
                {
                  "documentation": {
                    "id": 1543,
                    "nodeType": "StructuredDocumentation",
                    "src": "1651:61:8",
                    "text": " @dev The `beacon` of the proxy is invalid."
                  },
                  "errorSelector": "64ced0ec",
                  "id": 1547,
                  "name": "ERC1967InvalidBeacon",
                  "nameLocation": "1723:20:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1546,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1545,
                        "mutability": "mutable",
                        "name": "beacon",
                        "nameLocation": "1752:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1547,
                        "src": "1744:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1744:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1743:16:8"
                  },
                  "src": "1717:43:8"
                },
                {
                  "documentation": {
                    "id": 1548,
                    "nodeType": "StructuredDocumentation",
                    "src": "1766:82:8",
                    "text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
                  },
                  "errorSelector": "b398979f",
                  "id": 1550,
                  "name": "ERC1967NonPayable",
                  "nameLocation": "1859:17:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1549,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1876:2:8"
                  },
                  "src": "1853:26:8"
                },
                {
                  "body": {
                    "id": 1562,
                    "nodeType": "Block",
                    "src": "2018:77:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1558,
                                "name": "IMPLEMENTATION_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1532,
                                "src": "2062:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 1556,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2282,
                                "src": "2035:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2282_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 1557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2047:14:8",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2204,
                              "src": "2035:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2178_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 1559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2035:47:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$2178_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 1560,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2083:5:8",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2177,
                          "src": "2035:53:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1555,
                        "id": 1561,
                        "nodeType": "Return",
                        "src": "2028:60:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1551,
                    "nodeType": "StructuredDocumentation",
                    "src": "1885:67:8",
                    "text": " @dev Returns the current implementation address."
                  },
                  "id": 1563,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getImplementation",
                  "nameLocation": "1966:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1552,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1983:2:8"
                  },
                  "returnParameters": {
                    "id": 1555,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1554,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1563,
                        "src": "2009:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1553,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:9:8"
                  },
                  "scope": 1805,
                  "src": "1957:138:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1589,
                    "nodeType": "Block",
                    "src": "2249:218:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1569,
                                "name": "newImplementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1566,
                                "src": "2263:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2281:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "2263:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2286:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2263:29:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2296:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2263:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1579,
                        "nodeType": "IfStatement",
                        "src": "2259:119:8",
                        "trueBody": {
                          "id": 1578,
                          "nodeType": "Block",
                          "src": "2299:79:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1575,
                                    "name": "newImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1566,
                                    "src": "2349:17:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1574,
                                  "name": "ERC1967InvalidImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1537,
                                  "src": "2320:28:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2320:47:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1577,
                              "nodeType": "RevertStatement",
                              "src": "2313:54:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1583,
                                  "name": "IMPLEMENTATION_SLOT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1532,
                                  "src": "2414:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1580,
                                  "name": "StorageSlot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2282,
                                  "src": "2387:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2282_$",
                                    "typeString": "type(library StorageSlot)"
                                  }
                                },
                                "id": 1582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2399:14:8",
                                "memberName": "getAddressSlot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2204,
                                "src": "2387:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2178_storage_ptr_$",
                                  "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                }
                              },
                              "id": 1584,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2387:47:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSlot_$2178_storage_ptr",
                                "typeString": "struct StorageSlot.AddressSlot storage pointer"
                              }
                            },
                            "id": 1585,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2435:5:8",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2177,
                            "src": "2387:53:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1586,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1566,
                            "src": "2443:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2387:73:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1588,
                        "nodeType": "ExpressionStatement",
                        "src": "2387:73:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1564,
                    "nodeType": "StructuredDocumentation",
                    "src": "2101:80:8",
                    "text": " @dev Stores a new address in the EIP1967 implementation slot."
                  },
                  "id": 1590,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setImplementation",
                  "nameLocation": "2195:18:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1567,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1566,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "2222:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "2214:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1565,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2214:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2213:27:8"
                  },
                  "returnParameters": {
                    "id": 1568,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2249:0:8"
                  },
                  "scope": 1805,
                  "src": "2186:281:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1623,
                    "nodeType": "Block",
                    "src": "2860:254:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1599,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1593,
                              "src": "2889:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1598,
                            "name": "_setImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1590,
                            "src": "2870:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2870:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1601,
                        "nodeType": "ExpressionStatement",
                        "src": "2870:37:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1603,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1593,
                              "src": "2931:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1602,
                            "name": "Upgraded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1516,
                            "src": "2922:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2922:27:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1605,
                        "nodeType": "EmitStatement",
                        "src": "2917:32:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1606,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1595,
                              "src": "2964:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2969:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2964:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2978:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2964:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1621,
                          "nodeType": "Block",
                          "src": "3065:43:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1618,
                                  "name": "_checkNonPayable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1804,
                                  "src": "3079:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 1619,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3079:18:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1620,
                              "nodeType": "ExpressionStatement",
                              "src": "3079:18:8"
                            }
                          ]
                        },
                        "id": 1622,
                        "nodeType": "IfStatement",
                        "src": "2960:148:8",
                        "trueBody": {
                          "id": 1617,
                          "nodeType": "Block",
                          "src": "2981:78:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1613,
                                    "name": "newImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1593,
                                    "src": "3024:17:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1614,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1595,
                                    "src": "3043:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1610,
                                    "name": "Address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2172,
                                    "src": "2995:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Address_$2172_$",
                                      "typeString": "type(library Address)"
                                    }
                                  },
                                  "id": 1612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3003:20:8",
                                  "memberName": "functionDelegateCall",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2091,
                                  "src": "2995:28:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (address,bytes memory) returns (bytes memory)"
                                  }
                                },
                                "id": 1615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2995:53:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1616,
                              "nodeType": "ExpressionStatement",
                              "src": "2995:53:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1591,
                    "nodeType": "StructuredDocumentation",
                    "src": "2473:301:8",
                    "text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
                  },
                  "id": 1624,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "upgradeToAndCall",
                  "nameLocation": "2788:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1593,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "2813:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1624,
                        "src": "2805:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1592,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2805:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1595,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2845:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1624,
                        "src": "2832:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1594,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2832:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2804:46:8"
                  },
                  "returnParameters": {
                    "id": 1597,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2860:0:8"
                  },
                  "scope": 1805,
                  "src": "2779:335:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1625,
                    "nodeType": "StructuredDocumentation",
                    "src": "3120:145:8",
                    "text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
                  },
                  "id": 1628,
                  "mutability": "constant",
                  "name": "ADMIN_SLOT",
                  "nameLocation": "3361:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1805,
                  "src": "3335:105:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1626,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
                    "id": 1627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3374:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
                      "typeString": "int_const 8195...(69 digits omitted)...7091"
                    },
                    "value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1640,
                    "nodeType": "Block",
                    "src": "3844:68:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1636,
                                "name": "ADMIN_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1628,
                                "src": "3888:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 1634,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2282,
                                "src": "3861:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2282_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 1635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3873:14:8",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2204,
                              "src": "3861:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2178_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 1637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3861:38:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$2178_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3900:5:8",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2177,
                          "src": "3861:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1633,
                        "id": 1639,
                        "nodeType": "Return",
                        "src": "3854:51:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1629,
                    "nodeType": "StructuredDocumentation",
                    "src": "3447:340:8",
                    "text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
                  },
                  "id": 1641,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAdmin",
                  "nameLocation": "3801:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1630,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3809:2:8"
                  },
                  "returnParameters": {
                    "id": 1633,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1632,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "3835:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1631,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3835:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3834:9:8"
                  },
                  "scope": 1805,
                  "src": "3792:120:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1671,
                    "nodeType": "Block",
                    "src": "4039:172:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1647,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1644,
                            "src": "4053:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4073:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4065:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1648,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4065:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4065:10:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4053:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1661,
                        "nodeType": "IfStatement",
                        "src": "4049:91:8",
                        "trueBody": {
                          "id": 1660,
                          "nodeType": "Block",
                          "src": "4077:63:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4126:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4118:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1654,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4118:7:8",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4118:10:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1653,
                                  "name": "ERC1967InvalidAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1542,
                                  "src": "4098:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4098:31:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1659,
                              "nodeType": "RevertStatement",
                              "src": "4091:38:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1665,
                                  "name": "ADMIN_SLOT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1628,
                                  "src": "4176:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1662,
                                  "name": "StorageSlot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2282,
                                  "src": "4149:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2282_$",
                                    "typeString": "type(library StorageSlot)"
                                  }
                                },
                                "id": 1664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4161:14:8",
                                "memberName": "getAddressSlot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2204,
                                "src": "4149:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2178_storage_ptr_$",
                                  "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                }
                              },
                              "id": 1666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4149:38:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSlot_$2178_storage_ptr",
                                "typeString": "struct StorageSlot.AddressSlot storage pointer"
                              }
                            },
                            "id": 1667,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4188:5:8",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2177,
                            "src": "4149:44:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1668,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1644,
                            "src": "4196:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4149:55:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1670,
                        "nodeType": "ExpressionStatement",
                        "src": "4149:55:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1642,
                    "nodeType": "StructuredDocumentation",
                    "src": "3918:71:8",
                    "text": " @dev Stores a new address in the EIP1967 admin slot."
                  },
                  "id": 1672,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setAdmin",
                  "nameLocation": "4003:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1644,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "4021:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1672,
                        "src": "4013:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1643,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4012:18:8"
                  },
                  "returnParameters": {
                    "id": 1646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4039:0:8"
                  },
                  "scope": 1805,
                  "src": "3994:217:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1688,
                    "nodeType": "Block",
                    "src": "4379:85:8",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1679,
                                "name": "getAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1641,
                                "src": "4407:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4407:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1681,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1675,
                              "src": "4419:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1678,
                            "name": "AdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1523,
                            "src": "4394:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4394:34:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1683,
                        "nodeType": "EmitStatement",
                        "src": "4389:39:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1685,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1675,
                              "src": "4448:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1684,
                            "name": "_setAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1672,
                            "src": "4438:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4438:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1687,
                        "nodeType": "ExpressionStatement",
                        "src": "4438:19:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1673,
                    "nodeType": "StructuredDocumentation",
                    "src": "4217:109:8",
                    "text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
                  },
                  "id": 1689,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeAdmin",
                  "nameLocation": "4340:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1676,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1675,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "4360:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "4352:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4352:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4351:18:8"
                  },
                  "returnParameters": {
                    "id": 1677,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4379:0:8"
                  },
                  "scope": 1805,
                  "src": "4331:133:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1690,
                    "nodeType": "StructuredDocumentation",
                    "src": "4470:201:8",
                    "text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
                  },
                  "id": 1693,
                  "mutability": "constant",
                  "name": "BEACON_SLOT",
                  "nameLocation": "4767:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1805,
                  "src": "4741:106:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1691,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4741:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4781:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
                      "typeString": "int_const 7415...(69 digits omitted)...4704"
                    },
                    "value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1705,
                    "nodeType": "Block",
                    "src": "4963:69:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1701,
                                "name": "BEACON_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1693,
                                "src": "5007:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 1699,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2282,
                                "src": "4980:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2282_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 1700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4992:14:8",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2204,
                              "src": "4980:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2178_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 1702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4980:39:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$2178_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5020:5:8",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2177,
                          "src": "4980:45:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1698,
                        "id": 1704,
                        "nodeType": "Return",
                        "src": "4973:52:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1694,
                    "nodeType": "StructuredDocumentation",
                    "src": "4854:51:8",
                    "text": " @dev Returns the current beacon."
                  },
                  "id": 1706,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBeacon",
                  "nameLocation": "4919:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1695,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4928:2:8"
                  },
                  "returnParameters": {
                    "id": 1698,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1697,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "4954:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4954:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4953:9:8"
                  },
                  "scope": 1805,
                  "src": "4910:122:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1751,
                    "nodeType": "Block",
                    "src": "5161:390:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1712,
                                "name": "newBeacon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1709,
                                "src": "5175:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5185:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "5175:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5190:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5175:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5200:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5175:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1722,
                        "nodeType": "IfStatement",
                        "src": "5171:95:8",
                        "trueBody": {
                          "id": 1721,
                          "nodeType": "Block",
                          "src": "5203:63:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1718,
                                    "name": "newBeacon",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1709,
                                    "src": "5245:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1717,
                                  "name": "ERC1967InvalidBeacon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1547,
                                  "src": "5224:20:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5224:31:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1720,
                              "nodeType": "RevertStatement",
                              "src": "5217:38:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1726,
                                  "name": "BEACON_SLOT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1693,
                                  "src": "5303:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1723,
                                  "name": "StorageSlot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2282,
                                  "src": "5276:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2282_$",
                                    "typeString": "type(library StorageSlot)"
                                  }
                                },
                                "id": 1725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5288:14:8",
                                "memberName": "getAddressSlot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2204,
                                "src": "5276:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2178_storage_ptr_$",
                                  "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                }
                              },
                              "id": 1727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5276:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSlot_$2178_storage_ptr",
                                "typeString": "struct StorageSlot.AddressSlot storage pointer"
                              }
                            },
                            "id": 1728,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5316:5:8",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2177,
                            "src": "5276:45:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1729,
                            "name": "newBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1709,
                            "src": "5324:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5276:57:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1731,
                        "nodeType": "ExpressionStatement",
                        "src": "5276:57:8"
                      },
                      {
                        "assignments": [
                          1733
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1733,
                            "mutability": "mutable",
                            "name": "beaconImplementation",
                            "nameLocation": "5352:20:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1751,
                            "src": "5344:28:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1732,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5344:7:8",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1739,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1735,
                                  "name": "newBeacon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1709,
                                  "src": "5383:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1734,
                                "name": "IBeacon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1815,
                                "src": "5375:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBeacon_$1815_$",
                                  "typeString": "type(contract IBeacon)"
                                }
                              },
                              "id": 1736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5375:18:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBeacon_$1815",
                                "typeString": "contract IBeacon"
                              }
                            },
                            "id": 1737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5394:14:8",
                            "memberName": "implementation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1814,
                            "src": "5375:33:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5375:35:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5344:66:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1740,
                                "name": "beaconImplementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1733,
                                "src": "5424:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5445:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "5424:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5450:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5424:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5460:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5424:37:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1750,
                        "nodeType": "IfStatement",
                        "src": "5420:125:8",
                        "trueBody": {
                          "id": 1749,
                          "nodeType": "Block",
                          "src": "5463:82:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1746,
                                    "name": "beaconImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1733,
                                    "src": "5513:20:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1745,
                                  "name": "ERC1967InvalidImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1537,
                                  "src": "5484:28:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5484:50:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1748,
                              "nodeType": "RevertStatement",
                              "src": "5477:57:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1707,
                    "nodeType": "StructuredDocumentation",
                    "src": "5038:71:8",
                    "text": " @dev Stores a new beacon in the EIP1967 beacon slot."
                  },
                  "id": 1752,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setBeacon",
                  "nameLocation": "5123:10:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1710,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1709,
                        "mutability": "mutable",
                        "name": "newBeacon",
                        "nameLocation": "5142:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1752,
                        "src": "5134:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5134:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5133:19:8"
                  },
                  "returnParameters": {
                    "id": 1711,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5161:0:8"
                  },
                  "scope": 1805,
                  "src": "5114:437:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1789,
                    "nodeType": "Block",
                    "src": "6155:254:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1761,
                              "name": "newBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1755,
                              "src": "6176:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1760,
                            "name": "_setBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1752,
                            "src": "6165:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6165:21:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1763,
                        "nodeType": "ExpressionStatement",
                        "src": "6165:21:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1765,
                              "name": "newBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1755,
                              "src": "6216:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1764,
                            "name": "BeaconUpgraded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1528,
                            "src": "6201:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6201:25:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1767,
                        "nodeType": "EmitStatement",
                        "src": "6196:30:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1768,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1757,
                              "src": "6241:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6246:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6241:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6255:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6241:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1787,
                          "nodeType": "Block",
                          "src": "6360:43:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1784,
                                  "name": "_checkNonPayable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1804,
                                  "src": "6374:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 1785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6374:18:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1786,
                              "nodeType": "ExpressionStatement",
                              "src": "6374:18:8"
                            }
                          ]
                        },
                        "id": 1788,
                        "nodeType": "IfStatement",
                        "src": "6237:166:8",
                        "trueBody": {
                          "id": 1783,
                          "nodeType": "Block",
                          "src": "6258:96:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1776,
                                            "name": "newBeacon",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1755,
                                            "src": "6309:9:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1775,
                                          "name": "IBeacon",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1815,
                                          "src": "6301:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$1815_$",
                                            "typeString": "type(contract IBeacon)"
                                          }
                                        },
                                        "id": 1777,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6301:18:8",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IBeacon_$1815",
                                          "typeString": "contract IBeacon"
                                        }
                                      },
                                      "id": 1778,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6320:14:8",
                                      "memberName": "implementation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1814,
                                      "src": "6301:33:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 1779,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6301:35:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1780,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1757,
                                    "src": "6338:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1772,
                                    "name": "Address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2172,
                                    "src": "6272:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Address_$2172_$",
                                      "typeString": "type(library Address)"
                                    }
                                  },
                                  "id": 1774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6280:20:8",
                                  "memberName": "functionDelegateCall",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2091,
                                  "src": "6272:28:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (address,bytes memory) returns (bytes memory)"
                                  }
                                },
                                "id": 1781,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6272:71:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1782,
                              "nodeType": "ExpressionStatement",
                              "src": "6272:71:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1753,
                    "nodeType": "StructuredDocumentation",
                    "src": "5557:514:8",
                    "text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
                  },
                  "id": 1790,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "upgradeBeaconToAndCall",
                  "nameLocation": "6085:22:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1755,
                        "mutability": "mutable",
                        "name": "newBeacon",
                        "nameLocation": "6116:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1790,
                        "src": "6108:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6108:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1757,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "6140:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1790,
                        "src": "6127:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1756,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6127:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6107:38:8"
                  },
                  "returnParameters": {
                    "id": 1759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6155:0:8"
                  },
                  "scope": 1805,
                  "src": "6076:333:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1803,
                    "nodeType": "Block",
                    "src": "6634:86:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1794,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6648:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6652:5:8",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "6648:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6660:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6648:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1802,
                        "nodeType": "IfStatement",
                        "src": "6644:70:8",
                        "trueBody": {
                          "id": 1801,
                          "nodeType": "Block",
                          "src": "6663:51:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1798,
                                  "name": "ERC1967NonPayable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1550,
                                  "src": "6684:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6684:19:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1800,
                              "nodeType": "RevertStatement",
                              "src": "6677:26:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1791,
                    "nodeType": "StructuredDocumentation",
                    "src": "6415:178:8",
                    "text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
                  },
                  "id": 1804,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkNonPayable",
                  "nameLocation": "6607:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1792,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6623:2:8"
                  },
                  "returnParameters": {
                    "id": 1793,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6634:0:8"
                  },
                  "scope": 1805,
                  "src": "6598:122:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1806,
              "src": "449:6273:8",
              "usedErrors": [
                1537,
                1542,
                1547,
                1550
              ],
              "usedEvents": [
                1516,
                1523,
                1528
              ]
            }
          ],
          "src": "114:6609:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
          "exportedSymbols": {
            "IBeacon": [
              1815
            ]
          },
          "id": 1816,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1807,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:9"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBeacon",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1808,
                "nodeType": "StructuredDocumentation",
                "src": "134:79:9",
                "text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
              },
              "fullyImplemented": false,
              "id": 1815,
              "linearizedBaseContracts": [
                1815
              ],
              "name": "IBeacon",
              "nameLocation": "224:7:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1809,
                    "nodeType": "StructuredDocumentation",
                    "src": "238:168:9",
                    "text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
                  },
                  "functionSelector": "5c60da1b",
                  "id": 1814,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "implementation",
                  "nameLocation": "420:14:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1810,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "434:2:9"
                  },
                  "returnParameters": {
                    "id": 1813,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1812,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1814,
                        "src": "460:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1811,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "460:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "459:9:9"
                  },
                  "scope": 1815,
                  "src": "411:58:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1816,
              "src": "214:257:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "108:364:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1893
            ]
          },
          "id": 1894,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1817,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1818,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:10",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 1893,
              "linearizedBaseContracts": [
                1893
              ],
              "name": "IERC20",
              "nameLocation": "213:6:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1819,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:10",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1827,
                  "name": "Transfer",
                  "nameLocation": "395:8:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1821,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "404:20:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1820,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1823,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "426:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1822,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1825,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "446:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1824,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:10"
                  },
                  "src": "389:72:10"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1828,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:10",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1836,
                  "name": "Approval",
                  "nameLocation": "626:8:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1835,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1830,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1836,
                        "src": "635:21:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1829,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1832,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1836,
                        "src": "658:23:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1831,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1834,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1836,
                        "src": "683:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1833,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:10"
                  },
                  "src": "620:78:10"
                },
                {
                  "documentation": {
                    "id": 1837,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:10",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1842,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1838,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:10"
                  },
                  "returnParameters": {
                    "id": 1841,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1840,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "820:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1839,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:10"
                  },
                  "scope": 1893,
                  "src": "774:55:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1843,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:10",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1850,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1846,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1845,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1850,
                        "src": "930:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1844,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:10"
                  },
                  "returnParameters": {
                    "id": 1849,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1848,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1850,
                        "src": "970:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1847,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:10"
                  },
                  "scope": 1893,
                  "src": "911:68:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1851,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:10",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1860,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1856,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1853,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1860,
                        "src": "1221:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1852,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1855,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1860,
                        "src": "1233:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1854,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:10"
                  },
                  "returnParameters": {
                    "id": 1859,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1858,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1860,
                        "src": "1266:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1857,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:10"
                  },
                  "scope": 1893,
                  "src": "1203:69:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1861,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:10",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1870,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1866,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1863,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1870,
                        "src": "1566:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1862,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1865,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1870,
                        "src": "1581:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1864,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:10"
                  },
                  "returnParameters": {
                    "id": 1869,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1868,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1870,
                        "src": "1621:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1867,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:10"
                  },
                  "scope": 1893,
                  "src": "1547:83:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1871,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:10",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1880,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1873,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1880,
                        "src": "2325:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1875,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1880,
                        "src": "2342:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:10"
                  },
                  "returnParameters": {
                    "id": 1879,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1878,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1880,
                        "src": "2375:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1877,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:10"
                  },
                  "scope": 1893,
                  "src": "2308:73:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1881,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:10",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1892,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1883,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1892,
                        "src": "2711:12:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1882,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1885,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1892,
                        "src": "2725:10:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1884,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1887,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1892,
                        "src": "2737:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1886,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:10"
                  },
                  "returnParameters": {
                    "id": 1891,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1890,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1892,
                        "src": "2770:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1889,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:10"
                  },
                  "scope": 1893,
                  "src": "2689:87:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1894,
              "src": "203:2575:10",
              "usedErrors": [],
              "usedEvents": [
                1827,
                1836
              ]
            }
          ],
          "src": "106:2673:10"
        },
        "id": 10
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1893
            ],
            "IERC20Metadata": [
              1919
            ]
          },
          "id": 1920,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1895,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1897,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1920,
              "sourceUnit": 1894,
              "src": "151:37:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1896,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1893,
                    "src": "159:6:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1899,
                    "name": "IERC20",
                    "nameLocations": [
                      "305:6:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1893,
                    "src": "305:6:11"
                  },
                  "id": 1900,
                  "nodeType": "InheritanceSpecifier",
                  "src": "305:6:11"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1898,
                "nodeType": "StructuredDocumentation",
                "src": "190:86:11",
                "text": " @dev Interface for the optional metadata functions from the ERC20 standard."
              },
              "fullyImplemented": false,
              "id": 1919,
              "linearizedBaseContracts": [
                1919,
                1893
              ],
              "name": "IERC20Metadata",
              "nameLocation": "287:14:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1901,
                    "nodeType": "StructuredDocumentation",
                    "src": "318:54:11",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1906,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "386:4:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1902,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "390:2:11"
                  },
                  "returnParameters": {
                    "id": 1905,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1904,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1906,
                        "src": "416:13:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1903,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "416:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "415:15:11"
                  },
                  "scope": 1919,
                  "src": "377:54:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1907,
                    "nodeType": "StructuredDocumentation",
                    "src": "437:56:11",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1912,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "507:6:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1908,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "513:2:11"
                  },
                  "returnParameters": {
                    "id": 1911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1910,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1912,
                        "src": "539:13:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1909,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:15:11"
                  },
                  "scope": 1919,
                  "src": "498:56:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1913,
                    "nodeType": "StructuredDocumentation",
                    "src": "560:65:11",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1918,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "639:8:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1914,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "647:2:11"
                  },
                  "returnParameters": {
                    "id": 1917,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1916,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1918,
                        "src": "673:5:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1915,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "673:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "672:7:11"
                  },
                  "scope": 1919,
                  "src": "630:50:11",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1920,
              "src": "277:405:11",
              "usedErrors": [],
              "usedEvents": [
                1827,
                1836
              ]
            }
          ],
          "src": "125:558:11"
        },
        "id": 11
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
          "exportedSymbols": {
            "Address": [
              2172
            ]
          },
          "id": 2173,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1921,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:12"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Address",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1922,
                "nodeType": "StructuredDocumentation",
                "src": "127:67:12",
                "text": " @dev Collection of functions related to the address type"
              },
              "fullyImplemented": true,
              "id": 2172,
              "linearizedBaseContracts": [
                2172
              ],
              "name": "Address",
              "nameLocation": "203:7:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1923,
                    "nodeType": "StructuredDocumentation",
                    "src": "217:94:12",
                    "text": " @dev The ETH balance of the account is not enough to perform the operation."
                  },
                  "errorSelector": "cd786059",
                  "id": 1927,
                  "name": "AddressInsufficientBalance",
                  "nameLocation": "322:26:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1926,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1925,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "357:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1927,
                        "src": "349:15:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1924,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "349:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "348:17:12"
                  },
                  "src": "316:50:12"
                },
                {
                  "documentation": {
                    "id": 1928,
                    "nodeType": "StructuredDocumentation",
                    "src": "372:75:12",
                    "text": " @dev There's no code at `target` (it is not a contract)."
                  },
                  "errorSelector": "9996b315",
                  "id": 1932,
                  "name": "AddressEmptyCode",
                  "nameLocation": "458:16:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1930,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "483:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1932,
                        "src": "475:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1929,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "475:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "474:16:12"
                  },
                  "src": "452:39:12"
                },
                {
                  "documentation": {
                    "id": 1933,
                    "nodeType": "StructuredDocumentation",
                    "src": "497:89:12",
                    "text": " @dev A call to an address target failed. The target may have reverted."
                  },
                  "errorSelector": "1425ea42",
                  "id": 1935,
                  "name": "FailedInnerCall",
                  "nameLocation": "597:15:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1934,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "612:2:12"
                  },
                  "src": "591:24:12"
                },
                {
                  "body": {
                    "id": 1975,
                    "nodeType": "Block",
                    "src": "1602:260:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1945,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1624:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Address_$2172",
                                    "typeString": "library Address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Address_$2172",
                                    "typeString": "library Address"
                                  }
                                ],
                                "id": 1944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1616:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1943,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1616:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1616:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1630:7:12",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "1616:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1948,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1940,
                            "src": "1640:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1616:30:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1958,
                        "nodeType": "IfStatement",
                        "src": "1612:109:12",
                        "trueBody": {
                          "id": 1957,
                          "nodeType": "Block",
                          "src": "1648:73:12",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1953,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "1704:4:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Address_$2172",
                                          "typeString": "library Address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Address_$2172",
                                          "typeString": "library Address"
                                        }
                                      ],
                                      "id": 1952,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1696:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1951,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1696:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1954,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1696:13:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1950,
                                  "name": "AddressInsufficientBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1927,
                                  "src": "1669:26:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1669:41:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1956,
                              "nodeType": "RevertStatement",
                              "src": "1662:48:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1960,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1960,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1737:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1975,
                            "src": "1732:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1959,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1732:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1967,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1780:2:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1961,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1938,
                                "src": "1750:9:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1760:4:12",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1750:14:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1963,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1940,
                                "src": "1772:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1750:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1750:33:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1731:52:12"
                      },
                      {
                        "condition": {
                          "id": 1969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1797:8:12",
                          "subExpression": {
                            "id": 1968,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1960,
                            "src": "1798:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1974,
                        "nodeType": "IfStatement",
                        "src": "1793:63:12",
                        "trueBody": {
                          "id": 1973,
                          "nodeType": "Block",
                          "src": "1807:49:12",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1970,
                                  "name": "FailedInnerCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1935,
                                  "src": "1828:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1828:17:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1972,
                              "nodeType": "RevertStatement",
                              "src": "1821:24:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1936,
                    "nodeType": "StructuredDocumentation",
                    "src": "621:905:12",
                    "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                  },
                  "id": 1976,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nameLocation": "1540:9:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1941,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1938,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1566:9:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1976,
                        "src": "1550:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1937,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1550:15:12",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1940,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1585:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1976,
                        "src": "1577:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1939,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1577:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1549:43:12"
                  },
                  "returnParameters": {
                    "id": 1942,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1602:0:12"
                  },
                  "scope": 2172,
                  "src": "1531:331:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1992,
                    "nodeType": "Block",
                    "src": "2794:62:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1987,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1979,
                              "src": "2833:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1988,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1981,
                              "src": "2841:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2847:1:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1986,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2039,
                            "src": "2811:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
                            }
                          },
                          "id": 1990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2811:38:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1985,
                        "id": 1991,
                        "nodeType": "Return",
                        "src": "2804:45:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1977,
                    "nodeType": "StructuredDocumentation",
                    "src": "1868:832:12",
                    "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
                  },
                  "id": 1993,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "2714:12:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1982,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1979,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "2735:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1993,
                        "src": "2727:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1978,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1981,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2756:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1993,
                        "src": "2743:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1980,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2743:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2726:35:12"
                  },
                  "returnParameters": {
                    "id": 1985,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1984,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1993,
                        "src": "2780:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1983,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2780:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2779:14:12"
                  },
                  "scope": 2172,
                  "src": "2705:151:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2038,
                    "nodeType": "Block",
                    "src": "3293:279:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2007,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3315:4:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Address_$2172",
                                    "typeString": "library Address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Address_$2172",
                                    "typeString": "library Address"
                                  }
                                ],
                                "id": 2006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3307:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2005,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3307:7:12",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3307:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3321:7:12",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "3307:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2010,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "3331:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3307:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2020,
                        "nodeType": "IfStatement",
                        "src": "3303:108:12",
                        "trueBody": {
                          "id": 2019,
                          "nodeType": "Block",
                          "src": "3338:73:12",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 2015,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967268,
                                        "src": "3394:4:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Address_$2172",
                                          "typeString": "library Address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Address_$2172",
                                          "typeString": "library Address"
                                        }
                                      ],
                                      "id": 2014,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3386:7:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 2013,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3386:7:12",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 2016,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3386:13:12",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 2012,
                                  "name": "AddressInsufficientBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1927,
                                  "src": "3359:26:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 2017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3359:41:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2018,
                              "nodeType": "RevertStatement",
                              "src": "3352:48:12"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2022,
                          2024
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2022,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3426:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2038,
                            "src": "3421:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2021,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3421:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2024,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "3448:10:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2038,
                            "src": "3435:23:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2023,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3435:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2031,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2029,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1998,
                              "src": "3488:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 2025,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1996,
                                "src": "3462:6:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2026,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3469:4:12",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3462:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2027,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2000,
                                "src": "3481:5:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3462:25:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3462:31:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3420:73:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2033,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1996,
                              "src": "3537:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2034,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2022,
                              "src": "3545:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 2035,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2024,
                              "src": "3554:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2032,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2131,
                            "src": "3510:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 2036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3510:55:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 2004,
                        "id": 2037,
                        "nodeType": "Return",
                        "src": "3503:62:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1994,
                    "nodeType": "StructuredDocumentation",
                    "src": "2862:313:12",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
                  },
                  "id": 2039,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "3189:21:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2001,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1996,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3219:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2039,
                        "src": "3211:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1995,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3211:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1998,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3240:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2039,
                        "src": "3227:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1997,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3227:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2000,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3254:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2039,
                        "src": "3246:13:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1999,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3246:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3210:50:12"
                  },
                  "returnParameters": {
                    "id": 2004,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2003,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2039,
                        "src": "3279:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2002,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3279:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3278:14:12"
                  },
                  "scope": 2172,
                  "src": "3180:392:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2064,
                    "nodeType": "Block",
                    "src": "3811:154:12",
                    "statements": [
                      {
                        "assignments": [
                          2050,
                          2052
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2050,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3827:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2064,
                            "src": "3822:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2049,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3822:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2052,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "3849:10:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2064,
                            "src": "3836:23:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2051,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3836:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2057,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2055,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2044,
                              "src": "3881:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 2053,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2042,
                              "src": "3863:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3870:10:12",
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "3863:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 2056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3863:23:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3821:65:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2059,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2042,
                              "src": "3930:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2060,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2050,
                              "src": "3938:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 2061,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2052,
                              "src": "3947:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2058,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2131,
                            "src": "3903:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 2062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3903:55:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 2048,
                        "id": 2063,
                        "nodeType": "Return",
                        "src": "3896:62:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2040,
                    "nodeType": "StructuredDocumentation",
                    "src": "3578:128:12",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
                  },
                  "id": 2065,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "3720:18:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2045,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2042,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3747:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2065,
                        "src": "3739:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2041,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3739:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2044,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3768:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2065,
                        "src": "3755:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2043,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3755:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3738:35:12"
                  },
                  "returnParameters": {
                    "id": 2048,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2047,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2065,
                        "src": "3797:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2046,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3797:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3796:14:12"
                  },
                  "scope": 2172,
                  "src": "3711:254:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2090,
                    "nodeType": "Block",
                    "src": "4203:156:12",
                    "statements": [
                      {
                        "assignments": [
                          2076,
                          2078
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2076,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4219:7:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2090,
                            "src": "4214:12:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2075,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4214:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2078,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "4241:10:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 2090,
                            "src": "4228:23:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2077,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4228:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2083,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2081,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2070,
                              "src": "4275:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 2079,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2068,
                              "src": "4255:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4262:12:12",
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "4255:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 2082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4255:25:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4213:67:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2085,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2068,
                              "src": "4324:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2086,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2076,
                              "src": "4332:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 2087,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2078,
                              "src": "4341:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2084,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2131,
                            "src": "4297:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 2088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4297:55:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 2074,
                        "id": 2089,
                        "nodeType": "Return",
                        "src": "4290:62:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2066,
                    "nodeType": "StructuredDocumentation",
                    "src": "3971:130:12",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
                  },
                  "id": 2091,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "4115:20:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2068,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4144:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2091,
                        "src": "4136:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4136:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2070,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4165:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2091,
                        "src": "4152:17:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2069,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4152:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4135:35:12"
                  },
                  "returnParameters": {
                    "id": 2074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2073,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2091,
                        "src": "4189:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2072,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4189:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4188:14:12"
                  },
                  "scope": 2172,
                  "src": "4106:253:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2130,
                    "nodeType": "Block",
                    "src": "4783:424:12",
                    "statements": [
                      {
                        "condition": {
                          "id": 2104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4797:8:12",
                          "subExpression": {
                            "id": 2103,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2096,
                            "src": "4798:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2128,
                          "nodeType": "Block",
                          "src": "4857:344:12",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2110,
                                      "name": "returndata",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2098,
                                      "src": "5045:10:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 2111,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5056:6:12",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "5045:17:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 2112,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5066:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5045:22:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2114,
                                        "name": "target",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2094,
                                        "src": "5071:6:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 2115,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5078:4:12",
                                      "memberName": "code",
                                      "nodeType": "MemberAccess",
                                      "src": "5071:11:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 2116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5083:6:12",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "5071:18:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 2117,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5093:1:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5071:23:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "5045:49:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2125,
                              "nodeType": "IfStatement",
                              "src": "5041:119:12",
                              "trueBody": {
                                "id": 2124,
                                "nodeType": "Block",
                                "src": "5096:64:12",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 2121,
                                          "name": "target",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2094,
                                          "src": "5138:6:12",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2120,
                                        "name": "AddressEmptyCode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1932,
                                        "src": "5121:16:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                          "typeString": "function (address) pure returns (error)"
                                        }
                                      },
                                      "id": 2122,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5121:24:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 2123,
                                    "nodeType": "RevertStatement",
                                    "src": "5114:31:12"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 2126,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2098,
                                "src": "5180:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 2102,
                              "id": 2127,
                              "nodeType": "Return",
                              "src": "5173:17:12"
                            }
                          ]
                        },
                        "id": 2129,
                        "nodeType": "IfStatement",
                        "src": "4793:408:12",
                        "trueBody": {
                          "id": 2109,
                          "nodeType": "Block",
                          "src": "4807:44:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2106,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2098,
                                    "src": "4829:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2105,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2171,
                                  "src": "4821:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) pure"
                                  }
                                },
                                "id": 2107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4821:19:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2108,
                              "nodeType": "ExpressionStatement",
                              "src": "4821:19:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2092,
                    "nodeType": "StructuredDocumentation",
                    "src": "4365:255:12",
                    "text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
                  },
                  "id": 2131,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResultFromTarget",
                  "nameLocation": "4634:26:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2094,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4678:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2131,
                        "src": "4670:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2093,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4670:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2096,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "4699:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2131,
                        "src": "4694:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2095,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4694:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2098,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "4729:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2131,
                        "src": "4716:23:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2097,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4716:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4660:85:12"
                  },
                  "returnParameters": {
                    "id": 2102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2101,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2131,
                        "src": "4769:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2100,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4769:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4768:14:12"
                  },
                  "scope": 2172,
                  "src": "4625:582:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2152,
                    "nodeType": "Block",
                    "src": "5509:122:12",
                    "statements": [
                      {
                        "condition": {
                          "id": 2142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5523:8:12",
                          "subExpression": {
                            "id": 2141,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2134,
                            "src": "5524:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2150,
                          "nodeType": "Block",
                          "src": "5583:42:12",
                          "statements": [
                            {
                              "expression": {
                                "id": 2148,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2136,
                                "src": "5604:10:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 2140,
                              "id": 2149,
                              "nodeType": "Return",
                              "src": "5597:17:12"
                            }
                          ]
                        },
                        "id": 2151,
                        "nodeType": "IfStatement",
                        "src": "5519:106:12",
                        "trueBody": {
                          "id": 2147,
                          "nodeType": "Block",
                          "src": "5533:44:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2144,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2136,
                                    "src": "5555:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2143,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2171,
                                  "src": "5547:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) pure"
                                  }
                                },
                                "id": 2145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5547:19:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2146,
                              "nodeType": "ExpressionStatement",
                              "src": "5547:19:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2132,
                    "nodeType": "StructuredDocumentation",
                    "src": "5213:189:12",
                    "text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
                  },
                  "id": 2153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResult",
                  "nameLocation": "5416:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2137,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2134,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "5438:7:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "5433:12:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2133,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5433:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2136,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "5460:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "5447:23:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2135,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5447:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5432:39:12"
                  },
                  "returnParameters": {
                    "id": 2140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2139,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2153,
                        "src": "5495:12:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2138,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5495:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5494:14:12"
                  },
                  "scope": 2172,
                  "src": "5407:224:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2170,
                    "nodeType": "Block",
                    "src": "5798:461:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2159,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2156,
                              "src": "5874:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 2160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5885:6:12",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5874:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5894:1:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5874:21:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2168,
                          "nodeType": "Block",
                          "src": "6204:49:12",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2165,
                                  "name": "FailedInnerCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1935,
                                  "src": "6225:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 2166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6225:17:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2167,
                              "nodeType": "RevertStatement",
                              "src": "6218:24:12"
                            }
                          ]
                        },
                        "id": 2169,
                        "nodeType": "IfStatement",
                        "src": "5870:383:12",
                        "trueBody": {
                          "id": 2164,
                          "nodeType": "Block",
                          "src": "5897:301:12",
                          "statements": [
                            {
                              "AST": {
                                "nativeSrc": "6055:133:12",
                                "nodeType": "YulBlock",
                                "src": "6055:133:12",
                                "statements": [
                                  {
                                    "nativeSrc": "6073:40:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6073:40:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nativeSrc": "6102:10:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6102:10:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "6096:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6096:5:12"
                                      },
                                      "nativeSrc": "6096:17:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6096:17:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nativeSrc": "6077:15:12",
                                        "nodeType": "YulTypedName",
                                        "src": "6077:15:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6141:2:12",
                                              "nodeType": "YulLiteral",
                                              "src": "6141:2:12",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nativeSrc": "6145:10:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "6145:10:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "6137:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "6137:3:12"
                                          },
                                          "nativeSrc": "6137:19:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6137:19:12"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nativeSrc": "6158:15:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6158:15:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "6130:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6130:6:12"
                                      },
                                      "nativeSrc": "6130:44:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6130:44:12"
                                    },
                                    "nativeSrc": "6130:44:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6130:44:12"
                                  }
                                ]
                              },
                              "documentation": "@solidity memory-safe-assembly",
                              "evmVersion": "cancun",
                              "externalReferences": [
                                {
                                  "declaration": 2156,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "6102:10:12",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 2156,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "6145:10:12",
                                  "valueSize": 1
                                }
                              ],
                              "id": 2163,
                              "nodeType": "InlineAssembly",
                              "src": "6046:142:12"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2154,
                    "nodeType": "StructuredDocumentation",
                    "src": "5637:101:12",
                    "text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
                  },
                  "id": 2171,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revert",
                  "nameLocation": "5752:7:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2157,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2156,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "5773:10:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 2171,
                        "src": "5760:23:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2155,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5760:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5759:25:12"
                  },
                  "returnParameters": {
                    "id": 2158,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5798:0:12"
                  },
                  "scope": 2172,
                  "src": "5743:516:12",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 2173,
              "src": "195:6066:12",
              "usedErrors": [
                1927,
                1932,
                1935
              ],
              "usedEvents": []
            }
          ],
          "src": "101:6161:12"
        },
        "id": 12
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
          "exportedSymbols": {
            "StorageSlot": [
              2282
            ]
          },
          "id": 2283,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2174,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "193:24:13"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "StorageSlot",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2175,
                "nodeType": "StructuredDocumentation",
                "src": "219:1025:13",
                "text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
              },
              "fullyImplemented": true,
              "id": 2282,
              "linearizedBaseContracts": [
                2282
              ],
              "name": "StorageSlot",
              "nameLocation": "1253:11:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "StorageSlot.AddressSlot",
                  "id": 2178,
                  "members": [
                    {
                      "constant": false,
                      "id": 2177,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1308:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2178,
                      "src": "1300:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2176,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1300:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "AddressSlot",
                  "nameLocation": "1278:11:13",
                  "nodeType": "StructDefinition",
                  "scope": 2282,
                  "src": "1271:49:13",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.BooleanSlot",
                  "id": 2181,
                  "members": [
                    {
                      "constant": false,
                      "id": 2180,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1360:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2181,
                      "src": "1355:10:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2179,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1355:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BooleanSlot",
                  "nameLocation": "1333:11:13",
                  "nodeType": "StructDefinition",
                  "scope": 2282,
                  "src": "1326:46:13",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.Bytes32Slot",
                  "id": 2184,
                  "members": [
                    {
                      "constant": false,
                      "id": 2183,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1415:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2184,
                      "src": "1407:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2182,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1407:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Bytes32Slot",
                  "nameLocation": "1385:11:13",
                  "nodeType": "StructDefinition",
                  "scope": 2282,
                  "src": "1378:49:13",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.Uint256Slot",
                  "id": 2187,
                  "members": [
                    {
                      "constant": false,
                      "id": 2186,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1470:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2187,
                      "src": "1462:13:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2185,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1462:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Uint256Slot",
                  "nameLocation": "1440:11:13",
                  "nodeType": "StructDefinition",
                  "scope": 2282,
                  "src": "1433:49:13",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.StringSlot",
                  "id": 2190,
                  "members": [
                    {
                      "constant": false,
                      "id": 2189,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1523:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2190,
                      "src": "1516:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2188,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1516:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "StringSlot",
                  "nameLocation": "1495:10:13",
                  "nodeType": "StructDefinition",
                  "scope": 2282,
                  "src": "1488:47:13",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.BytesSlot",
                  "id": 2193,
                  "members": [
                    {
                      "constant": false,
                      "id": 2192,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1574:5:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 2193,
                      "src": "1568:11:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2191,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1568:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BytesSlot",
                  "nameLocation": "1548:9:13",
                  "nodeType": "StructDefinition",
                  "scope": 2282,
                  "src": "1541:45:13",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2203,
                    "nodeType": "Block",
                    "src": "1768:106:13",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "1830:38:13",
                          "nodeType": "YulBlock",
                          "src": "1830:38:13",
                          "statements": [
                            {
                              "nativeSrc": "1844:14:13",
                              "nodeType": "YulAssignment",
                              "src": "1844:14:13",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "1854:4:13",
                                "nodeType": "YulIdentifier",
                                "src": "1854:4:13"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "1844:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "1844:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 2200,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "1844:6:13",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2196,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1854:4:13",
                            "valueSize": 1
                          }
                        ],
                        "id": 2202,
                        "nodeType": "InlineAssembly",
                        "src": "1821:47:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2194,
                    "nodeType": "StructuredDocumentation",
                    "src": "1592:87:13",
                    "text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
                  },
                  "id": 2204,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAddressSlot",
                  "nameLocation": "1693:14:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2196,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "1716:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2204,
                        "src": "1708:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2195,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1708:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1707:14:13"
                  },
                  "returnParameters": {
                    "id": 2201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2200,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1765:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2204,
                        "src": "1745:21:13",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSlot_$2178_storage_ptr",
                          "typeString": "struct StorageSlot.AddressSlot"
                        },
                        "typeName": {
                          "id": 2199,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2198,
                            "name": "AddressSlot",
                            "nameLocations": [
                              "1745:11:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2178,
                            "src": "1745:11:13"
                          },
                          "referencedDeclaration": 2178,
                          "src": "1745:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$2178_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1744:23:13"
                  },
                  "scope": 2282,
                  "src": "1684:190:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2214,
                    "nodeType": "Block",
                    "src": "2056:106:13",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2118:38:13",
                          "nodeType": "YulBlock",
                          "src": "2118:38:13",
                          "statements": [
                            {
                              "nativeSrc": "2132:14:13",
                              "nodeType": "YulAssignment",
                              "src": "2132:14:13",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "2142:4:13",
                                "nodeType": "YulIdentifier",
                                "src": "2142:4:13"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "2132:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2132:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 2211,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2132:6:13",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2207,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2142:4:13",
                            "valueSize": 1
                          }
                        ],
                        "id": 2213,
                        "nodeType": "InlineAssembly",
                        "src": "2109:47:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2205,
                    "nodeType": "StructuredDocumentation",
                    "src": "1880:87:13",
                    "text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
                  },
                  "id": 2215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBooleanSlot",
                  "nameLocation": "1981:14:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2207,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2004:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2215,
                        "src": "1996:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2206,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1996:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1995:14:13"
                  },
                  "returnParameters": {
                    "id": 2212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2211,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2053:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2215,
                        "src": "2033:21:13",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BooleanSlot_$2181_storage_ptr",
                          "typeString": "struct StorageSlot.BooleanSlot"
                        },
                        "typeName": {
                          "id": 2210,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2209,
                            "name": "BooleanSlot",
                            "nameLocations": [
                              "2033:11:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2181,
                            "src": "2033:11:13"
                          },
                          "referencedDeclaration": 2181,
                          "src": "2033:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BooleanSlot_$2181_storage_ptr",
                            "typeString": "struct StorageSlot.BooleanSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2032:23:13"
                  },
                  "scope": 2282,
                  "src": "1972:190:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2225,
                    "nodeType": "Block",
                    "src": "2344:106:13",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2406:38:13",
                          "nodeType": "YulBlock",
                          "src": "2406:38:13",
                          "statements": [
                            {
                              "nativeSrc": "2420:14:13",
                              "nodeType": "YulAssignment",
                              "src": "2420:14:13",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "2430:4:13",
                                "nodeType": "YulIdentifier",
                                "src": "2430:4:13"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "2420:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2420:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 2222,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2420:6:13",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2218,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2430:4:13",
                            "valueSize": 1
                          }
                        ],
                        "id": 2224,
                        "nodeType": "InlineAssembly",
                        "src": "2397:47:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2216,
                    "nodeType": "StructuredDocumentation",
                    "src": "2168:87:13",
                    "text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
                  },
                  "id": 2226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBytes32Slot",
                  "nameLocation": "2269:14:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2218,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2292:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2226,
                        "src": "2284:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2217,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2284:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2283:14:13"
                  },
                  "returnParameters": {
                    "id": 2223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2222,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2341:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2226,
                        "src": "2321:21:13",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Slot_$2184_storage_ptr",
                          "typeString": "struct StorageSlot.Bytes32Slot"
                        },
                        "typeName": {
                          "id": 2221,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2220,
                            "name": "Bytes32Slot",
                            "nameLocations": [
                              "2321:11:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2184,
                            "src": "2321:11:13"
                          },
                          "referencedDeclaration": 2184,
                          "src": "2321:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bytes32Slot_$2184_storage_ptr",
                            "typeString": "struct StorageSlot.Bytes32Slot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2320:23:13"
                  },
                  "scope": 2282,
                  "src": "2260:190:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2236,
                    "nodeType": "Block",
                    "src": "2632:106:13",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2694:38:13",
                          "nodeType": "YulBlock",
                          "src": "2694:38:13",
                          "statements": [
                            {
                              "nativeSrc": "2708:14:13",
                              "nodeType": "YulAssignment",
                              "src": "2708:14:13",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "2718:4:13",
                                "nodeType": "YulIdentifier",
                                "src": "2718:4:13"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "2708:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2708:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 2233,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2708:6:13",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2229,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2718:4:13",
                            "valueSize": 1
                          }
                        ],
                        "id": 2235,
                        "nodeType": "InlineAssembly",
                        "src": "2685:47:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2227,
                    "nodeType": "StructuredDocumentation",
                    "src": "2456:87:13",
                    "text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
                  },
                  "id": 2237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUint256Slot",
                  "nameLocation": "2557:14:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2229,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2580:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2237,
                        "src": "2572:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2228,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2572:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2571:14:13"
                  },
                  "returnParameters": {
                    "id": 2234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2233,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2629:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2237,
                        "src": "2609:21:13",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Uint256Slot_$2187_storage_ptr",
                          "typeString": "struct StorageSlot.Uint256Slot"
                        },
                        "typeName": {
                          "id": 2232,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2231,
                            "name": "Uint256Slot",
                            "nameLocations": [
                              "2609:11:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2187,
                            "src": "2609:11:13"
                          },
                          "referencedDeclaration": 2187,
                          "src": "2609:11:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Uint256Slot_$2187_storage_ptr",
                            "typeString": "struct StorageSlot.Uint256Slot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2608:23:13"
                  },
                  "scope": 2282,
                  "src": "2548:190:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2247,
                    "nodeType": "Block",
                    "src": "2917:106:13",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2979:38:13",
                          "nodeType": "YulBlock",
                          "src": "2979:38:13",
                          "statements": [
                            {
                              "nativeSrc": "2993:14:13",
                              "nodeType": "YulAssignment",
                              "src": "2993:14:13",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "3003:4:13",
                                "nodeType": "YulIdentifier",
                                "src": "3003:4:13"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "2993:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "2993:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 2244,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2993:6:13",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2240,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3003:4:13",
                            "valueSize": 1
                          }
                        ],
                        "id": 2246,
                        "nodeType": "InlineAssembly",
                        "src": "2970:47:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2238,
                    "nodeType": "StructuredDocumentation",
                    "src": "2744:86:13",
                    "text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
                  },
                  "id": 2248,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStringSlot",
                  "nameLocation": "2844:13:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2240,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2866:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2248,
                        "src": "2858:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2239,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2858:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2857:14:13"
                  },
                  "returnParameters": {
                    "id": 2245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2244,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2914:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2248,
                        "src": "2895:20:13",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StringSlot_$2190_storage_ptr",
                          "typeString": "struct StorageSlot.StringSlot"
                        },
                        "typeName": {
                          "id": 2243,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2242,
                            "name": "StringSlot",
                            "nameLocations": [
                              "2895:10:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2190,
                            "src": "2895:10:13"
                          },
                          "referencedDeclaration": 2190,
                          "src": "2895:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StringSlot_$2190_storage_ptr",
                            "typeString": "struct StorageSlot.StringSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2894:22:13"
                  },
                  "scope": 2282,
                  "src": "2835:188:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2258,
                    "nodeType": "Block",
                    "src": "3225:112:13",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "3287:44:13",
                          "nodeType": "YulBlock",
                          "src": "3287:44:13",
                          "statements": [
                            {
                              "nativeSrc": "3301:20:13",
                              "nodeType": "YulAssignment",
                              "src": "3301:20:13",
                              "value": {
                                "name": "store.slot",
                                "nativeSrc": "3311:10:13",
                                "nodeType": "YulIdentifier",
                                "src": "3311:10:13"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "3301:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3301:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 2255,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3301:6:13",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2251,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3311:10:13",
                            "suffix": "slot",
                            "valueSize": 1
                          }
                        ],
                        "id": 2257,
                        "nodeType": "InlineAssembly",
                        "src": "3278:53:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2249,
                    "nodeType": "StructuredDocumentation",
                    "src": "3029:101:13",
                    "text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
                  },
                  "id": 2259,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStringSlot",
                  "nameLocation": "3144:13:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2251,
                        "mutability": "mutable",
                        "name": "store",
                        "nameLocation": "3173:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "3158:20:13",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2250,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3158:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3157:22:13"
                  },
                  "returnParameters": {
                    "id": 2256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2255,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3222:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2259,
                        "src": "3203:20:13",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StringSlot_$2190_storage_ptr",
                          "typeString": "struct StorageSlot.StringSlot"
                        },
                        "typeName": {
                          "id": 2254,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2253,
                            "name": "StringSlot",
                            "nameLocations": [
                              "3203:10:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2190,
                            "src": "3203:10:13"
                          },
                          "referencedDeclaration": 2190,
                          "src": "3203:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StringSlot_$2190_storage_ptr",
                            "typeString": "struct StorageSlot.StringSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3202:22:13"
                  },
                  "scope": 2282,
                  "src": "3135:202:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2269,
                    "nodeType": "Block",
                    "src": "3513:106:13",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "3575:38:13",
                          "nodeType": "YulBlock",
                          "src": "3575:38:13",
                          "statements": [
                            {
                              "nativeSrc": "3589:14:13",
                              "nodeType": "YulAssignment",
                              "src": "3589:14:13",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "3599:4:13",
                                "nodeType": "YulIdentifier",
                                "src": "3599:4:13"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "3589:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3589:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 2266,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3589:6:13",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2262,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3599:4:13",
                            "valueSize": 1
                          }
                        ],
                        "id": 2268,
                        "nodeType": "InlineAssembly",
                        "src": "3566:47:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2260,
                    "nodeType": "StructuredDocumentation",
                    "src": "3343:85:13",
                    "text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
                  },
                  "id": 2270,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBytesSlot",
                  "nameLocation": "3442:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2262,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "3463:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2270,
                        "src": "3455:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2261,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3455:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3454:14:13"
                  },
                  "returnParameters": {
                    "id": 2267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2266,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3510:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2270,
                        "src": "3492:19:13",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BytesSlot_$2193_storage_ptr",
                          "typeString": "struct StorageSlot.BytesSlot"
                        },
                        "typeName": {
                          "id": 2265,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2264,
                            "name": "BytesSlot",
                            "nameLocations": [
                              "3492:9:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2193,
                            "src": "3492:9:13"
                          },
                          "referencedDeclaration": 2193,
                          "src": "3492:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BytesSlot_$2193_storage_ptr",
                            "typeString": "struct StorageSlot.BytesSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3491:21:13"
                  },
                  "scope": 2282,
                  "src": "3433:186:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2280,
                    "nodeType": "Block",
                    "src": "3816:112:13",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "3878:44:13",
                          "nodeType": "YulBlock",
                          "src": "3878:44:13",
                          "statements": [
                            {
                              "nativeSrc": "3892:20:13",
                              "nodeType": "YulAssignment",
                              "src": "3892:20:13",
                              "value": {
                                "name": "store.slot",
                                "nativeSrc": "3902:10:13",
                                "nodeType": "YulIdentifier",
                                "src": "3902:10:13"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "3892:6:13",
                                  "nodeType": "YulIdentifier",
                                  "src": "3892:6:13"
                                }
                              ]
                            }
                          ]
                        },
                        "documentation": "@solidity memory-safe-assembly",
                        "evmVersion": "cancun",
                        "externalReferences": [
                          {
                            "declaration": 2277,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3892:6:13",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2273,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3902:10:13",
                            "suffix": "slot",
                            "valueSize": 1
                          }
                        ],
                        "id": 2279,
                        "nodeType": "InlineAssembly",
                        "src": "3869:53:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2271,
                    "nodeType": "StructuredDocumentation",
                    "src": "3625:99:13",
                    "text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
                  },
                  "id": 2281,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBytesSlot",
                  "nameLocation": "3738:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2273,
                        "mutability": "mutable",
                        "name": "store",
                        "nameLocation": "3765:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2281,
                        "src": "3751:19:13",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2272,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3751:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3750:21:13"
                  },
                  "returnParameters": {
                    "id": 2278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2277,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3813:1:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2281,
                        "src": "3795:19:13",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BytesSlot_$2193_storage_ptr",
                          "typeString": "struct StorageSlot.BytesSlot"
                        },
                        "typeName": {
                          "id": 2276,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2275,
                            "name": "BytesSlot",
                            "nameLocations": [
                              "3795:9:13"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2193,
                            "src": "3795:9:13"
                          },
                          "referencedDeclaration": 2193,
                          "src": "3795:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BytesSlot_$2193_storage_ptr",
                            "typeString": "struct StorageSlot.BytesSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3794:21:13"
                  },
                  "scope": 2282,
                  "src": "3729:199:13",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2283,
              "src": "1245:2685:13",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "193:3738:13"
        },
        "id": 13
      },
      "DragonDrink.sol": {
        "ast": {
          "absolutePath": "DragonDrink.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              1355
            ],
            "DragonDrink": [
              2457
            ],
            "ERC1967Utils": [
              1805
            ],
            "ERC20BurnableUpgradeable": [
              1309
            ],
            "ERC20Upgradeable": [
              1247
            ],
            "IERC1822Proxiable": [
              1365
            ],
            "IERC20": [
              1893
            ],
            "IERC20Errors": [
              1407
            ],
            "IERC20Metadata": [
              1919
            ],
            "Initializable": [
              448
            ],
            "OwnableUpgradeable": [
              194
            ],
            "UUPSUpgradeable": [
              630
            ]
          },
          "id": 2458,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2284,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:14"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
              "id": 2285,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2458,
              "sourceUnit": 1248,
              "src": "61:78:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
              "id": 2286,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2458,
              "sourceUnit": 1310,
              "src": "141:97:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
              "id": 2287,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2458,
              "sourceUnit": 195,
              "src": "240:75:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "id": 2288,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2458,
              "sourceUnit": 449,
              "src": "317:75:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
              "id": 2289,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2458,
              "sourceUnit": 631,
              "src": "394:77:14",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2290,
                    "name": "Initializable",
                    "nameLocations": [
                      "499:13:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 448,
                    "src": "499:13:14"
                  },
                  "id": 2291,
                  "nodeType": "InheritanceSpecifier",
                  "src": "499:13:14"
                },
                {
                  "baseName": {
                    "id": 2292,
                    "name": "ERC20Upgradeable",
                    "nameLocations": [
                      "514:16:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1247,
                    "src": "514:16:14"
                  },
                  "id": 2293,
                  "nodeType": "InheritanceSpecifier",
                  "src": "514:16:14"
                },
                {
                  "baseName": {
                    "id": 2294,
                    "name": "ERC20BurnableUpgradeable",
                    "nameLocations": [
                      "532:24:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1309,
                    "src": "532:24:14"
                  },
                  "id": 2295,
                  "nodeType": "InheritanceSpecifier",
                  "src": "532:24:14"
                },
                {
                  "baseName": {
                    "id": 2296,
                    "name": "OwnableUpgradeable",
                    "nameLocations": [
                      "558:18:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 194,
                    "src": "558:18:14"
                  },
                  "id": 2297,
                  "nodeType": "InheritanceSpecifier",
                  "src": "558:18:14"
                },
                {
                  "baseName": {
                    "id": 2298,
                    "name": "UUPSUpgradeable",
                    "nameLocations": [
                      "578:15:14"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 630,
                    "src": "578:15:14"
                  },
                  "id": 2299,
                  "nodeType": "InheritanceSpecifier",
                  "src": "578:15:14"
                }
              ],
              "canonicalName": "DragonDrink",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2457,
              "linearizedBaseContracts": [
                2457,
                630,
                1365,
                194,
                1309,
                1247,
                1407,
                1919,
                1893,
                1355,
                448
              ],
              "name": "DragonDrink",
              "nameLocation": "484:11:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "6a6940cc",
                  "id": 2301,
                  "mutability": "mutable",
                  "name": "questContract",
                  "nameLocation": "616:13:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "601:28:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fe5a45d0",
                  "id": 2303,
                  "mutability": "mutable",
                  "name": "dailyCheckContract",
                  "nameLocation": "651:18:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "636:33:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "423b1ca3",
                  "id": 2305,
                  "mutability": "mutable",
                  "name": "battleContract",
                  "nameLocation": "691:14:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "676:29:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "676:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "55ccbff7",
                  "id": 2307,
                  "mutability": "mutable",
                  "name": "exploreContract",
                  "nameLocation": "727:15:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2457,
                  "src": "712:30:14",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7b47457f3af09e5f794b020fd74160963a808f5985883496a096d403d380c343",
                  "id": 2313,
                  "name": "MintTokens",
                  "nameLocation": "757:10:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2309,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "784:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2313,
                        "src": "768:18:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "768:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2311,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "796:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2313,
                        "src": "788:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "788:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "767:36:14"
                  },
                  "src": "751:53:14"
                },
                {
                  "body": {
                    "id": 2319,
                    "nodeType": "Block",
                    "src": "826:41:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2316,
                            "name": "_disableInitializers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "837:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "837:22:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2318,
                        "nodeType": "ExpressionStatement",
                        "src": "837:22:14"
                      }
                    ]
                  },
                  "id": 2320,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2314,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "823:2:14"
                  },
                  "returnParameters": {
                    "id": 2315,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "826:0:14"
                  },
                  "scope": 2457,
                  "src": "812:55:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2342,
                    "nodeType": "Block",
                    "src": "934:160:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "447261676f6e4472696e6b",
                              "id": 2328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "958:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1caac754afcf3b0ea08c1d668b34a9ea59aec7a097a79a7fe3ae3284854d6cbb",
                                "typeString": "literal_string \"DragonDrink\""
                              },
                              "value": "DragonDrink"
                            },
                            {
                              "hexValue": "44444b",
                              "id": 2329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "973:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_87deab1bed6bfcd70e40ffd92c4dadaa2c31a63700676a0bb39a2d8a7651fa64",
                                "typeString": "literal_string \"DDK\""
                              },
                              "value": "DDK"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1caac754afcf3b0ea08c1d668b34a9ea59aec7a097a79a7fe3ae3284854d6cbb",
                                "typeString": "literal_string \"DragonDrink\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_87deab1bed6bfcd70e40ffd92c4dadaa2c31a63700676a0bb39a2d8a7651fa64",
                                "typeString": "literal_string \"DDK\""
                              }
                            ],
                            "id": 2327,
                            "name": "__ERC20_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "945:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory)"
                            }
                          },
                          "id": 2330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "945:34:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2331,
                        "nodeType": "ExpressionStatement",
                        "src": "945:34:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2332,
                            "name": "__ERC20Burnable_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1268,
                            "src": "990:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "990:22:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2334,
                        "nodeType": "ExpressionStatement",
                        "src": "990:22:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2336,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2322,
                              "src": "1038:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2335,
                            "name": "__Ownable_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "1023:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1023:28:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2338,
                        "nodeType": "ExpressionStatement",
                        "src": "1023:28:14"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2339,
                            "name": "__UUPSUpgradeable_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "1062:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1062:24:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2341,
                        "nodeType": "ExpressionStatement",
                        "src": "1062:24:14"
                      }
                    ]
                  },
                  "functionSelector": "c4d66de8",
                  "id": 2343,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2325,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2324,
                        "name": "initializer",
                        "nameLocations": [
                          "915:11:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 302,
                        "src": "915:11:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "915:11:14"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "882:10:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2323,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2322,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "901:12:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2343,
                        "src": "893:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "893:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "892:22:14"
                  },
                  "returnParameters": {
                    "id": 2326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "934:0:14"
                  },
                  "scope": 2457,
                  "src": "873:221:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2354,
                    "nodeType": "Block",
                    "src": "1171:49:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2350,
                            "name": "questContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2301,
                            "src": "1182:13:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2351,
                            "name": "_questContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2345,
                            "src": "1198:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1182:30:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2353,
                        "nodeType": "ExpressionStatement",
                        "src": "1182:30:14"
                      }
                    ]
                  },
                  "functionSelector": "7fae588d",
                  "id": 2355,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2348,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2347,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1161:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "1161:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1161:9:14"
                    }
                  ],
                  "name": "setQuestContract",
                  "nameLocation": "1111:16:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2345,
                        "mutability": "mutable",
                        "name": "_questContract",
                        "nameLocation": "1136:14:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2355,
                        "src": "1128:22:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2344,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1128:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1127:24:14"
                  },
                  "returnParameters": {
                    "id": 2349,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1171:0:14"
                  },
                  "scope": 2457,
                  "src": "1102:118:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2366,
                    "nodeType": "Block",
                    "src": "1307:59:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2362,
                            "name": "dailyCheckContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2303,
                            "src": "1318:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2363,
                            "name": "_dailyCheckContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2357,
                            "src": "1339:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1318:40:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2365,
                        "nodeType": "ExpressionStatement",
                        "src": "1318:40:14"
                      }
                    ]
                  },
                  "functionSelector": "21098461",
                  "id": 2367,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2360,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2359,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1297:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "1297:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1297:9:14"
                    }
                  ],
                  "name": "setDailyCheckContract",
                  "nameLocation": "1237:21:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2358,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2357,
                        "mutability": "mutable",
                        "name": "_dailyCheckContract",
                        "nameLocation": "1267:19:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2367,
                        "src": "1259:27:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2356,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1259:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1258:29:14"
                  },
                  "returnParameters": {
                    "id": 2361,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1307:0:14"
                  },
                  "scope": 2457,
                  "src": "1228:138:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2378,
                    "nodeType": "Block",
                    "src": "1445:51:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2374,
                            "name": "battleContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2305,
                            "src": "1456:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2375,
                            "name": "_battleContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2369,
                            "src": "1473:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1456:32:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2377,
                        "nodeType": "ExpressionStatement",
                        "src": "1456:32:14"
                      }
                    ]
                  },
                  "functionSelector": "0db6dff7",
                  "id": 2379,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2372,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2371,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1435:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "1435:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1435:9:14"
                    }
                  ],
                  "name": "setBattleContract",
                  "nameLocation": "1383:17:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2369,
                        "mutability": "mutable",
                        "name": "_battleContract",
                        "nameLocation": "1409:15:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2379,
                        "src": "1401:23:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2368,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1401:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1400:25:14"
                  },
                  "returnParameters": {
                    "id": 2373,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1445:0:14"
                  },
                  "scope": 2457,
                  "src": "1374:122:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2390,
                    "nodeType": "Block",
                    "src": "1577:53:14",
                    "statements": [
                      {
                        "expression": {
                          "id": 2388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2386,
                            "name": "exploreContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2307,
                            "src": "1588:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2387,
                            "name": "_exploreContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2381,
                            "src": "1606:16:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1588:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2389,
                        "nodeType": "ExpressionStatement",
                        "src": "1588:34:14"
                      }
                    ]
                  },
                  "functionSelector": "e4b8c4d4",
                  "id": 2391,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2384,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2383,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1567:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "1567:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1567:9:14"
                    }
                  ],
                  "name": "setExploreContract",
                  "nameLocation": "1513:18:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2382,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2381,
                        "mutability": "mutable",
                        "name": "_exploreContract",
                        "nameLocation": "1540:16:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2391,
                        "src": "1532:24:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2380,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1532:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1531:26:14"
                  },
                  "returnParameters": {
                    "id": 2385,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1577:0:14"
                  },
                  "scope": 2457,
                  "src": "1504:126:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2414,
                    "nodeType": "Block",
                    "src": "1690:288:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2399,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2393,
                              "src": "1900:2:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2400,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2395,
                                "src": "1904:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2404,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 2401,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1914:2:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 2402,
                                        "name": "decimals",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 767,
                                        "src": "1918:8:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                          "typeString": "function () view returns (uint8)"
                                        }
                                      },
                                      "id": 2403,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1918:10:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "1914:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2405,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1913:16:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1904:25:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2398,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1079,
                            "src": "1894:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1894:36:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2408,
                        "nodeType": "ExpressionStatement",
                        "src": "1894:36:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2410,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2393,
                              "src": "1959:2:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2411,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
                              "src": "1963:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2409,
                            "name": "MintTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2313,
                            "src": "1948:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1948:22:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2413,
                        "nodeType": "EmitStatement",
                        "src": "1943:27:14"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 2415,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "1648:4:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2393,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1661:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2415,
                        "src": "1653:10:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1653:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2395,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1673:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2415,
                        "src": "1665:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1665:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1652:28:14"
                  },
                  "returnParameters": {
                    "id": 2397,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1690:0:14"
                  },
                  "scope": 2457,
                  "src": "1639:339:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    584
                  ],
                  "body": {
                    "id": 2423,
                    "nodeType": "Block",
                    "src": "2100:2:14",
                    "statements": []
                  },
                  "id": 2424,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2420,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2419,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2067:9:14"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "2067:9:14"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2067:9:14"
                    }
                  ],
                  "name": "_authorizeUpgrade",
                  "nameLocation": "1995:17:14",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2421,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2086:8:14"
                  },
                  "parameters": {
                    "id": 2418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2417,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "2021:17:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2424,
                        "src": "2013:25:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2013:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2012:27:14"
                  },
                  "returnParameters": {
                    "id": 2422,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2100:0:14"
                  },
                  "scope": 2457,
                  "src": "1986:116:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    827
                  ],
                  "body": {
                    "id": 2438,
                    "nodeType": "Block",
                    "src": "2255:51:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5472616e7366657273206172652064697361626c6564",
                              "id": 2435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2273:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce",
                                "typeString": "literal_string \"Transfers are disabled\""
                              },
                              "value": "Transfers are disabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce",
                                "typeString": "literal_string \"Transfers are disabled\""
                              }
                            ],
                            "id": 2434,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "2266:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 2436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2266:32:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2437,
                        "nodeType": "ExpressionStatement",
                        "src": "2266:32:14"
                      }
                    ]
                  },
                  "functionSelector": "a9059cbb",
                  "id": 2439,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "2180:8:14",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2430,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2231:8:14"
                  },
                  "parameters": {
                    "id": 2429,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2426,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2197:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2439,
                        "src": "2189:17:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2425,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2189:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2428,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2216:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2439,
                        "src": "2208:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2427,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2208:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2188:35:14"
                  },
                  "returnParameters": {
                    "id": 2433,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2432,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2439,
                        "src": "2249:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2431,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2249:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2248:6:14"
                  },
                  "scope": 2457,
                  "src": "2171:135:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    907
                  ],
                  "body": {
                    "id": 2455,
                    "nodeType": "Block",
                    "src": "2418:51:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5472616e7366657273206172652064697361626c6564",
                              "id": 2452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2436:24:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce",
                                "typeString": "literal_string \"Transfers are disabled\""
                              },
                              "value": "Transfers are disabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1fca7eac501747664c1c9bb25963c5018df5ccc972589d6bb5185a71d6ef8fce",
                                "typeString": "literal_string \"Transfers are disabled\""
                              }
                            ],
                            "id": 2451,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "2429:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 2453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2429:32:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2454,
                        "nodeType": "ExpressionStatement",
                        "src": "2429:32:14"
                      }
                    ]
                  },
                  "functionSelector": "23b872dd",
                  "id": 2456,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2323:12:14",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2447,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2394:8:14"
                  },
                  "parameters": {
                    "id": 2446,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2441,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2344:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2456,
                        "src": "2336:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2440,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2336:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2443,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2360:9:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2456,
                        "src": "2352:17:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2442,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2352:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2445,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2379:6:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2456,
                        "src": "2371:14:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2444,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2371:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2335:51:14"
                  },
                  "returnParameters": {
                    "id": 2450,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2449,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2456,
                        "src": "2412:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2448,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2412:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2411:6:14"
                  },
                  "scope": 2457,
                  "src": "2314:155:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2458,
              "src": "475:1997:14",
              "usedErrors": [
                30,
                35,
                211,
                214,
                475,
                480,
                1377,
                1382,
                1387,
                1396,
                1401,
                1406,
                1537,
                1550,
                1932,
                1935
              ],
              "usedEvents": [
                41,
                219,
                1516,
                1827,
                1836,
                2313
              ]
            }
          ],
          "src": "33:2439:14"
        },
        "id": 14
      }
    }
  }
}